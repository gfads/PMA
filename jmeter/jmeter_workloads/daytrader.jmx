<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="DayTrader8" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        <stringProp name="CookieManager.policy">rfc2109</stringProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; .NET CLR 1.1.4322)</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-us</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="minimumuid" elementType="Argument">
            <stringProp name="Argument.name">minimumuid</stringProp>
            <stringProp name="Argument.value">${__P(BOTUID,0)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="maximumuid" elementType="Argument">
            <stringProp name="Argument.name">maximumuid</stringProp>
            <stringProp name="Argument.value">${__P(TOPUID,199)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hostname" elementType="Argument">
            <stringProp name="Argument.name">hostname</stringProp>
            <stringProp name="Argument.value">${__P(HOST,localhost)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">${__P(HOST,localhost)}</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(PORT,30088)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">${__P(PORT,30088)}</stringProp>
          </elementProp>
          <elementProp name="maxthinkingtime" elementType="Argument">
            <stringProp name="Argument.name">maxthinkingtime</stringProp>
            <stringProp name="Argument.value">${__P(MAXTHINKTIME,1000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="maximumsid" elementType="Argument">
            <stringProp name="Argument.name">maximumsid</stringProp>
            <stringProp name="Argument.value">${__P(STOCKS,499)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(PROTOCOL,http)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">http | https</stringProp>
          </elementProp>
          <elementProp name="throughput" elementType="Argument">
            <stringProp name="Argument.name">throughput</stringProp>
            <stringProp name="Argument.value">${__P(THROUGHPUT,60)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ratio" elementType="Argument">
            <stringProp name="Argument.name">ratio</stringProp>
            <stringProp name="Argument.value">${__P(RATIO,0.5)}</stringProp>
            <stringProp name="Argument.desc">0&lt;=x&lt;=1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">${__P(THREADS,50)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wait_resp" elementType="Argument">
            <stringProp name="Argument.name">wait_resp</stringProp>
            <stringProp name="Argument.value">${__P(WAIT_RESP,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">${minimumuid}</stringProp>
        <stringProp name="CounterConfig.end">${maximumuid}</stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">logincounter</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NASATraining" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="NASATraining" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-520843584">
              <stringProp name="1">144.50109477635283</stringProp>
              <stringProp name="2">144.50109477635283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1336480288">
              <stringProp name="2">123.64821186529036</stringProp>
              <stringProp name="3">123.64821186529036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1107980064">
              <stringProp name="3">108.94692941299137</stringProp>
              <stringProp name="4">108.94692941299137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-439124672">
              <stringProp name="4">101.85694922323007</stringProp>
              <stringProp name="5">101.85694922323007</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1393257760">
              <stringProp name="5">111.13648211865288</stringProp>
              <stringProp name="6">111.13648211865288</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-110678784">
              <stringProp name="6">121.14586591596289</stringProp>
              <stringProp name="7">121.14586591596289</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="71064704">
              <stringProp name="7">102.37827129600667</stringProp>
              <stringProp name="8">102.37827129600667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1280877184">
              <stringProp name="8">153.25930559899908</stringProp>
              <stringProp name="9">153.25930559899908</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-218039609">
              <stringProp name="9">136.99405692837036</stringProp>
              <stringProp name="10">136.99405692837036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="819698016">
              <stringProp name="10">162.33030966531123</stringProp>
              <stringProp name="11">162.33030966531123</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="30512000">
              <stringProp name="11">198.61432593055991</stringProp>
              <stringProp name="12">198.61432593055991</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="98695168">
              <stringProp name="12">262.5284120529663</stringProp>
              <stringProp name="13">262.5284120529663</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-75251936">
              <stringProp name="13">245.2205192367845</stringProp>
              <stringProp name="14">245.2205192367845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1505352064">
              <stringProp name="14">245.74184130956107</stringProp>
              <stringProp name="15">245.74184130956107</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1527154560">
              <stringProp name="15">189.1262642060265</stringProp>
              <stringProp name="16">189.1262642060265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="251559392">
              <stringProp name="16">227.2870399332708</stringProp>
              <stringProp name="17">227.2870399332708</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="974379552">
              <stringProp name="17">218.63309352517987</stringProp>
              <stringProp name="18">218.63309352517987</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1175741664">
              <stringProp name="18">244.4906683348973</stringProp>
              <stringProp name="19">244.4906683348973</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="103408759">
              <stringProp name="19">249.1825669898864</stringProp>
              <stringProp name="20">249.1825669898864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-536902400">
              <stringProp name="20">234.1684912939214</stringProp>
              <stringProp name="21">234.1684912939214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-969118912">
              <stringProp name="21">281.40027108747785</stringProp>
              <stringProp name="22">281.40027108747785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1282036128">
              <stringProp name="22">263.2582629548535</stringProp>
              <stringProp name="23">263.2582629548535</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-891192640">
              <stringProp name="23">239.69450526535292</stringProp>
              <stringProp name="24">239.69450526535292</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2892896">
              <stringProp name="24">220.1970597435096</stringProp>
              <stringProp name="25">220.1970597435096</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="648844864">
              <stringProp name="25">200.2825565634449</stringProp>
              <stringProp name="26">200.2825565634449</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="338783360">
              <stringProp name="26">224.5761651548327</stringProp>
              <stringProp name="27">224.5761651548327</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1307109152">
              <stringProp name="27">268.05442602439786</stringProp>
              <stringProp name="28">268.05442602439786</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1836729984">
              <stringProp name="28">255.85548952142636</stringProp>
              <stringProp name="29">255.85548952142636</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1813536745">
              <stringProp name="29">227.18277551871543</stringProp>
              <stringProp name="30">227.18277551871543</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1226143328">
              <stringProp name="30">233.64716922114485</stringProp>
              <stringProp name="31">233.64716922114485</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="958015584">
              <stringProp name="31">190.27317276613493</stringProp>
              <stringProp name="32">190.27317276613493</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="457012064">
              <stringProp name="32">202.0550516108852</stringProp>
              <stringProp name="33">202.0550516108852</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="600328256">
              <stringProp name="33">202.26358043999585</stringProp>
              <stringProp name="34">202.26358043999585</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1175765376">
              <stringProp name="34">187.4580335731415</stringProp>
              <stringProp name="35">187.4580335731415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-764332640">
              <stringProp name="35">112.70044833698256</stringProp>
              <stringProp name="36">112.70044833698256</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1580696480">
              <stringProp name="36">118.33072672296944</stringProp>
              <stringProp name="37">118.33072672296944</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-873942464">
              <stringProp name="37">101.12709832134291</stringProp>
              <stringProp name="38">101.12709832134291</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="559555392">
              <stringProp name="38">98.31195912834949</stringProp>
              <stringProp name="39">98.31195912834949</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1994014569">
              <stringProp name="39">103.21238661244917</stringProp>
              <stringProp name="40">103.21238661244917</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2059504480">
              <stringProp name="40">100.0844541757898</stringProp>
              <stringProp name="41">100.0844541757898</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="319970176">
              <stringProp name="41">98.4162235429048</stringProp>
              <stringProp name="42">98.4162235429048</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1013499680">
              <stringProp name="42">88.40683974559481</stringProp>
              <stringProp name="43">88.40683974559481</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-737642528">
              <stringProp name="43">114.68147221353352</stringProp>
              <stringProp name="44">114.68147221353352</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-789928512">
              <stringProp name="44">127.71452403294757</stringProp>
              <stringProp name="45">127.71452403294757</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1427537184">
              <stringProp name="45">153.36357001355438</stringProp>
              <stringProp name="46">153.36357001355438</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-232342048">
              <stringProp name="46">170.87999165884685</stringProp>
              <stringProp name="47">170.87999165884685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2095897632">
              <stringProp name="47">162.8516317380878</stringProp>
              <stringProp name="48">162.8516317380878</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1970101408">
              <stringProp name="48">235.73245751225107</stringProp>
              <stringProp name="49">235.73245751225107</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="672272791">
              <stringProp name="49">223.9505786675008</stringProp>
              <stringProp name="50">223.9505786675008</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1167806880">
              <stringProp name="50">218.1117714524033</stringProp>
              <stringProp name="51">218.1117714524033</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-854154144">
              <stringProp name="51">229.37232822437704</stringProp>
              <stringProp name="52">229.37232822437704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="923754560">
              <stringProp name="52">230.6235011990408</stringProp>
              <stringProp name="53">230.6235011990408</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1243388640">
              <stringProp name="53">198.7185903451152</stringProp>
              <stringProp name="54">198.7185903451152</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1178041024">
              <stringProp name="54">187.4580335731415</stringProp>
              <stringProp name="55">187.4580335731415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1260502560">
              <stringProp name="55">103.73370868522574</stringProp>
              <stringProp name="56">103.73370868522574</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1853418688">
              <stringProp name="56">283.9026170368053</stringProp>
              <stringProp name="57">283.9026170368053</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1489112384">
              <stringProp name="57">242.718173287457</stringProp>
              <stringProp name="58">242.718173287457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-715950272">
              <stringProp name="58">239.79876967990828</stringProp>
              <stringProp name="59">239.79876967990828</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-696619241">
              <stringProp name="59">207.78959441142737</stringProp>
              <stringProp name="60">207.78959441142737</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="473412320">
              <stringProp name="60">223.1164633510583</stringProp>
              <stringProp name="61">223.1164633510583</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-275980352">
              <stringProp name="61">214.04545928474613</stringProp>
              <stringProp name="62">214.04545928474613</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1925005248">
              <stringProp name="62">251.3721196955479</stringProp>
              <stringProp name="63">251.3721196955479</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="385764416">
              <stringProp name="63">254.29152330309665</stringProp>
              <stringProp name="64">254.29152330309665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="473181984">
              <stringProp name="64">305.3810864351996</stringProp>
              <stringProp name="65">305.3810864351996</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="14095840">
              <stringProp name="65">277.12543009071</stringProp>
              <stringProp name="66">277.12543009071</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="513305248">
              <stringProp name="66">232.6045250755917</stringProp>
              <stringProp name="67">232.6045250755917</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2017449472">
              <stringProp name="67">203.5147534146596</stringProp>
              <stringProp name="68">203.5147534146596</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-368103488">
              <stringProp name="68">180.6808466270462</stringProp>
              <stringProp name="69">180.6808466270462</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-478160329">
              <stringProp name="69">166.81367949118967</stringProp>
              <stringProp name="70">166.81367949118967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="427682464">
              <stringProp name="70">155.34459389010533</stringProp>
              <stringProp name="71">155.34459389010533</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1761056832">
              <stringProp name="71">164.6241267855281</stringProp>
              <stringProp name="72">164.6241267855281</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1805899360">
              <stringProp name="72">119.16484203941197</stringProp>
              <stringProp name="73">119.16484203941197</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="210803840">
              <stringProp name="73">115.82838077364195</stringProp>
              <stringProp name="74">115.82838077364195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1863433984">
              <stringProp name="74">142.31154207069127</stringProp>
              <stringProp name="75">142.31154207069127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1824333632">
              <stringProp name="75">121.45865915962882</stringProp>
              <stringProp name="76">121.45865915962882</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="122289888">
              <stringProp name="76">189.960379522469</stringProp>
              <stringProp name="77">189.960379522469</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1024817856">
              <stringProp name="77">239.381712021687</stringProp>
              <stringProp name="78">239.381712021687</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="215004544">
              <stringProp name="78">266.49045980606815</stringProp>
              <stringProp name="79">266.49045980606815</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1598753609">
              <stringProp name="79">329.46616619747675</stringProp>
              <stringProp name="80">329.46616619747675</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-329731104">
              <stringProp name="80">367.0013554373893</stringProp>
              <stringProp name="81">367.0013554373893</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="814457952">
              <stringProp name="81">340.6224585548952</stringProp>
              <stringProp name="82">340.6224585548952</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1852598720">
              <stringProp name="82">369.0866437284954</stringProp>
              <stringProp name="83">369.0866437284954</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-104596032">
              <stringProp name="83">343.12480450422265</stringProp>
              <stringProp name="84">343.12480450422265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1235077472">
              <stringProp name="84">441.9674695026587</stringProp>
              <stringProp name="85">441.9674695026587</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1235114176">
              <stringProp name="85">441.9674695026587</stringProp>
              <stringProp name="86">441.9674695026587</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-148085440">
              <stringProp name="86">455.417578980294</stringProp>
              <stringProp name="87">455.417578980294</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1243158656">
              <stringProp name="87">385.45615681367946</stringProp>
              <stringProp name="88">385.45615681367946</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="230822656">
              <stringProp name="88">408.08153477218224</stringProp>
              <stringProp name="89">408.08153477218224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="418436087">
              <stringProp name="89">416.1098946929413</stringProp>
              <stringProp name="90">416.1098946929413</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2138476896">
              <stringProp name="90">385.1433635700136</stringProp>
              <stringProp name="91">385.1433635700136</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2099331872">
              <stringProp name="91">309.7601918465228</stringProp>
              <stringProp name="92">309.7601918465228</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1642203424">
              <stringProp name="92">254.70858096131784</stringProp>
              <stringProp name="93">254.70858096131784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="753388352">
              <stringProp name="93">248.9740381607757</stringProp>
              <stringProp name="94">248.9740381607757</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="133820352">
              <stringProp name="94">252.93608591387755</stringProp>
              <stringProp name="95">252.93608591387755</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-865034112">
              <stringProp name="95">129.0699614221666</stringProp>
              <stringProp name="96">129.0699614221666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-501439008">
              <stringProp name="96">280.5661557710353</stringProp>
              <stringProp name="97">280.5661557710353</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2087700864">
              <stringProp name="97">282.3386508184756</stringProp>
              <stringProp name="98">282.3386508184756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1773196288">
              <stringProp name="98">254.1872588885413</stringProp>
              <stringProp name="99">254.1872588885413</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-564554576">
              <stringProp name="99">245.53331248045043</stringProp>
              <stringProp name="100">245.53331248045043</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-831892128">
              <stringProp name="100">294.3290584923365</stringProp>
              <stringProp name="101">294.3290584923365</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1730617600">
              <stringProp name="101">235.21113543947453</stringProp>
              <stringProp name="102">235.21113543947453</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2044013728">
              <stringProp name="102">238.5475967052445</stringProp>
              <stringProp name="103">238.5475967052445</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1223323808">
              <stringProp name="103">196.5290376394537</stringProp>
              <stringProp name="104">196.5290376394537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1820434048">
              <stringProp name="104">222.3866124491711</stringProp>
              <stringProp name="105">222.3866124491711</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1690111136">
              <stringProp name="105">164.41559795641749</stringProp>
              <stringProp name="106">164.41559795641749</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1645589472">
              <stringProp name="106">136.15994161192785</stringProp>
              <stringProp name="107">136.15994161192785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1537062400">
              <stringProp name="107">135.95141278281724</stringProp>
              <stringProp name="108">135.95141278281724</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="468152448">
              <stringProp name="108">123.1268897925138</stringProp>
              <stringProp name="109">123.1268897925138</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1537159895">
              <stringProp name="109">135.95141278281724</stringProp>
              <stringProp name="110">135.95141278281724</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-211228832">
              <stringProp name="110">129.7998123240538</stringProp>
              <stringProp name="111">129.7998123240538</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-989416128">
              <stringProp name="111">148.98446460223127</stringProp>
              <stringProp name="112">148.98446460223127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1336244960">
              <stringProp name="112">184.0173078928162</stringProp>
              <stringProp name="113">184.0173078928162</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1932711296">
              <stringProp name="113">224.2633719111667</stringProp>
              <stringProp name="114">224.2633719111667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1795693024">
              <stringProp name="114">233.9599624648108</stringProp>
              <stringProp name="115">233.9599624648108</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1410519520">
              <stringProp name="115">246.9930142842248</stringProp>
              <stringProp name="116">246.9930142842248</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1788150912">
              <stringProp name="116">266.17766656240224</stringProp>
              <stringProp name="117">266.17766656240224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1629673344">
              <stringProp name="117">272.32926702116566</stringProp>
              <stringProp name="118">272.32926702116566</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1615368448">
              <stringProp name="118">258.3578354707538</stringProp>
              <stringProp name="119">258.3578354707538</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1539208233">
              <stringProp name="119">258.67062871441976</stringProp>
              <stringProp name="120">258.67062871441976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-46000224">
              <stringProp name="120">258.98342195808567</stringProp>
              <stringProp name="121">258.98342195808567</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1191488960">
              <stringProp name="121">234.1684912939214</stringProp>
              <stringProp name="122">234.1684912939214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="855207648">
              <stringProp name="122">266.07340214784693</stringProp>
              <stringProp name="123">266.07340214784693</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="242102368">
              <stringProp name="123">319.56104681472215</stringProp>
              <stringProp name="124">319.56104681472215</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-407815200">
              <stringProp name="124">299.95933687832337</stringProp>
              <stringProp name="125">299.95933687832337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1002164800">
              <stringProp name="125">267.2203107079554</stringProp>
              <stringProp name="126">267.2203107079554</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="718613824">
              <stringProp name="126">254.6043165467626</stringProp>
              <stringProp name="127">254.6043165467626</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1379937344">
              <stringProp name="127">218.2160358669586</stringProp>
              <stringProp name="128">218.2160358669586</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="881511872">
              <stringProp name="128">203.82754665832556</stringProp>
              <stringProp name="129">203.82754665832556</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="390200823">
              <stringProp name="129">219.78000208528832</stringProp>
              <stringProp name="130">219.78000208528832</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-400324384">
              <stringProp name="130">205.60004170576585</stringProp>
              <stringProp name="131">205.60004170576585</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1584443936">
              <stringProp name="131">198.30153268689395</stringProp>
              <stringProp name="132">198.30153268689395</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1449068192">
              <stringProp name="132">223.3249921801689</stringProp>
              <stringProp name="133">223.3249921801689</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1154022016">
              <stringProp name="133">213.6284016265249</stringProp>
              <stringProp name="134">213.6284016265249</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-878738816">
              <stringProp name="134">252.83182149932227</stringProp>
              <stringProp name="135">252.83182149932227</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-168727744">
              <stringProp name="135">241.7797935564592</stringProp>
              <stringProp name="136">241.7797935564592</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="369752800">
              <stringProp name="136">185.5812741111459</stringProp>
              <stringProp name="137">185.5812741111459</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1618416640">
              <stringProp name="137">144.9181524345741</stringProp>
              <stringProp name="138">144.9181524345741</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="485499552">
              <stringProp name="138">159.4109060577625</stringProp>
              <stringProp name="139">159.4109060577625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1307463255">
              <stringProp name="139">152.42519028255657</stringProp>
              <stringProp name="140">152.42519028255657</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-511909440">
              <stringProp name="140">152.6337191116672</stringProp>
              <stringProp name="141">152.6337191116672</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-774219616">
              <stringProp name="141">121.2501303305182</stringProp>
              <stringProp name="142">121.2501303305182</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1307358016">
              <stringProp name="142">103.73370868522574</stringProp>
              <stringProp name="143">103.73370868522574</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2114959648">
              <stringProp name="143">133.24053800437912</stringProp>
              <stringProp name="144">133.24053800437912</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="252744544">
              <stringProp name="144">133.9703889062663</stringProp>
              <stringProp name="145">133.9703889062663</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1460232064">
              <stringProp name="145">166.50088624752374</stringProp>
              <stringProp name="146">166.50088624752374</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1798700864">
              <stringProp name="146">89.34521947659265</stringProp>
              <stringProp name="147">89.34521947659265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="547743936">
              <stringProp name="147">26.05671984151809</stringProp>
              <stringProp name="148">26.05671984151809</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2137930528">
              <stringProp name="148">271.1823584610572</stringProp>
              <stringProp name="149">271.1823584610572</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="841360055">
              <stringProp name="149">293.9120008341153</stringProp>
              <stringProp name="150">293.9120008341153</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1240061408">
              <stringProp name="150">340.7267229694505</stringProp>
              <stringProp name="151">340.7267229694505</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="976563648">
              <stringProp name="151">349.38066937754144</stringProp>
              <stringProp name="152">349.38066937754144</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2036475136">
              <stringProp name="152">385.0390991554582</stringProp>
              <stringProp name="153">385.0390991554582</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="459314336">
              <stringProp name="153">475.123553331248</stringProp>
              <stringProp name="154">475.123553331248</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="354455680">
              <stringProp name="154">472.5169429673652</stringProp>
              <stringProp name="155">472.5169429673652</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2057316224">
              <stringProp name="155">431.0197059743509</stringProp>
              <stringProp name="156">431.0197059743509</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1065313664">
              <stringProp name="156">360.4326973204045</stringProp>
              <stringProp name="157">360.4326973204045</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="878106784">
              <stringProp name="157">595.3404233135232</stringProp>
              <stringProp name="158">595.3404233135232</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2141257920">
              <stringProp name="158">563.3312480450422</stringProp>
              <stringProp name="159">563.3312480450422</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-214901257">
              <stringProp name="159">475.7491398185799</stringProp>
              <stringProp name="160">475.7491398185799</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="687035168">
              <stringProp name="160">529.9666353873422</stringProp>
              <stringProp name="161">529.9666353873422</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1255271264">
              <stringProp name="161">431.5410280471274</stringProp>
              <stringProp name="162">431.5410280471274</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1436642848">
              <stringProp name="162">317.99708059639244</stringProp>
              <stringProp name="163">317.99708059639244</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2068087008">
              <stringProp name="163">307.8834323845272</stringProp>
              <stringProp name="164">307.8834323845272</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="347517600">
              <stringProp name="164">324.14868105515586</stringProp>
              <stringProp name="165">324.14868105515586</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1410065952">
              <stringProp name="165">240.00729850901888</stringProp>
              <stringProp name="166">240.00729850901888</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="903602368">
              <stringProp name="166">241.9883223855698</stringProp>
              <stringProp name="167">241.9883223855698</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2001728512">
              <stringProp name="167">250.5380043791054</stringProp>
              <stringProp name="168">250.5380043791054</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1108515808">
              <stringProp name="168">219.0501511834011</stringProp>
              <stringProp name="169">219.0501511834011</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="219836791">
              <stringProp name="169">240.9456782400167</stringProp>
              <stringProp name="170">240.9456782400167</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1618715712">
              <stringProp name="170">228.95527056615575</stringProp>
              <stringProp name="171">228.95527056615575</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-447848928">
              <stringProp name="171">196.32050881034303</stringProp>
              <stringProp name="172">196.32050881034303</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="622906400">
              <stringProp name="172">190.48170159524557</stringProp>
              <stringProp name="173">190.48170159524557</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="950580480">
              <stringProp name="173">150.1313731623397</stringProp>
              <stringProp name="174">150.1313731623397</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="725107232">
              <stringProp name="174">143.77124387446565</stringProp>
              <stringProp name="175">143.77124387446565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1182315776">
              <stringProp name="175">122.188510061516</stringProp>
              <stringProp name="176">122.188510061516</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="699783968">
              <stringProp name="176">120.20748618496506</stringProp>
              <stringProp name="177">120.20748618496506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-348010752">
              <stringProp name="177">111.2407465332082</stringProp>
              <stringProp name="178">111.2407465332082</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-687626368">
              <stringProp name="178">123.96100510895631</stringProp>
              <stringProp name="179">123.96100510895631</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1928459337">
              <stringProp name="179">113.847356897091</stringProp>
              <stringProp name="180">113.847356897091</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2026167200">
              <stringProp name="180">145.54373892190597</stringProp>
              <stringProp name="181">145.54373892190597</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="952464192">
              <stringProp name="181">175.15483265561463</stringProp>
              <stringProp name="182">175.15483265561463</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1813585888">
              <stringProp name="182">254.395787717652</stringProp>
              <stringProp name="183">254.395787717652</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1312666816">
              <stringProp name="183">307.15358148263994</stringProp>
              <stringProp name="184">307.15358148263994</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="663347904">
              <stringProp name="184">112.8047127515379</stringProp>
              <stringProp name="185">112.8047127515379</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1439525376">
              <stringProp name="185">380.24293608591387</stringProp>
              <stringProp name="186">380.24293608591387</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-795239200">
              <stringProp name="186">372.31884057971007</stringProp>
              <stringProp name="187">372.31884057971007</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1546929408">
              <stringProp name="187">458.96256907517466</stringProp>
              <stringProp name="188">458.96256907517466</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="888385568">
              <stringProp name="188">483.1519132520071</stringProp>
              <stringProp name="189">483.1519132520071</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1607709065">
              <stringProp name="189">448.11906996142216</stringProp>
              <stringProp name="190">448.11906996142216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-956376608">
              <stringProp name="190">515.7866750078198</stringProp>
              <stringProp name="191">515.7866750078198</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="684094048">
              <stringProp name="191">507.1327285997289</stringProp>
              <stringProp name="192">507.1327285997289</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-31381408">
              <stringProp name="192">524.2320925868001</stringProp>
              <stringProp name="193">524.2320925868001</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-44889408">
              <stringProp name="193">490.2418934417683</stringProp>
              <stringProp name="194">490.2418934417683</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-439331520">
              <stringProp name="194">544.0423313523094</stringProp>
              <stringProp name="195">544.0423313523094</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1134295008">
              <stringProp name="195">479.71118757168176</stringProp>
              <stringProp name="196">479.71118757168176</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1053564320">
              <stringProp name="196">414.75445730372223</stringProp>
              <stringProp name="197">414.75445730372223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2047514944">
              <stringProp name="197">411.1052027942863</stringProp>
              <stringProp name="198">411.1052027942863</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="820666432">
              <stringProp name="198">348.7550828902096</stringProp>
              <stringProp name="199">348.7550828902096</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-422956352">
              <stringProp name="199">312.8881242831821</stringProp>
              <stringProp name="200">312.8881242831821</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1701160384">
              <stringProp name="200">332.2813053904702</stringProp>
              <stringProp name="201">332.2813053904702</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-727638784">
              <stringProp name="201">287.0305494734647</stringProp>
              <stringProp name="202">287.0305494734647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-609103392">
              <stringProp name="202">225.30601605671984</stringProp>
              <stringProp name="203">225.30601605671984</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-990978464">
              <stringProp name="203">321.2292774476071</stringProp>
              <stringProp name="204">321.2292774476071</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1610841472">
              <stringProp name="204">284.7367323532478</stringProp>
              <stringProp name="205">284.7367323532478</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-354277984">
              <stringProp name="205">306.63225940986337</stringProp>
              <stringProp name="206">306.63225940986337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2113077824">
              <stringProp name="206">229.47659263893232</stringProp>
              <stringProp name="207">229.47659263893232</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="268863136">
              <stringProp name="207">170.77572724429152</stringProp>
              <stringProp name="208">170.77572724429152</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-530105600">
              <stringProp name="208">216.65206964862887</stringProp>
              <stringProp name="209">216.65206964862887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="356126679">
              <stringProp name="209">160.76634344698158</stringProp>
              <stringProp name="210">160.76634344698158</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1090813472">
              <stringProp name="210">155.03180064643936</stringProp>
              <stringProp name="211">155.03180064643936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="73019104">
              <stringProp name="211">118.64351996663537</stringProp>
              <stringProp name="212">118.64351996663537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1710426464">
              <stringProp name="212">116.87102491919504</stringProp>
              <stringProp name="213">116.87102491919504</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1179434848">
              <stringProp name="213">74.43540819518297</stringProp>
              <stringProp name="214">74.43540819518297</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="946153248">
              <stringProp name="214">77.66760504639765</stringProp>
              <stringProp name="215">77.66760504639765</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="703786304">
              <stringProp name="215">96.95652173913042</stringProp>
              <stringProp name="216">96.95652173913042</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1077825728">
              <stringProp name="216">96.33093525179856</stringProp>
              <stringProp name="217">96.33093525179856</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1390004992">
              <stringProp name="217">264.5094359295173</stringProp>
              <stringProp name="218">264.5094359295173</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2045581408">
              <stringProp name="218">371.90178292148886</stringProp>
              <stringProp name="219">371.90178292148886</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1725317385">
              <stringProp name="219">24.492753623188403</stringProp>
              <stringProp name="220">24.492753623188403</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="584573632">
              <stringProp name="220">91.01345010947765</stringProp>
              <stringProp name="221">91.01345010947765</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="892787936">
              <stringProp name="221">412.1478469398394</stringProp>
              <stringProp name="222">412.1478469398394</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="454084512">
              <stringProp name="222">448.8489208633093</stringProp>
              <stringProp name="223">448.8489208633093</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1336006304">
              <stringProp name="223">415.9013658638306</stringProp>
              <stringProp name="224">415.9013658638306</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="992414944">
              <stringProp name="224">489.9291001981024</stringProp>
              <stringProp name="225">489.9291001981024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1614511584">
              <stringProp name="225">486.48837451777706</stringProp>
              <stringProp name="226">486.48837451777706</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-771647328">
              <stringProp name="226">488.0523407361068</stringProp>
              <stringProp name="227">488.0523407361068</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-715310464">
              <stringProp name="227">438.735272651444</stringProp>
              <stringProp name="228">438.735272651444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-511562976">
              <stringProp name="228">348.5465540610989</stringProp>
              <stringProp name="229">348.5465540610989</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1609493911">
              <stringProp name="229">389.626733395892</stringProp>
              <stringProp name="230">389.626733395892</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1456119680">
              <stringProp name="230">437.4840996767803</stringProp>
              <stringProp name="231">437.4840996767803</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1153474816">
              <stringProp name="231">402.8683140444167</stringProp>
              <stringProp name="232">402.8683140444167</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-662362912">
              <stringProp name="232">362.3094567824001</stringProp>
              <stringProp name="233">362.3094567824001</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="854120544">
              <stringProp name="233">347.0868522573245</stringProp>
              <stringProp name="234">347.0868522573245</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1783601024">
              <stringProp name="234">256.79386925242414</stringProp>
              <stringProp name="235">256.79386925242414</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="709534112">
              <stringProp name="235">184.955687623814</stringProp>
              <stringProp name="236">184.955687623814</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-407586752">
              <stringProp name="236">198.40579710144928</stringProp>
              <stringProp name="237">198.40579710144928</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1017134944">
              <stringProp name="237">201.95078719632988</stringProp>
              <stringProp name="238">201.95078719632988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="535390880">
              <stringProp name="238">177.55291419038682</stringProp>
              <stringProp name="239">177.55291419038682</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-656176105">
              <stringProp name="239">194.4437493483474</stringProp>
              <stringProp name="240">194.4437493483474</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-262624896">
              <stringProp name="240">173.7993952663956</stringProp>
              <stringProp name="241">173.7993952663956</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1374894272">
              <stringProp name="241">184.0173078928162</stringProp>
              <stringProp name="242">184.0173078928162</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1127208576">
              <stringProp name="242">181.51496194348871</stringProp>
              <stringProp name="243">181.51496194348871</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-781111904">
              <stringProp name="243">196.8418308831196</stringProp>
              <stringProp name="244">196.8418308831196</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1964025760">
              <stringProp name="244">107.6957564383276</stringProp>
              <stringProp name="245">107.6957564383276</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="28531392">
              <stringProp name="245">119.06057762485662</stringProp>
              <stringProp name="246">119.06057762485662</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-779413568">
              <stringProp name="246">66.82410593264518</stringProp>
              <stringProp name="247">66.82410593264518</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1495867680">
              <stringProp name="247">73.39276404962985</stringProp>
              <stringProp name="248">73.39276404962985</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1801637664">
              <stringProp name="248">60.67250547388176</stringProp>
              <stringProp name="249">60.67250547388176</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1595331127">
              <stringProp name="249">55.14649150245021</stringProp>
              <stringProp name="250">55.14649150245021</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1417814176">
              <stringProp name="250">68.38807215097486</stringProp>
              <stringProp name="251">68.38807215097486</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="150926048">
              <stringProp name="251">66.51131268897925</stringProp>
              <stringProp name="252">66.51131268897925</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1295074144">
              <stringProp name="252">69.430716296528</stringProp>
              <stringProp name="253">69.430716296528</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-804864544">
              <stringProp name="253">62.44500052132207</stringProp>
              <stringProp name="254">62.44500052132207</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="524249248">
              <stringProp name="254">80.27421541028048</stringProp>
              <stringProp name="255">80.27421541028048</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2037223488">
              <stringProp name="255">96.6437284954645</stringProp>
              <stringProp name="256">96.6437284954645</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-160834784">
              <stringProp name="256">120.520279428631</stringProp>
              <stringProp name="257">120.520279428631</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1703747072">
              <stringProp name="257">143.3541862162444</stringProp>
              <stringProp name="258">143.3541862162444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1952211232">
              <stringProp name="258">117.39234699197164</stringProp>
              <stringProp name="259">117.39234699197164</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-669485065">
              <stringProp name="259">143.45845063079972</stringProp>
              <stringProp name="260">143.45845063079972</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1262582560">
              <stringProp name="260">112.59618392242729</stringProp>
              <stringProp name="261">112.59618392242729</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="376926624">
              <stringProp name="261">144.81388802001877</stringProp>
              <stringProp name="262">144.81388802001877</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="460239936">
              <stringProp name="262">165.04118444374936</stringProp>
              <stringProp name="263">165.04118444374936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-333703840">
              <stringProp name="263">182.9746637472631</stringProp>
              <stringProp name="264">182.9746637472631</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1735801088">
              <stringProp name="264">149.1929934313419</stringProp>
              <stringProp name="265">149.1929934313419</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="217070752">
              <stringProp name="265">177.65717860494215</stringProp>
              <stringProp name="266">177.65717860494215</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="181049728">
              <stringProp name="266">163.37295381086437</stringProp>
              <stringProp name="267">163.37295381086437</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="476977536">
              <stringProp name="267">183.39172140548436</stringProp>
              <stringProp name="268">183.39172140548436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1924539328">
              <stringProp name="268">132.51068710249191</stringProp>
              <stringProp name="269">132.51068710249191</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1969654039">
              <stringProp name="269">146.06506099468254</stringProp>
              <stringProp name="270">146.06506099468254</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="36646976">
              <stringProp name="270">133.55333124804503</stringProp>
              <stringProp name="271">133.55333124804503</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1603801856">
              <stringProp name="271">67.0326347617558</stringProp>
              <stringProp name="272">67.0326347617558</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1092437632">
              <stringProp name="272">95.39255552080074</stringProp>
              <stringProp name="273">95.39255552080074</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1282887680">
              <stringProp name="273">137.82817224481286</stringProp>
              <stringProp name="274">137.82817224481286</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-672176256">
              <stringProp name="274">140.12198936502972</stringProp>
              <stringProp name="275">140.12198936502972</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1435715552">
              <stringProp name="275">152.7379835262225</stringProp>
              <stringProp name="276">152.7379835262225</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1555400800">
              <stringProp name="276">157.42988218121155</stringProp>
              <stringProp name="277">157.42988218121155</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-336340832">
              <stringProp name="277">131.3637785423835</stringProp>
              <stringProp name="278">131.3637785423835</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="917685280">
              <stringProp name="278">106.44458346366385</stringProp>
              <stringProp name="279">106.44458346366385</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1343622569">
              <stringProp name="279">129.90407673860912</stringProp>
              <stringProp name="280">129.90407673860912</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1134052000">
              <stringProp name="280">93.72432488791576</stringProp>
              <stringProp name="281">93.72432488791576</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1566424800">
              <stringProp name="281">93.4115316442498</stringProp>
              <stringProp name="282">93.4115316442498</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1538599840">
              <stringProp name="282">74.95673026795953</stringProp>
              <stringProp name="283">74.95673026795953</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="196508768">
              <stringProp name="283">69.01365863830675</stringProp>
              <stringProp name="284">69.01365863830675</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1780048672">
              <stringProp name="284">42.53049734125743</stringProp>
              <stringProp name="285">42.53049734125743</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="688165408">
              <stringProp name="285">34.18934417683245</stringProp>
              <stringProp name="286">34.18934417683245</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-913113568">
              <stringProp name="286">34.50213742049838</stringProp>
              <stringProp name="287">34.50213742049838</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1163695424">
              <stringProp name="287">45.86695860702742</stringProp>
              <stringProp name="288">45.86695860702742</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-779206528">
              <stringProp name="288">35.23198832238557</stringProp>
              <stringProp name="289">35.23198832238557</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1395236631">
              <stringProp name="289">63.69617349598582</stringProp>
              <stringProp name="290">63.69617349598582</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-768692096">
              <stringProp name="290">78.60598477739546</stringProp>
              <stringProp name="291">78.60598477739546</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1047192192">
              <stringProp name="291">95.70534876446666</stringProp>
              <stringProp name="292">95.70534876446666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2024626912">
              <stringProp name="292">92.89020957147324</stringProp>
              <stringProp name="293">92.89020957147324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="762618720">
              <stringProp name="293">143.77124387446565</stringProp>
              <stringProp name="294">143.77124387446565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-274144192">
              <stringProp name="294">132.82348034615788</stringProp>
              <stringProp name="295">132.82348034615788</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-838294976">
              <stringProp name="295">154.51047857366282</stringProp>
              <stringProp name="296">154.51047857366282</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="810393920">
              <stringProp name="296">126.3590866437285</stringProp>
              <stringProp name="297">126.3590866437285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2076171072">
              <stringProp name="297">135.32582629548537</stringProp>
              <stringProp name="298">135.32582629548537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1979132320">
              <stringProp name="298">150.23563757689502</stringProp>
              <stringProp name="299">150.23563757689502</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="735679776">
              <stringProp name="299">131.5723073714941</stringProp>
              <stringProp name="300">131.5723073714941</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1547174944">
              <stringProp name="300">167.64779480763218</stringProp>
              <stringProp name="301">167.64779480763218</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-491266176">
              <stringProp name="301">166.60515066207904</stringProp>
              <stringProp name="302">166.60515066207904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-309216576">
              <stringProp name="302">131.3637785423835</stringProp>
              <stringProp name="303">131.3637785423835</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1666311328">
              <stringProp name="303">131.98936502971537</stringProp>
              <stringProp name="304">131.98936502971537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1713809664">
              <stringProp name="304">135.534355124596</stringProp>
              <stringProp name="305">135.534355124596</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-979185792">
              <stringProp name="305">126.2548222291732</stringProp>
              <stringProp name="306">126.2548222291732</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="678553376">
              <stringProp name="306">180.9936398707121</stringProp>
              <stringProp name="307">180.9936398707121</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1908309376">
              <stringProp name="307">161.28766551975812</stringProp>
              <stringProp name="308">161.28766551975812</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="849961824">
              <stringProp name="308">171.2970493170681</stringProp>
              <stringProp name="309">171.2970493170681</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1666555639">
              <stringProp name="309">131.98936502971537</stringProp>
              <stringProp name="310">131.98936502971537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="924579520">
              <stringProp name="310">129.0699614221666</stringProp>
              <stringProp name="311">129.0699614221666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="406510048">
              <stringProp name="311">144.81388802001877</stringProp>
              <stringProp name="312">144.81388802001877</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-669851232">
              <stringProp name="312">134.38744656448756</stringProp>
              <stringProp name="313">134.38744656448756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1305698944">
              <stringProp name="313">114.05588572620164</stringProp>
              <stringProp name="314">114.05588572620164</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-79581888">
              <stringProp name="314">115.93264518819726</stringProp>
              <stringProp name="315">115.93264518819726</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1309541088">
              <stringProp name="315">90.9091856949223</stringProp>
              <stringProp name="316">90.9091856949223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2030520480">
              <stringProp name="316">68.80512980919612</stringProp>
              <stringProp name="317">68.80512980919612</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1823951840">
              <stringProp name="317">59.734125742883954</stringProp>
              <stringProp name="318">59.734125742883954</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="129476576">
              <stringProp name="318">78.29319153372953</stringProp>
              <stringProp name="319">78.29319153372953</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1661672777">
              <stringProp name="319">55.45928474611616</stringProp>
              <stringProp name="320">55.45928474611616</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="619846176">
              <stringProp name="320">91.01345010947765</stringProp>
              <stringProp name="321">91.01345010947765</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2038429376">
              <stringProp name="321">102.27400688145134</stringProp>
              <stringProp name="322">102.27400688145134</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-129326368">
              <stringProp name="322">118.0179334793035</stringProp>
              <stringProp name="323">118.0179334793035</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-500680448">
              <stringProp name="323">203.7232822437702</stringProp>
              <stringProp name="324">203.7232822437702</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2116907872">
              <stringProp name="324">238.5475967052445</stringProp>
              <stringProp name="325">238.5475967052445</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1444953792">
              <stringProp name="325">310.2815139192993</stringProp>
              <stringProp name="326">310.2815139192993</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-337196704">
              <stringProp name="326">299.95933687832337</stringProp>
              <stringProp name="327">299.95933687832337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="438154240">
              <stringProp name="327">375.4467730163695</stringProp>
              <stringProp name="328">375.4467730163695</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-526184544">
              <stringProp name="328">369.39943697216137</stringProp>
              <stringProp name="329">369.39943697216137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1771679401">
              <stringProp name="329">364.0819518298404</stringProp>
              <stringProp name="330">364.0819518298404</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1740824288">
              <stringProp name="330">330.50881034302995</stringProp>
              <stringProp name="331">330.50881034302995</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="666939776">
              <stringProp name="331">350.9446355958711</stringProp>
              <stringProp name="332">350.9446355958711</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1939835072">
              <stringProp name="332">387.74997393389634</stringProp>
              <stringProp name="333">387.74997393389634</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-796366400">
              <stringProp name="333">404.5365446773016</stringProp>
              <stringProp name="334">404.5365446773016</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-652776864">
              <stringProp name="334">389.1054113231154</stringProp>
              <stringProp name="335">389.1054113231154</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1842467200">
              <stringProp name="335">381.3898446460223</stringProp>
              <stringProp name="336">381.3898446460223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1511491648">
              <stringProp name="336">318.62266708372425</stringProp>
              <stringProp name="337">318.62266708372425</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1491371840">
              <stringProp name="337">280.8789490147013</stringProp>
              <stringProp name="338">280.8789490147013</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1741208128">
              <stringProp name="338">109.98957355854444</stringProp>
              <stringProp name="339">109.98957355854444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2094207767">
              <stringProp name="339">43.36461265769993</stringProp>
              <stringProp name="340">43.36461265769993</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1272299008">
              <stringProp name="340">226.6614534459389</stringProp>
              <stringProp name="341">226.6614534459389</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-209213120">
              <stringProp name="341">240.84141382546136</stringProp>
              <stringProp name="342">240.84141382546136</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-102945632">
              <stringProp name="342">214.14972369930143</stringProp>
              <stringProp name="343">214.14972369930143</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2059567840">
              <stringProp name="343">194.3394849337921</stringProp>
              <stringProp name="344">194.3394849337921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1998240192">
              <stringProp name="344">237.2964237305808</stringProp>
              <stringProp name="345">237.2964237305808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1235244384">
              <stringProp name="345">191.21155249713277</stringProp>
              <stringProp name="346">191.21155249713277</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-377503264">
              <stringProp name="346">193.71389844646023</stringProp>
              <stringProp name="347">193.71389844646023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-846910112">
              <stringProp name="347">141.89448441247004</stringProp>
              <stringProp name="348">141.89448441247004</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="295637856">
              <stringProp name="348">135.22156188093004</stringProp>
              <stringProp name="349">135.22156188093004</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="448306743">
              <stringProp name="349">133.7618600771557</stringProp>
              <stringProp name="350">133.7618600771557</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1927914592">
              <stringProp name="350">96.85225732457512</stringProp>
              <stringProp name="351">96.85225732457512</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-427490048">
              <stringProp name="351">100.91856949223228</stringProp>
              <stringProp name="352">100.91856949223228</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-964476992">
              <stringProp name="352">97.89490147012825</stringProp>
              <stringProp name="353">97.89490147012825</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-609708096">
              <stringProp name="353">88.09404650192889</stringProp>
              <stringProp name="354">88.09404650192889</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-791077568">
              <stringProp name="354">90.07507037847982</stringProp>
              <stringProp name="355">90.07507037847982</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2075992736">
              <stringProp name="355">76.72922531539984</stringProp>
              <stringProp name="356">76.72922531539984</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="952157536">
              <stringProp name="356">101.64842039411948</stringProp>
              <stringProp name="357">101.64842039411948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1405567360">
              <stringProp name="357">131.4680429569388</stringProp>
              <stringProp name="358">131.4680429569388</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-714937216">
              <stringProp name="358">246.88874986966948</stringProp>
              <stringProp name="359">246.88874986966948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1176604215">
              <stringProp name="359">283.79835262225</stringProp>
              <stringProp name="360">283.79835262225</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-520340480">
              <stringProp name="360">261.7985611510791</stringProp>
              <stringProp name="361">261.7985611510791</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-901899040">
              <stringProp name="361">289.6371598373475</stringProp>
              <stringProp name="362">289.6371598373475</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1332267552">
              <stringProp name="362">335.51350224168493</stringProp>
              <stringProp name="363">335.51350224168493</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1733660288">
              <stringProp name="363">351.04890001042645</stringProp>
              <stringProp name="364">351.04890001042645</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1300331744">
              <stringProp name="364">366.8970910228339</stringProp>
              <stringProp name="365">366.8970910228339</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="433540576">
              <stringProp name="365">432.16661453445937</stringProp>
              <stringProp name="366">432.16661453445937</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1588305344">
              <stringProp name="366">382.8495464497967</stringProp>
              <stringProp name="367">382.8495464497967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="125870976">
              <stringProp name="367">423.0956104681472</stringProp>
              <stringProp name="368">423.0956104681472</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2065527360">
              <stringProp name="368">461.0478573662808</stringProp>
              <stringProp name="369">461.0478573662808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1236757015">
              <stringProp name="369">382.5367532061308</stringProp>
              <stringProp name="370">382.5367532061308</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1926724352">
              <stringProp name="370">439.98644562610775</stringProp>
              <stringProp name="371">439.98644562610775</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-373960224">
              <stringProp name="371">392.650401417996</stringProp>
              <stringProp name="372">392.650401417996</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1408549984">
              <stringProp name="372">309.96872067563334</stringProp>
              <stringProp name="373">309.96872067563334</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="311220704">
              <stringProp name="373">294.9546449796684</stringProp>
              <stringProp name="374">294.9546449796684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1725693856">
              <stringProp name="374">283.17276613491816</stringProp>
              <stringProp name="375">283.17276613491816</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="458521728">
              <stringProp name="375">265.8648733187364</stringProp>
              <stringProp name="376">265.8648733187364</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-781009184">
              <stringProp name="376">245.6375768950057</stringProp>
              <stringProp name="377">245.6375768950057</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-962012640">
              <stringProp name="377">189.1262642060265</stringProp>
              <stringProp name="378">189.1262642060265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="947152416">
              <stringProp name="378">249.07830257533104</stringProp>
              <stringProp name="379">249.07830257533104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1154914551">
              <stringProp name="379">206.8512146804296</stringProp>
              <stringProp name="380">206.8512146804296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1893124800">
              <stringProp name="380">216.33927640496304</stringProp>
              <stringProp name="381">216.33927640496304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2056902304">
              <stringProp name="381">202.8891669273277</stringProp>
              <stringProp name="382">202.8891669273277</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="839745344">
              <stringProp name="382">165.1454488583047</stringProp>
              <stringProp name="383">165.1454488583047</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1126036384">
              <stringProp name="383">161.1834011052028</stringProp>
              <stringProp name="384">161.1834011052028</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1772314656">
              <stringProp name="384">108.73840058388072</stringProp>
              <stringProp name="385">108.73840058388072</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1679856160">
              <stringProp name="385">124.48232718173288</stringProp>
              <stringProp name="386">124.48232718173288</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="35344256">
              <stringProp name="386">129.38275466583255</stringProp>
              <stringProp name="387">129.38275466583255</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1933682592">
              <stringProp name="387">102.37827129600667</stringProp>
              <stringProp name="388">102.37827129600667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1140407296">
              <stringProp name="388">118.95631321030132</stringProp>
              <stringProp name="389">118.95631321030132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1199055721">
              <stringProp name="389">113.11750599520384</stringProp>
              <stringProp name="390">113.11750599520384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1180858784">
              <stringProp name="390">113.32603482431446</stringProp>
              <stringProp name="391">113.32603482431446</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1719957888">
              <stringProp name="391">144.39683036179753</stringProp>
              <stringProp name="392">144.39683036179753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="642654208">
              <stringProp name="392">155.44885830466063</stringProp>
              <stringProp name="393">155.44885830466063</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1837821152">
              <stringProp name="393">244.59493274945265</stringProp>
              <stringProp name="394">244.59493274945265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-112066176">
              <stringProp name="394">313.513710770514</stringProp>
              <stringProp name="395">313.513710770514</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-641373792">
              <stringProp name="395">336.556146387238</stringProp>
              <stringProp name="396">336.556146387238</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1193735968">
              <stringProp name="396">419.4463559587113</stringProp>
              <stringProp name="397">419.4463559587113</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2099434464">
              <stringProp name="397">401.40861224064224</stringProp>
              <stringProp name="398">401.40861224064224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1604239264">
              <stringProp name="398">425.1808987592535</stringProp>
              <stringProp name="399">425.1808987592535</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="610407776">
              <stringProp name="399">488.99072046710455</stringProp>
              <stringProp name="400">488.99072046710455</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-882361088">
              <stringProp name="400">419.7591492023772</stringProp>
              <stringProp name="401">419.7591492023772</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-42855136">
              <stringProp name="401">478.8770722552392</stringProp>
              <stringProp name="402">478.8770722552392</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1335933952">
              <stringProp name="402">454.4791992492962</stringProp>
              <stringProp name="403">454.4791992492962</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-207473952">
              <stringProp name="403">452.49817537274527</stringProp>
              <stringProp name="404">452.49817537274527</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1085958208">
              <stringProp name="404">409.4369721614013</stringProp>
              <stringProp name="405">409.4369721614013</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="905347168">
              <stringProp name="405">381.7026378896882</stringProp>
              <stringProp name="406">381.7026378896882</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1502859328">
              <stringProp name="406">324.2529454697112</stringProp>
              <stringProp name="407">324.2529454697112</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1278439168">
              <stringProp name="407">335.20070899801897</stringProp>
              <stringProp name="408">335.20070899801897</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1913599200">
              <stringProp name="408">343.229068918778</stringProp>
              <stringProp name="409">343.229068918778</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1196798871">
              <stringProp name="409">283.27703054947347</stringProp>
              <stringProp name="410">283.27703054947347</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-822592576">
              <stringProp name="410">271.70368053383373</stringProp>
              <stringProp name="411">271.70368053383373</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1343189312">
              <stringProp name="411">311.9497445521843</stringProp>
              <stringProp name="412">311.9497445521843</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-8757376">
              <stringProp name="412">282.9642373058075</stringProp>
              <stringProp name="413">282.9642373058075</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1291771168">
              <stringProp name="413">283.48555937858407</stringProp>
              <stringProp name="414">283.48555937858407</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="947541856">
              <stringProp name="414">300.4806589511</stringProp>
              <stringProp name="415">300.4806589511</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1697211552">
              <stringProp name="415">283.17276613491816</stringProp>
              <stringProp name="416">283.17276613491816</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="378443072">
              <stringProp name="416">256.1682827650922</stringProp>
              <stringProp name="417">256.1682827650922</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="90822208">
              <stringProp name="417">258.77489312897507</stringProp>
              <stringProp name="418">258.77489312897507</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="6936160">
              <stringProp name="418">241.8840579710145</stringProp>
              <stringProp name="419">241.8840579710145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1315824937">
              <stringProp name="419">242.5096444583464</stringProp>
              <stringProp name="420">242.5096444583464</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1144387936">
              <stringProp name="420">174.73777499739342</stringProp>
              <stringProp name="421">174.73777499739342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-445443232">
              <stringProp name="421">197.3631529558961</stringProp>
              <stringProp name="422">197.3631529558961</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1933391008">
              <stringProp name="422">20.94776352830779</stringProp>
              <stringProp name="423">20.94776352830779</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1119024608">
              <stringProp name="423">48.47356897091023</stringProp>
              <stringProp name="424">48.47356897091023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="603302112">
              <stringProp name="424">153.572098842665</stringProp>
              <stringProp name="425">153.572098842665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-347573600">
              <stringProp name="425">196.32050881034303</stringProp>
              <stringProp name="426">196.32050881034303</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-344506368">
              <stringProp name="426">193.71389844646023</stringProp>
              <stringProp name="427">193.71389844646023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1890328992">
              <stringProp name="427">313.2009175268481</stringProp>
              <stringProp name="428">313.2009175268481</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-684687520">
              <stringProp name="428">453.4365551037431</stringProp>
              <stringProp name="429">453.4365551037431</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="787421463">
              <stringProp name="429">575.4259201334584</stringProp>
              <stringProp name="430">575.4259201334584</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1609950432">
              <stringProp name="430">1005.8294234177872</stringProp>
              <stringProp name="431">1005.8294234177872</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="234607360">
              <stringProp name="431">1010.0</stringProp>
              <stringProp name="432">1010.0</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1700053088">
              <stringProp name="432">950.3607548743612</stringProp>
              <stringProp name="433">950.3607548743612</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-454671072">
              <stringProp name="433">716.7042018559066</stringProp>
              <stringProp name="434">716.7042018559066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="167478304">
              <stringProp name="434">714.4103847356896</stringProp>
              <stringProp name="435">714.4103847356896</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1830336544">
              <stringProp name="435">673.7472630591179</stringProp>
              <stringProp name="436">673.7472630591179</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-628148224">
              <stringProp name="436">499.7299551663017</stringProp>
              <stringProp name="437">499.7299551663017</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-906247520">
              <stringProp name="437">584.7054530288813</stringProp>
              <stringProp name="438">584.7054530288813</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="83342976">
              <stringProp name="438">557.7009696590553</stringProp>
              <stringProp name="439">557.7009696590553</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-120830921">
              <stringProp name="439">516.9335835679283</stringProp>
              <stringProp name="440">516.9335835679283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-455764576">
              <stringProp name="440">556.3455322698363</stringProp>
              <stringProp name="441">556.3455322698363</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1355761440">
              <stringProp name="441">549.3598164946304</stringProp>
              <stringProp name="442">549.3598164946304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1463780032">
              <stringProp name="442">264.5094359295173</stringProp>
              <stringProp name="443">264.5094359295173</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-825252288">
              <stringProp name="443">10.0</stringProp>
              <stringProp name="444">10.0</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1706967360">
              <stringProp name="444">348.3380252319883</stringProp>
              <stringProp name="445">348.3380252319883</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1182096960">
              <stringProp name="445">332.3855698050255</stringProp>
              <stringProp name="446">332.3855698050255</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1249885216">
              <stringProp name="446">251.059326451882</stringProp>
              <stringProp name="447">251.059326451882</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1692846528">
              <stringProp name="447">89.34521947659265</stringProp>
              <stringProp name="448">89.34521947659265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1494988000">
              <stringProp name="448">203.4104890001043</stringProp>
              <stringProp name="449">203.4104890001043</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2083635881">
              <stringProp name="449">268.99280575539564</stringProp>
              <stringProp name="450">268.99280575539564</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1531640192">
              <stringProp name="450">278.793660723595</stringProp>
              <stringProp name="451">278.793660723595</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-681232192">
              <stringProp name="451">233.43864039203424</stringProp>
              <stringProp name="452">233.43864039203424</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1464917856">
              <stringProp name="452">264.5094359295173</stringProp>
              <stringProp name="453">264.5094359295173</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-692333536">
              <stringProp name="453">254.1872588885413</stringProp>
              <stringProp name="454">254.1872588885413</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1979325952">
              <stringProp name="454">215.19236784485457</stringProp>
              <stringProp name="455">215.19236784485457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1178789728">
              <stringProp name="455">158.6810551558753</stringProp>
              <stringProp name="456">158.6810551558753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1727993152">
              <stringProp name="456">153.15504118444375</stringProp>
              <stringProp name="457">153.15504118444375</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1689016416">
              <stringProp name="457">144.39683036179753</stringProp>
              <stringProp name="458">144.39683036179753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1173865312">
              <stringProp name="458">148.88020018767594</stringProp>
              <stringProp name="459">148.88020018767594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2081444969">
              <stringProp name="459">121.04160150140756</stringProp>
              <stringProp name="460">121.04160150140756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1713613248">
              <stringProp name="460">109.5725159003232</stringProp>
              <stringProp name="461">109.5725159003232</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1710559456">
              <stringProp name="461">146.37785423834845</stringProp>
              <stringProp name="462">146.37785423834845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-275185856">
              <stringProp name="462">119.58189969763318</stringProp>
              <stringProp name="463">119.58189969763318</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-942865856">
              <stringProp name="463">179.32540923782713</stringProp>
              <stringProp name="464">179.32540923782713</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1363620512">
              <stringProp name="464">243.6565530184548</stringProp>
              <stringProp name="465">243.6565530184548</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1405129952">
              <stringProp name="465">310.2815139192993</stringProp>
              <stringProp name="466">310.2815139192993</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="79855872">
              <stringProp name="466">365.1245959753936</stringProp>
              <stringProp name="467">365.1245959753936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-225308256">
              <stringProp name="467">368.2525284120529</stringProp>
              <stringProp name="468">368.2525284120529</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-232981536">
              <stringProp name="468">399.4275883640913</stringProp>
              <stringProp name="469">399.4275883640913</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="528751287">
              <stringProp name="469">358.3474090292983</stringProp>
              <stringProp name="470">358.3474090292983</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1176928160">
              <stringProp name="470">335.9305598999061</stringProp>
              <stringProp name="471">335.9305598999061</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-437389728">
              <stringProp name="471">377.3235324783651</stringProp>
              <stringProp name="472">377.3235324783651</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-20743424">
              <stringProp name="472">427.0576582212491</stringProp>
              <stringProp name="473">427.0576582212491</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="633004768">
              <stringProp name="473">397.655093316651</stringProp>
              <stringProp name="474">397.655093316651</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-267466688">
              <stringProp name="474">353.1341883015327</stringProp>
              <stringProp name="475">353.1341883015327</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-651307456">
              <stringProp name="475">393.79730997810447</stringProp>
              <stringProp name="476">393.79730997810447</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1849510304">
              <stringProp name="476">449.8915650088625</stringProp>
              <stringProp name="477">449.8915650088625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1513677888">
              <stringProp name="477">298.1868418308831</stringProp>
              <stringProp name="478">298.1868418308831</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1779077824">
              <stringProp name="478">323.3145657387134</stringProp>
              <stringProp name="479">323.3145657387134</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="508403767">
              <stringProp name="479">229.2680638098217</stringProp>
              <stringProp name="480">229.2680638098217</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1186690272">
              <stringProp name="480">242.8224377020123</stringProp>
              <stringProp name="481">242.8224377020123</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1214506656">
              <stringProp name="481">245.53331248045043</stringProp>
              <stringProp name="482">245.53331248045043</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-957175520">
              <stringProp name="482">208.31091648420397</stringProp>
              <stringProp name="483">208.31091648420397</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-340820064">
              <stringProp name="483">196.32050881034303</stringProp>
              <stringProp name="484">196.32050881034303</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1335550112">
              <stringProp name="484">112.59618392242729</stringProp>
              <stringProp name="485">112.59618392242729</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="85933888">
              <stringProp name="485">174.32071733917215</stringProp>
              <stringProp name="486">174.32071733917215</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-370371776">
              <stringProp name="486">230.41497236993013</stringProp>
              <stringProp name="487">230.41497236993013</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1941175680">
              <stringProp name="487">191.52434574079868</stringProp>
              <stringProp name="488">191.52434574079868</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="264586528">
              <stringProp name="488">167.8563236367428</stringProp>
              <stringProp name="489">167.8563236367428</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1103985097">
              <stringProp name="489">127.40173078928164</stringProp>
              <stringProp name="490">127.40173078928164</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-913707840">
              <stringProp name="490">152.00813262433533</stringProp>
              <stringProp name="491">152.00813262433533</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1889961184">
              <stringProp name="491">137.41111458659162</stringProp>
              <stringProp name="492">137.41111458659162</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-240120512">
              <stringProp name="492">108.11281409654885</stringProp>
              <stringProp name="493">108.11281409654885</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="629159968">
              <stringProp name="493">88.9281618183714</stringProp>
              <stringProp name="494">88.9281618183714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="804471552">
              <stringProp name="494">76.52069648628921</stringProp>
              <stringProp name="495">76.52069648628921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1649713920">
              <stringProp name="495">91.11771452403292</stringProp>
              <stringProp name="496">91.11771452403292</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-203195072">
              <stringProp name="496">72.1415910749661</stringProp>
              <stringProp name="497">72.1415910749661</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1839278848">
              <stringProp name="497">53.99958294234178</stringProp>
              <stringProp name="498">53.99958294234178</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1917368768">
              <stringProp name="498">84.54905640704825</stringProp>
              <stringProp name="499">84.54905640704825</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-751666976">
              <stringProp name="499">81.31685955583357</stringProp>
              <stringProp name="500">81.31685955583357</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2120130720">
              <stringProp name="500">92.89020957147324</stringProp>
              <stringProp name="501">92.89020957147324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-74697728">
              <stringProp name="501">107.38296319466166</stringProp>
              <stringProp name="502">107.38296319466166</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1972361056">
              <stringProp name="502">143.14565738713378</stringProp>
              <stringProp name="503">143.14565738713378</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-197905504">
              <stringProp name="503">152.84224794077784</stringProp>
              <stringProp name="504">152.84224794077784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="643036384">
              <stringProp name="504">153.25930559899908</stringProp>
              <stringProp name="505">153.25930559899908</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1378262624">
              <stringProp name="505">175.7804191429465</stringProp>
              <stringProp name="506">175.7804191429465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="80836704">
              <stringProp name="506">171.19278490251278</stringProp>
              <stringProp name="507">171.19278490251278</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-914273440">
              <stringProp name="507">179.32540923782713</stringProp>
              <stringProp name="508">179.32540923782713</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1335198080">
              <stringProp name="508">177.3443853612762</stringProp>
              <stringProp name="509">177.3443853612762</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1223147543">
              <stringProp name="509">187.77082681680744</stringProp>
              <stringProp name="510">187.77082681680744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-929941152">
              <stringProp name="510">208.31091648420397</stringProp>
              <stringProp name="511">208.31091648420397</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="867627392">
              <stringProp name="511">181.82775518715465</stringProp>
              <stringProp name="512">181.82775518715465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2126662752">
              <stringProp name="512">194.3394849337921</stringProp>
              <stringProp name="513">194.3394849337921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1913761408">
              <stringProp name="513">201.2209362944427</stringProp>
              <stringProp name="514">201.2209362944427</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1231416064">
              <stringProp name="514">142.20727765613597</stringProp>
              <stringProp name="515">142.20727765613597</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-798992832">
              <stringProp name="515">214.5667813575227</stringProp>
              <stringProp name="516">214.5667813575227</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1658331872">
              <stringProp name="516">144.39683036179753</stringProp>
              <stringProp name="517">144.39683036179753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1774715328">
              <stringProp name="517">156.70003127932438</stringProp>
              <stringProp name="518">156.70003127932438</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="765663776">
              <stringProp name="518">164.93692002919406</stringProp>
              <stringProp name="519">164.93692002919406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="996418967">
              <stringProp name="519">139.80919612136378</stringProp>
              <stringProp name="520">139.80919612136378</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1786933824">
              <stringProp name="520">185.89406735481185</stringProp>
              <stringProp name="521">185.89406735481185</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1086727424">
              <stringProp name="521">175.15483265561463</stringProp>
              <stringProp name="522">175.15483265561463</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1228548736">
              <stringProp name="522">158.4725263267647</stringProp>
              <stringProp name="523">158.4725263267647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2058277888">
              <stringProp name="523">164.72839120008342</stringProp>
              <stringProp name="524">164.72839120008342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1285572096">
              <stringProp name="524">153.78062767177565</stringProp>
              <stringProp name="525">153.78062767177565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="335516928">
              <stringProp name="525">125.73350015639662</stringProp>
              <stringProp name="526">125.73350015639662</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2063773952">
              <stringProp name="526">93.09873840058388</stringProp>
              <stringProp name="527">93.09873840058388</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-542001248">
              <stringProp name="527">67.55395683453237</stringProp>
              <stringProp name="528">67.55395683453237</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1625311328">
              <stringProp name="528">59.3170680846627</stringProp>
              <stringProp name="529">59.3170680846627</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1818701335">
              <stringProp name="529">68.07527890730893</stringProp>
              <stringProp name="530">68.07527890730893</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1544077440">
              <stringProp name="530">43.05181941403399</stringProp>
              <stringProp name="531">43.05181941403399</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1695890144">
              <stringProp name="531">64.21749556876239</stringProp>
              <stringProp name="532">64.21749556876239</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1063736064">
              <stringProp name="532">56.91898654989052</stringProp>
              <stringProp name="533">56.91898654989052</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1673177088">
              <stringProp name="533">69.84777395474924</stringProp>
              <stringProp name="534">69.84777395474924</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1413829760">
              <stringProp name="534">85.69596496715671</stringProp>
              <stringProp name="535">85.69596496715671</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2022184032">
              <stringProp name="535">79.54436450839326</stringProp>
              <stringProp name="536">79.54436450839326</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1850727680">
              <stringProp name="536">121.97998123240538</stringProp>
              <stringProp name="537">121.97998123240538</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-243143264">
              <stringProp name="537">119.58189969763318</stringProp>
              <stringProp name="538">119.58189969763318</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-101873856">
              <stringProp name="538">140.9561046814722</stringProp>
              <stringProp name="539">140.9561046814722</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="646657463">
              <stringProp name="539">153.25930559899908</stringProp>
              <stringProp name="540">153.25930559899908</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-790215072">
              <stringProp name="540">178.59555833593996</stringProp>
              <stringProp name="541">178.59555833593996</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="460378528">
              <stringProp name="541">190.58596600980087</stringProp>
              <stringProp name="542">190.58596600980087</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1634046400">
              <stringProp name="542">219.8842664998436</stringProp>
              <stringProp name="543">219.8842664998436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1634009696">
              <stringProp name="543">219.8842664998436</stringProp>
              <stringProp name="544">219.8842664998436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1540268224">
              <stringProp name="544">186.9367115003649</stringProp>
              <stringProp name="545">186.9367115003649</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1749564736">
              <stringProp name="545">206.53842143676368</stringProp>
              <stringProp name="546">206.53842143676368</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-146186272">
              <stringProp name="546">180.36805338338027</stringProp>
              <stringProp name="547">180.36805338338027</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="58086240">
              <stringProp name="547">227.18277551871543</stringProp>
              <stringProp name="548">227.18277551871543</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-835230944">
              <stringProp name="548">183.1831925763737</stringProp>
              <stringProp name="549">183.1831925763737</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="42913943">
              <stringProp name="549">211.96017099363988</stringProp>
              <stringProp name="550">211.96017099363988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1626412384">
              <stringProp name="550">242.40538004379107</stringProp>
              <stringProp name="551">242.40538004379107</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2061149504">
              <stringProp name="551">205.80857053487645</stringProp>
              <stringProp name="552">205.80857053487645</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1441041408">
              <stringProp name="552">198.30153268689395</stringProp>
              <stringProp name="553">198.30153268689395</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-905781664">
              <stringProp name="553">216.23501199040768</stringProp>
              <stringProp name="554">216.23501199040768</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="702182208">
              <stringProp name="554">228.64247732248984</stringProp>
              <stringProp name="555">228.64247732248984</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1125154816">
              <stringProp name="555">201.95078719632988</stringProp>
              <stringProp name="556">201.95078719632988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1249414048">
              <stringProp name="556">181.30643311437808</stringProp>
              <stringProp name="557">181.30643311437808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2099833536">
              <stringProp name="557">43.26034824314461</stringProp>
              <stringProp name="558">43.26034824314461</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-479062368">
              <stringProp name="558">97.99916588468356</stringProp>
              <stringProp name="559">97.99916588468356</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1108550121">
              <stringProp name="559">145.12668126368473</stringProp>
              <stringProp name="560">145.12668126368473</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="293388992">
              <stringProp name="560">116.2454384318632</stringProp>
              <stringProp name="561">116.2454384318632</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1156168320">
              <stringProp name="561">81.00406631216765</stringProp>
              <stringProp name="562">81.00406631216765</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1929840384">
              <stringProp name="562">84.65332082160359</stringProp>
              <stringProp name="563">84.65332082160359</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2089170304">
              <stringProp name="563">86.63434469815452</stringProp>
              <stringProp name="564">86.63434469815452</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1447339936">
              <stringProp name="564">105.50620373266604</stringProp>
              <stringProp name="565">105.50620373266604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1425379680">
              <stringProp name="565">71.30747575852361</stringProp>
              <stringProp name="566">71.30747575852361</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-316727360">
              <stringProp name="566">73.91408612240642</stringProp>
              <stringProp name="567">73.91408612240642</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="19289728">
              <stringProp name="567">79.96142216661451</stringProp>
              <stringProp name="568">79.96142216661451</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="184782784">
              <stringProp name="568">118.64351996663537</stringProp>
              <stringProp name="569">118.64351996663537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="458046967">
              <stringProp name="569">193.5053696173496</stringProp>
              <stringProp name="570">193.5053696173496</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1307366272">
              <stringProp name="570">209.77061828797832</stringProp>
              <stringProp name="571">209.77061828797832</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="221944448">
              <stringProp name="571">301.94036075487435</stringProp>
              <stringProp name="572">301.94036075487435</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="60076000">
              <stringProp name="572">312.99238869773745</stringProp>
              <stringProp name="573">312.99238869773745</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-73029088">
              <stringProp name="573">358.66020227296417</stringProp>
              <stringProp name="574">358.66020227296417</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1850998048">
              <stringProp name="574">353.86403920341985</stringProp>
              <stringProp name="575">353.86403920341985</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-573951456">
              <stringProp name="575">369.0866437284954</stringProp>
              <stringProp name="576">369.0866437284954</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1514374336">
              <stringProp name="576">337.0774684600146</stringProp>
              <stringProp name="577">337.0774684600146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1746497376">
              <stringProp name="577">378.8874986966948</stringProp>
              <stringProp name="578">378.8874986966948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1848065088">
              <stringProp name="578">464.9056407048274</stringProp>
              <stringProp name="579">464.9056407048274</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1853296407">
              <stringProp name="579">433.730580752789</stringProp>
              <stringProp name="580">433.730580752789</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1673793632">
              <stringProp name="580">401.09581899697633</stringProp>
              <stringProp name="581">401.09581899697633</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="775738688">
              <stringProp name="581">420.3847356897091</stringProp>
              <stringProp name="582">420.3847356897091</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1433751296">
              <stringProp name="582">322.68897925138145</stringProp>
              <stringProp name="583">322.68897925138145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-992828320">
              <stringProp name="583">275.2486706287144</stringProp>
              <stringProp name="584">275.2486706287144</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1874360416">
              <stringProp name="584">255.64696069231567</stringProp>
              <stringProp name="585">255.64696069231567</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1252011456">
              <stringProp name="585">217.3819205505161</stringProp>
              <stringProp name="586">217.3819205505161</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-592197472">
              <stringProp name="586">166.3966218329684</stringProp>
              <stringProp name="587">166.3966218329684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1512895840">
              <stringProp name="587">207.5810655823168</stringProp>
              <stringProp name="588">207.5810655823168</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1881067296">
              <stringProp name="588">235.21113543947453</stringProp>
              <stringProp name="589">235.21113543947453</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1949480073">
              <stringProp name="589">223.1164633510583</stringProp>
              <stringProp name="590">223.1164633510583</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="690218720">
              <stringProp name="590">219.67573767073296</stringProp>
              <stringProp name="591">219.67573767073296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1388356224">
              <stringProp name="591">175.7804191429465</stringProp>
              <stringProp name="592">175.7804191429465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-567173120">
              <stringProp name="592">194.65227817745804</stringProp>
              <stringProp name="593">194.65227817745804</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-801847392">
              <stringProp name="593">147.00344072568032</stringProp>
              <stringProp name="594">147.00344072568032</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1163885024">
              <stringProp name="594">138.76655197581067</stringProp>
              <stringProp name="595">138.76655197581067</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-110392640">
              <stringProp name="595">130.21686998227506</stringProp>
              <stringProp name="596">130.21686998227506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-510571808">
              <stringProp name="596">115.4113231154207</stringProp>
              <stringProp name="597">115.4113231154207</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-392234592">
              <stringProp name="597">42.42623292670212</stringProp>
              <stringProp name="598">42.42623292670212</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-725182624">
              <stringProp name="598">28.037743718069024</stringProp>
              <stringProp name="599">28.037743718069024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="214415840">
              <stringProp name="599">27.8292148889584</stringProp>
              <stringProp name="600">27.8292148889584</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-370745088">
              <stringProp name="600">40.549473464706494</stringProp>
              <stringProp name="601">40.549473464706494</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="211358176">
              <stringProp name="601">27.62068605984777</stringProp>
              <stringProp name="602">27.62068605984777</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="980769664">
              <stringProp name="602">59.62986132832864</stringProp>
              <stringProp name="603">59.62986132832864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1539421760">
              <stringProp name="603">87.468460014597</stringProp>
              <stringProp name="604">87.468460014597</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-209380256">
              <stringProp name="604">180.2637889688249</stringProp>
              <stringProp name="605">180.2637889688249</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2106450656">
              <stringProp name="605">255.75122510687095</stringProp>
              <stringProp name="606">255.75122510687095</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1741391264">
              <stringProp name="606">247.30580752789075</stringProp>
              <stringProp name="607">247.30580752789075</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1784189280">
              <stringProp name="607">244.17787509123136</stringProp>
              <stringProp name="608">244.17787509123136</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="629675520">
              <stringProp name="608">261.27723907830256</stringProp>
              <stringProp name="609">261.27723907830256</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="849485559">
              <stringProp name="609">325.6083828589302</stringProp>
              <stringProp name="610">325.6083828589302</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="687806784">
              <stringProp name="610">274.72734855593785</stringProp>
              <stringProp name="611">274.72734855593785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1434509984">
              <stringProp name="611">190.27317276613493</stringProp>
              <stringProp name="612">190.27317276613493</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1201330048">
              <stringProp name="612">385.5604212282348</stringProp>
              <stringProp name="613">385.5604212282348</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-288621408">
              <stringProp name="613">345.41862162443954</stringProp>
              <stringProp name="614">345.41862162443954</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1804739360">
              <stringProp name="614">370.1292878740486</stringProp>
              <stringProp name="615">370.1292878740486</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1290414304">
              <stringProp name="615">419.4463559587113</stringProp>
              <stringProp name="616">419.4463559587113</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-5299776">
              <stringProp name="616">400.6787613387551</stringProp>
              <stringProp name="617">400.6787613387551</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-211060544">
              <stringProp name="617">245.8461057241164</stringProp>
              <stringProp name="618">245.8461057241164</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-268698816">
              <stringProp name="618">198.40579710144928</stringProp>
              <stringProp name="619">198.40579710144928</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1966363703">
              <stringProp name="619">197.46741737045147</stringProp>
              <stringProp name="620">197.46741737045147</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1517684896">
              <stringProp name="620">251.2678552809926</stringProp>
              <stringProp name="621">251.2678552809926</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1209024000">
              <stringProp name="621">211.334584506308</stringProp>
              <stringProp name="622">211.334584506308</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1445139616">
              <stringProp name="622">174.0079240955062</stringProp>
              <stringProp name="623">174.0079240955062</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1873848128">
              <stringProp name="623">181.41069752893335</stringProp>
              <stringProp name="624">181.41069752893335</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1221625024">
              <stringProp name="624">160.03649254509435</stringProp>
              <stringProp name="625">160.03649254509435</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1155687168">
              <stringProp name="625">160.97487227609216</stringProp>
              <stringProp name="626">160.97487227609216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1533640192">
              <stringProp name="626">194.75654259201332</stringProp>
              <stringProp name="627">194.75654259201332</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-532394944">
              <stringProp name="627">142.31154207069127</stringProp>
              <stringProp name="628">142.31154207069127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="62284416">
              <stringProp name="628">123.02262537795848</stringProp>
              <stringProp name="629">123.02262537795848</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1678534569">
              <stringProp name="629">130.3211343968304</stringProp>
              <stringProp name="630">130.3211343968304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1207438112">
              <stringProp name="630">129.90407673860912</stringProp>
              <stringProp name="631">129.90407673860912</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1701825856">
              <stringProp name="631">93.4115316442498</stringProp>
              <stringProp name="632">93.4115316442498</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1260421824">
              <stringProp name="632">105.40193931811072</stringProp>
              <stringProp name="633">105.40193931811072</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1290777472">
              <stringProp name="633">112.17912626420602</stringProp>
              <stringProp name="634">112.17912626420602</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1699661280">
              <stringProp name="634">93.93285371702638</stringProp>
              <stringProp name="635">93.93285371702638</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1078062080">
              <stringProp name="635">91.5347721822542</stringProp>
              <stringProp name="636">91.5347721822542</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-176236032">
              <stringProp name="636">111.2407465332082</stringProp>
              <stringProp name="637">111.2407465332082</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-752209664">
              <stringProp name="637">122.50130330518192</stringProp>
              <stringProp name="638">122.50130330518192</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-439316000">
              <stringProp name="638">234.68981336669796</stringProp>
              <stringProp name="639">234.68981336669796</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1625641271">
              <stringProp name="639">214.04545928474613</stringProp>
              <stringProp name="640">214.04545928474613</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2116014816">
              <stringProp name="640">266.49045980606815</stringProp>
              <stringProp name="641">266.49045980606815</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1462697248">
              <stringProp name="641">297.45699092899594</stringProp>
              <stringProp name="642">297.45699092899594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1416827040">
              <stringProp name="642">338.43290584923363</stringProp>
              <stringProp name="643">338.43290584923363</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-385227104">
              <stringProp name="643">359.07725993118544</stringProp>
              <stringProp name="644">359.07725993118544</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="422469920">
              <stringProp name="644">387.54144510478574</stringProp>
              <stringProp name="645">387.54144510478574</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1043941568">
              <stringProp name="645">363.24783651339794</stringProp>
              <stringProp name="646">363.24783651339794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1364119744">
              <stringProp name="646">350.4233135230945</stringProp>
              <stringProp name="647">350.4233135230945</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1570691904">
              <stringProp name="647">367.0013554373893</stringProp>
              <stringProp name="648">367.0013554373893</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1663646912">
              <stringProp name="648">364.0819518298404</stringProp>
              <stringProp name="649">364.0819518298404</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1296553737">
              <stringProp name="649">390.1480554686685</stringProp>
              <stringProp name="650">390.1480554686685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-297040352">
              <stringProp name="650">413.92034198727976</stringProp>
              <stringProp name="651">413.92034198727976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-375001664">
              <stringProp name="651">234.89834219580857</stringProp>
              <stringProp name="652">234.89834219580857</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="878636864">
              <stringProp name="652">335.72203107079554</stringProp>
              <stringProp name="653">335.72203107079554</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2081089216">
              <stringProp name="653">234.37702012303205</stringProp>
              <stringProp name="654">234.37702012303205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1244835776">
              <stringProp name="654">179.42967365238243</stringProp>
              <stringProp name="655">179.42967365238243</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1439777376">
              <stringProp name="655">93.20300281513916</stringProp>
              <stringProp name="656">93.20300281513916</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="783129152">
              <stringProp name="656">237.92201021791263</stringProp>
              <stringProp name="657">237.92201021791263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-990626016">
              <stringProp name="657">195.9034511521218</stringProp>
              <stringProp name="658">195.9034511521218</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1136489600">
              <stringProp name="658">169.21176102596186</stringProp>
              <stringProp name="659">169.21176102596186</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1179426135">
              <stringProp name="659">206.74695026587423</stringProp>
              <stringProp name="660">206.74695026587423</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1554736608">
              <stringProp name="660">114.99426545719945</stringProp>
              <stringProp name="661">114.99426545719945</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1844890560">
              <stringProp name="661">158.57679074132</stringProp>
              <stringProp name="662">158.57679074132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-152879232">
              <stringProp name="662">164.20706912730688</stringProp>
              <stringProp name="663">164.20706912730688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-461596576">
              <stringProp name="663">137.0983213429257</stringProp>
              <stringProp name="664">137.0983213429257</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1117064512">
              <stringProp name="664">127.71452403294757</stringProp>
              <stringProp name="665">127.71452403294757</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-939598688">
              <stringProp name="665">139.60066729225318</stringProp>
              <stringProp name="666">139.60066729225318</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-309236064">
              <stringProp name="666">89.8665415493692</stringProp>
              <stringProp name="667">89.8665415493692</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1305496928">
              <stringProp name="667">94.97549786257947</stringProp>
              <stringProp name="668">94.97549786257947</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-314025280">
              <stringProp name="668">69.63924512563861</stringProp>
              <stringProp name="669">69.63924512563861</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="871810775">
              <stringProp name="669">76.52069648628921</stringProp>
              <stringProp name="670">76.52069648628921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="384571008">
              <stringProp name="670">75.47805234073611</stringProp>
              <stringProp name="671">75.47805234073611</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1889386592">
              <stringProp name="671">67.44969241997705</stringProp>
              <stringProp name="672">67.44969241997705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1513477120">
              <stringProp name="672">131.4680429569388</stringProp>
              <stringProp name="673">131.4680429569388</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1063380192">
              <stringProp name="673">203.82754665832556</stringProp>
              <stringProp name="674">203.82754665832556</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1141409632">
              <stringProp name="674">213.002815139193</stringProp>
              <stringProp name="675">213.002815139193</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1542762176">
              <stringProp name="675">252.3104994265457</stringProp>
              <stringProp name="676">252.3104994265457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="628070720">
              <stringProp name="676">311.11562923574184</stringProp>
              <stringProp name="677">311.11562923574184</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1566458144">
              <stringProp name="677">304.85976436242305</stringProp>
              <stringProp name="678">304.85976436242305</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="417221856">
              <stringProp name="678">294.9546449796684</stringProp>
              <stringProp name="679">294.9546449796684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1299420073">
              <stringProp name="679">383.3708685225732</stringProp>
              <stringProp name="680">383.3708685225732</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1997619456">
              <stringProp name="680">391.0864351996664</stringProp>
              <stringProp name="681">391.0864351996664</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-850652672">
              <stringProp name="681">319.3525179856115</stringProp>
              <stringProp name="682">319.3525179856115</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2121375584">
              <stringProp name="682">317.78855176728183</stringProp>
              <stringProp name="683">317.78855176728183</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-195820480">
              <stringProp name="683">353.1341883015327</stringProp>
              <stringProp name="684">353.1341883015327</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-850984832">
              <stringProp name="684">359.598582003962</stringProp>
              <stringProp name="685">359.598582003962</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-868220416">
              <stringProp name="685">353.4469815451986</stringProp>
              <stringProp name="686">353.4469815451986</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-874718560">
              <stringProp name="686">339.4755499947867</stringProp>
              <stringProp name="687">339.4755499947867</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1752130912">
              <stringProp name="687">265.65634448962567</stringProp>
              <stringProp name="688">265.65634448962567</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1060963904">
              <stringProp name="688">170.3586695860703</stringProp>
              <stringProp name="689">170.3586695860703</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-133984233">
              <stringProp name="689">132.82348034615788</stringProp>
              <stringProp name="690">132.82348034615788</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1831972384">
              <stringProp name="690">136.15994161192785</stringProp>
              <stringProp name="691">136.15994161192785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-907859552">
              <stringProp name="691">165.4582421019706</stringProp>
              <stringProp name="692">165.4582421019706</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1448766464">
              <stringProp name="692">144.50109477635283</stringProp>
              <stringProp name="693">144.50109477635283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-295922176">
              <stringProp name="693">170.04587634240434</stringProp>
              <stringProp name="694">170.04587634240434</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1423738880">
              <stringProp name="694">175.7804191429465</stringProp>
              <stringProp name="695">175.7804191429465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1057124576">
              <stringProp name="695">160.3492857887603</stringProp>
              <stringProp name="696">160.3492857887603</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1981145792">
              <stringProp name="696">159.30664164320717</stringProp>
              <stringProp name="697">159.30664164320717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="175384096">
              <stringProp name="697">119.06057762485662</stringProp>
              <stringProp name="698">119.06057762485662</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1236023680">
              <stringProp name="698">95.39255552080074</stringProp>
              <stringProp name="699">95.39255552080074</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1216422880">
              <stringProp name="699">108.94692941299137</stringProp>
              <stringProp name="700">108.94692941299137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1137001216">
              <stringProp name="700">100.50151183401104</stringProp>
              <stringProp name="701">100.50151183401104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-307542144">
              <stringProp name="701">77.2505473881764</stringProp>
              <stringProp name="702">77.2505473881764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1051611904">
              <stringProp name="702">67.762485663643</stringProp>
              <stringProp name="703">67.762485663643</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-299914080">
              <stringProp name="703">100.0844541757898</stringProp>
              <stringProp name="704">100.0844541757898</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1434080096">
              <stringProp name="704">76.10363882806796</stringProp>
              <stringProp name="705">76.10363882806796</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-105111904">
              <stringProp name="705">71.41174017307893</stringProp>
              <stringProp name="706">71.41174017307893</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="9838816">
              <stringProp name="706">120.520279428631</stringProp>
              <stringProp name="707">120.520279428631</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1486873504">
              <stringProp name="707">215.08810343029924</stringProp>
              <stringProp name="708">215.08810343029924</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="496244992">
              <stringProp name="708">260.5473881764154</stringProp>
              <stringProp name="709">260.5473881764154</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-818325545">
              <stringProp name="709">284.21541028047125</stringProp>
              <stringProp name="710">284.21541028047125</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-856295840">
              <stringProp name="710">325.3998540298196</stringProp>
              <stringProp name="711">325.3998540298196</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-431277152">
              <stringProp name="711">296.20581795433213</stringProp>
              <stringProp name="712">296.20581795433213</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1686993888">
              <stringProp name="712">190.16890835157963</stringProp>
              <stringProp name="713">190.16890835157963</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1166617536">
              <stringProp name="713">304.54697111875714</stringProp>
              <stringProp name="714">304.54697111875714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1635991104">
              <stringProp name="714">324.67000312793243</stringProp>
              <stringProp name="715">324.67000312793243</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1677838528">
              <stringProp name="715">358.24314461474296</stringProp>
              <stringProp name="716">358.24314461474296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2057705632">
              <stringProp name="716">423.9297257845897</stringProp>
              <stringProp name="717">423.9297257845897</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1960880128">
              <stringProp name="717">349.27640496298613</stringProp>
              <stringProp name="718">349.27640496298613</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1090418528">
              <stringProp name="718">310.80283599207587</stringProp>
              <stringProp name="719">310.80283599207587</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1719124407">
              <stringProp name="719">319.97810447294336</stringProp>
              <stringProp name="720">319.97810447294336</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1851870528">
              <stringProp name="720">286.71775622979874</stringProp>
              <stringProp name="721">286.71775622979874</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1213653248">
              <stringProp name="721">267.2203107079554</stringProp>
              <stringProp name="722">267.2203107079554</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="837443872">
              <stringProp name="722">241.25847148368263</stringProp>
              <stringProp name="723">241.25847148368263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NASATesting" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="NASATesting" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-119815296">
              <stringProp name="723">136.4727348555938</stringProp>
              <stringProp name="724">136.4727348555938</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1949343872">
              <stringProp name="724">102.89959336878324</stringProp>
              <stringProp name="725">102.89959336878324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-317133408">
              <stringProp name="725">113.63882806798038</stringProp>
              <stringProp name="726">113.63882806798038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1987622688">
              <stringProp name="726">164.72839120008342</stringProp>
              <stringProp name="727">164.72839120008342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1028912672">
              <stringProp name="727">186.20686059847773</stringProp>
              <stringProp name="728">186.20686059847773</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1726147808">
              <stringProp name="728">157.42988218121155</stringProp>
              <stringProp name="729">157.42988218121155</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="382799543">
              <stringProp name="729">120.41601501407568</stringProp>
              <stringProp name="730">120.41601501407568</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1854873088">
              <stringProp name="730">168.8989677822959</stringProp>
              <stringProp name="731">168.8989677822959</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="13068768">
              <stringProp name="731">120.520279428631</stringProp>
              <stringProp name="732">120.520279428631</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1189004992">
              <stringProp name="732">108.94692941299137</stringProp>
              <stringProp name="733">108.94692941299137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1704193568">
              <stringProp name="733">140.33051819414035</stringProp>
              <stringProp name="734">140.33051819414035</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-87281920">
              <stringProp name="734">113.53456365342508</stringProp>
              <stringProp name="735">113.53456365342508</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-338189664">
              <stringProp name="735">75.06099468251486</stringProp>
              <stringProp name="736">75.06099468251486</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1613580832">
              <stringProp name="736">70.05630278385986</stringProp>
              <stringProp name="737">70.05630278385986</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1492584704">
              <stringProp name="737">71.30747575852361</stringProp>
              <stringProp name="738">71.30747575852361</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="940947680">
              <stringProp name="738">65.88572620164737</stringProp>
              <stringProp name="739">65.88572620164737</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1236714793">
              <stringProp name="739">63.383380252319874</stringProp>
              <stringProp name="740">63.383380252319874</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1647427264">
              <stringProp name="740">62.96632259409864</stringProp>
              <stringProp name="741">62.96632259409864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1900454624">
              <stringProp name="741">55.98060681889271</stringProp>
              <stringProp name="742">55.98060681889271</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1502489952">
              <stringProp name="742">99.98018976123448</stringProp>
              <stringProp name="743">99.98018976123448</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="142765088">
              <stringProp name="743">99.77166093212384</stringProp>
              <stringProp name="744">99.77166093212384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-898230464">
              <stringProp name="744">82.25523928683138</stringProp>
              <stringProp name="745">82.25523928683138</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="193538528">
              <stringProp name="745">104.88061724533416</stringProp>
              <stringProp name="746">104.88061724533416</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2112988576">
              <stringProp name="746">102.27400688145134</stringProp>
              <stringProp name="747">102.27400688145134</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2099883264">
              <stringProp name="747">98.83328120112604</stringProp>
              <stringProp name="748">98.83328120112604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-878019200">
              <stringProp name="748">165.4582421019706</stringProp>
              <stringProp name="749">165.4582421019706</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="172017335">
              <stringProp name="749">129.38275466583255</stringProp>
              <stringProp name="750">129.38275466583255</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-23006848">
              <stringProp name="750">127.2974663747263</stringProp>
              <stringProp name="751">127.2974663747263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="433496032">
              <stringProp name="751">173.9036596809509</stringProp>
              <stringProp name="752">173.9036596809509</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1609692512">
              <stringProp name="752">152.7379835262225</stringProp>
              <stringProp name="753">152.7379835262225</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="635501536">
              <stringProp name="753">165.04118444374936</stringProp>
              <stringProp name="754">165.04118444374936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-146220032">
              <stringProp name="754">168.16911688040872</stringProp>
              <stringProp name="755">168.16911688040872</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1472496256">
              <stringProp name="755">176.92732770305497</stringProp>
              <stringProp name="756">176.92732770305497</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-6326144">
              <stringProp name="756">117.49661140652694</stringProp>
              <stringProp name="757">117.49661140652694</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="471781792">
              <stringProp name="757">120.10322177040976</stringProp>
              <stringProp name="758">120.10322177040976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="858452064">
              <stringProp name="758">109.67678031487851</stringProp>
              <stringProp name="759">109.67678031487851</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-651147337">
              <stringProp name="759">81.31685955583357</stringProp>
              <stringProp name="760">81.31685955583357</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-317979360">
              <stringProp name="760">116.76676050463976</stringProp>
              <stringProp name="761">116.76676050463976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1226713408">
              <stringProp name="761">81.00406631216765</stringProp>
              <stringProp name="762">81.00406631216765</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="741265600">
              <stringProp name="762">106.75737670732978</stringProp>
              <stringProp name="763">106.75737670732978</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1777072160">
              <stringProp name="763">122.70983213429255</stringProp>
              <stringProp name="764">122.70983213429255</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1368481600">
              <stringProp name="764">145.43947450735064</stringProp>
              <stringProp name="765">145.43947450735064</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="711129024">
              <stringProp name="765">169.31602544051717</stringProp>
              <stringProp name="766">169.31602544051717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-776174528">
              <stringProp name="766">128.1315816911688</stringProp>
              <stringProp name="767">128.1315816911688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-980792736">
              <stringProp name="767">134.9087686372641</stringProp>
              <stringProp name="768">134.9087686372641</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2054980736">
              <stringProp name="768">98.10343029923888</stringProp>
              <stringProp name="769">98.10343029923888</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1129819849">
              <stringProp name="769">100.50151183401104</stringProp>
              <stringProp name="770">100.50151183401104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-902256320">
              <stringProp name="770">64.94734647064956</stringProp>
              <stringProp name="771">64.94734647064956</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-385335776">
              <stringProp name="771">75.68658116984673</stringProp>
              <stringProp name="772">75.68658116984673</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1277380832">
              <stringProp name="772">74.01835053696172</stringProp>
              <stringProp name="773">74.01835053696172</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-880843232">
              <stringProp name="773">57.02325096444584</stringProp>
              <stringProp name="774">57.02325096444584</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-512376384">
              <stringProp name="774">63.17485142320925</stringProp>
              <stringProp name="775">63.17485142320925</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1482201536">
              <stringProp name="775">41.59211761025962</stringProp>
              <stringProp name="776">41.59211761025962</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1727198400">
              <stringProp name="776">42.63476175581274</stringProp>
              <stringProp name="777">42.63476175581274</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1119042144">
              <stringProp name="777">105.29767490355542</stringProp>
              <stringProp name="778">105.29767490355542</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1477435680">
              <stringProp name="778">93.20300281513916</stringProp>
              <stringProp name="779">93.20300281513916</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1405186071">
              <stringProp name="779">106.86164112188509</stringProp>
              <stringProp name="780">106.86164112188509</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1878218848">
              <stringProp name="780">99.56313210301322</stringProp>
              <stringProp name="781">99.56313210301322</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="502278848">
              <stringProp name="781">110.09383797309978</stringProp>
              <stringProp name="782">110.09383797309978</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-493260960">
              <stringProp name="782">132.197893858826</stringProp>
              <stringProp name="783">132.197893858826</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1354135872">
              <stringProp name="783">114.16015014075695</stringProp>
              <stringProp name="784">114.16015014075695</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="302357120">
              <stringProp name="784">140.01772495047442</stringProp>
              <stringProp name="785">140.01772495047442</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1100412224">
              <stringProp name="785">147.10770514023565</stringProp>
              <stringProp name="786">147.10770514023565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="231001568">
              <stringProp name="786">144.0840371181316</stringProp>
              <stringProp name="787">144.0840371181316</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-237675936">
              <stringProp name="787">178.0742362631634</stringProp>
              <stringProp name="788">178.0742362631634</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-16730368">
              <stringProp name="788">114.89000104264414</stringProp>
              <stringProp name="789">114.89000104264414</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-938962185">
              <stringProp name="789">124.69085601084348</stringProp>
              <stringProp name="790">124.69085601084348</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-702564800">
              <stringProp name="790">174.94630382650402</stringProp>
              <stringProp name="791">174.94630382650402</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="231955872">
              <stringProp name="791">144.0840371181316</stringProp>
              <stringProp name="792">144.0840371181316</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1739709440">
              <stringProp name="792">143.66697945991032</stringProp>
              <stringProp name="793">143.66697945991032</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="654896384">
              <stringProp name="793">148.04608487123346</stringProp>
              <stringProp name="794">148.04608487123346</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="332231648">
              <stringProp name="794">146.89917631112505</stringProp>
              <stringProp name="795">146.89917631112505</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-233791200">
              <stringProp name="795">196.32050881034303</stringProp>
              <stringProp name="796">196.32050881034303</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-12758784">
              <stringProp name="796">187.04097591492024</stringProp>
              <stringProp name="797">187.04097591492024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1322553696">
              <stringProp name="797">201.32520070899804</stringProp>
              <stringProp name="798">201.32520070899804</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="520024608">
              <stringProp name="798">185.37274528203525</stringProp>
              <stringProp name="799">185.37274528203525</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-908042208">
              <stringProp name="799">149.71431550411845</stringProp>
              <stringProp name="800">149.71431550411845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-199304512">
              <stringProp name="800">152.32092586800124</stringProp>
              <stringProp name="801">152.32092586800124</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1651415360">
              <stringProp name="801">124.37806276717754</stringProp>
              <stringProp name="802">124.37806276717754</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1960378784">
              <stringProp name="802">93.09873840058388</stringProp>
              <stringProp name="803">93.09873840058388</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-898361536">
              <stringProp name="803">83.40214784693983</stringProp>
              <stringProp name="804">83.40214784693983</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="613691424">
              <stringProp name="804">92.78594515691796</stringProp>
              <stringProp name="805">92.78594515691796</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-134736960">
              <stringProp name="805">73.60129287874047</stringProp>
              <stringProp name="806">73.60129287874047</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="737150080">
              <stringProp name="806">67.24116359086644</stringProp>
              <stringProp name="807">67.24116359086644</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1926167520">
              <stringProp name="807">75.16525909707016</stringProp>
              <stringProp name="808">75.16525909707016</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-254429824">
              <stringProp name="808">79.33583567928267</stringProp>
              <stringProp name="809">79.33583567928267</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1769275191">
              <stringProp name="809">93.4115316442498</stringProp>
              <stringProp name="810">93.4115316442498</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2080158752">
              <stringProp name="810">103.5251798561151</stringProp>
              <stringProp name="811">103.5251798561151</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1021578912">
              <stringProp name="811">171.60984256073402</stringProp>
              <stringProp name="812">171.60984256073402</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="524206528">
              <stringProp name="812">186.5196538421437</stringProp>
              <stringProp name="813">186.5196538421437</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1871160992">
              <stringProp name="813">236.87936607235952</stringProp>
              <stringProp name="814">236.87936607235952</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="222428800">
              <stringProp name="814">289.32436659368153</stringProp>
              <stringProp name="815">289.32436659368153</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2058373312">
              <stringProp name="815">243.7608174330101</stringProp>
              <stringProp name="816">243.7608174330101</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-100136608">
              <stringProp name="816">275.0401417996038</stringProp>
              <stringProp name="817">275.0401417996038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-9105728">
              <stringProp name="817">351.25742883953706</stringProp>
              <stringProp name="818">351.25742883953706</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1911055904">
              <stringProp name="818">379.9301428422479</stringProp>
              <stringProp name="819">379.9301428422479</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="275331191">
              <stringProp name="819">361.0582838077364</stringProp>
              <stringProp name="820">361.0582838077364</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-318428000">
              <stringProp name="820">393.27598790532784</stringProp>
              <stringProp name="821">393.27598790532784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1812232128">
              <stringProp name="821">336.24335314357205</stringProp>
              <stringProp name="822">336.24335314357205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="453244512">
              <stringProp name="822">393.6930455635491</stringProp>
              <stringProp name="823">393.6930455635491</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1712001952">
              <stringProp name="823">417.77812532582624</stringProp>
              <stringProp name="824">417.77812532582624</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-428500608">
              <stringProp name="824">298.2911062454384</stringProp>
              <stringProp name="825">298.2911062454384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1340829472">
              <stringProp name="825">263.4667917839641</stringProp>
              <stringProp name="826">263.4667917839641</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="196960768">
              <stringProp name="826">183.287456990929</stringProp>
              <stringProp name="827">183.287456990929</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-789585312">
              <stringProp name="827">183.4959858200396</stringProp>
              <stringProp name="828">183.4959858200396</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-846439968">
              <stringProp name="828">126.04629340006257</stringProp>
              <stringProp name="829">126.04629340006257</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1812407319">
              <stringProp name="829">136.99405692837036</stringProp>
              <stringProp name="830">136.99405692837036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2018298272">
              <stringProp name="830">154.61474298821813</stringProp>
              <stringProp name="831">154.61474298821813</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="774335520">
              <stringProp name="831">133.866124491711</stringProp>
              <stringProp name="832">133.866124491711</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="742877984">
              <stringProp name="832">169.31602544051717</stringProp>
              <stringProp name="833">169.31602544051717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1528414176">
              <stringProp name="833">149.2972578458972</stringProp>
              <stringProp name="834">149.2972578458972</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-795540992">
              <stringProp name="834">123.33541862162444</stringProp>
              <stringProp name="835">123.33541862162444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1753644000">
              <stringProp name="835">96.85225732457512</stringProp>
              <stringProp name="836">96.85225732457512</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1126244608">
              <stringProp name="836">101.64842039411948</stringProp>
              <stringProp name="837">101.64842039411948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="904676704">
              <stringProp name="837">112.8047127515379</stringProp>
              <stringProp name="838">112.8047127515379</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="120904064">
              <stringProp name="838">67.13689917631112</stringProp>
              <stringProp name="839">67.13689917631112</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-700346953">
              <stringProp name="839">85.80022938171201</stringProp>
              <stringProp name="840">85.80022938171201</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1071901728">
              <stringProp name="840">76.41643207173392</stringProp>
              <stringProp name="841">76.41643207173392</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-386119744">
              <stringProp name="841">93.82858930247106</stringProp>
              <stringProp name="842">93.82858930247106</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1834804896">
              <stringProp name="842">67.34542800542175</stringProp>
              <stringProp name="843">67.34542800542175</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1833201760">
              <stringProp name="843">59.52559691377333</stringProp>
              <stringProp name="844">59.52559691377333</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="866074688">
              <stringProp name="844">104.98488165988948</stringProp>
              <stringProp name="845">104.98488165988948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1237693344">
              <stringProp name="845">114.68147221353352</stringProp>
              <stringProp name="846">114.68147221353352</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2094138880">
              <stringProp name="846">189.960379522469</stringProp>
              <stringProp name="847">189.960379522469</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="412683552">
              <stringProp name="847">209.5620894588677</stringProp>
              <stringProp name="848">209.5620894588677</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2108113760">
              <stringProp name="848">266.49045980606815</stringProp>
              <stringProp name="849">266.49045980606815</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1593004951">
              <stringProp name="849">280.2533625273694</stringProp>
              <stringProp name="850">280.2533625273694</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1992702208">
              <stringProp name="850">48.89062662913148</stringProp>
              <stringProp name="851">48.89062662913148</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1789439104">
              <stringProp name="851">135.95141278281724</stringProp>
              <stringProp name="852">135.95141278281724</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="334570816">
              <stringProp name="852">315.181941403399</stringProp>
              <stringProp name="853">315.181941403399</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-138132064">
              <stringProp name="853">361.9966635387342</stringProp>
              <stringProp name="854">361.9966635387342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1812798976">
              <stringProp name="854">384.1007194244604</stringProp>
              <stringProp name="855">384.1007194244604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="8086752">
              <stringProp name="855">373.1529558961526</stringProp>
              <stringProp name="856">373.1529558961526</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1474155584">
              <stringProp name="856">273.37191116671875</stringProp>
              <stringProp name="857">273.37191116671875</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1966063456">
              <stringProp name="857">351.67448649775827</stringProp>
              <stringProp name="858">351.67448649775827</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1410758944">
              <stringProp name="858">337.0774684600146</stringProp>
              <stringProp name="859">337.0774684600146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="393414967">
              <stringProp name="859">362.1009279532895</stringProp>
              <stringProp name="860">362.1009279532895</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1935758368">
              <stringProp name="860">296.31008236888744</stringProp>
              <stringProp name="861">296.31008236888744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="558393024">
              <stringProp name="861">230.10217912626425</stringProp>
              <stringProp name="862">230.10217912626425</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1546971936">
              <stringProp name="862">144.39683036179753</stringProp>
              <stringProp name="863">144.39683036179753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="335317312">
              <stringProp name="863">140.01772495047442</stringProp>
              <stringProp name="864">140.01772495047442</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="141107008">
              <stringProp name="864">184.22583672192684</stringProp>
              <stringProp name="865">184.22583672192684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1745159360">
              <stringProp name="865">170.87999165884685</stringProp>
              <stringProp name="866">170.87999165884685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1921822432">
              <stringProp name="866">145.8565321655719</stringProp>
              <stringProp name="867">145.8565321655719</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1027488256">
              <stringProp name="867">171.60984256073402</stringProp>
              <stringProp name="868">171.60984256073402</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1231096224">
              <stringProp name="868">159.6194348868731</stringProp>
              <stringProp name="869">159.6194348868731</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1253110953">
              <stringProp name="869">133.34480241893442</stringProp>
              <stringProp name="870">133.34480241893442</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1493390240">
              <stringProp name="870">94.76696903346884</stringProp>
              <stringProp name="871">94.76696903346884</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-228009408">
              <stringProp name="871">92.473151913252</stringProp>
              <stringProp name="872">92.473151913252</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1031767136">
              <stringProp name="872">117.60087582108228</stringProp>
              <stringProp name="873">117.60087582108228</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1905378208">
              <stringProp name="873">109.05119382754664</stringProp>
              <stringProp name="874">109.05119382754664</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1755567840">
              <stringProp name="874">81.73391721405483</stringProp>
              <stringProp name="875">81.73391721405483</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="954189216">
              <stringProp name="875">80.89980189761232</stringProp>
              <stringProp name="876">80.89980189761232</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-930760864">
              <stringProp name="876">81.4211239703889</stringProp>
              <stringProp name="877">81.4211239703889</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-738419680">
              <stringProp name="877">66.71984151808988</stringProp>
              <stringProp name="878">66.71984151808988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1061513216">
              <stringProp name="878">61.40235637576895</stringProp>
              <stringProp name="879">61.40235637576895</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1309195191">
              <stringProp name="879">82.67229694505264</stringProp>
              <stringProp name="880">82.67229694505264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-858445920">
              <stringProp name="880">96.33093525179856</stringProp>
              <stringProp name="881">96.33093525179856</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2024024096">
              <stringProp name="881">154.61474298821813</stringProp>
              <stringProp name="882">154.61474298821813</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="489380032">
              <stringProp name="882">242.718173287457</stringProp>
              <stringProp name="883">242.718173287457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="303122048">
              <stringProp name="883">185.47700969659056</stringProp>
              <stringProp name="884">185.47700969659056</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1768100480">
              <stringProp name="884">157.42988218121155</stringProp>
              <stringProp name="885">157.42988218121155</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="206611488">
              <stringProp name="885">165.97956417474717</stringProp>
              <stringProp name="886">165.97956417474717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-557535584">
              <stringProp name="886">257.2109269106454</stringProp>
              <stringProp name="887">257.2109269106454</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="900714528">
              <stringProp name="887">297.35272651444063</stringProp>
              <stringProp name="888">297.35272651444063</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1230415520">
              <stringProp name="888">324.0444166406005</stringProp>
              <stringProp name="889">324.0444166406005</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1743834985">
              <stringProp name="889">353.86403920341985</stringProp>
              <stringProp name="890">353.86403920341985</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1089527040">
              <stringProp name="890">349.58919820665204</stringProp>
              <stringProp name="891">349.58919820665204</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1403652960">
              <stringProp name="891">327.0680846627046</stringProp>
              <stringProp name="892">327.0680846627046</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1737446432">
              <stringProp name="892">299.85507246376807</stringProp>
              <stringProp name="893">299.85507246376807</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1500962048">
              <stringProp name="893">293.80773641956</stringProp>
              <stringProp name="894">293.80773641956</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="858152128">
              <stringProp name="894">237.92201021791263</stringProp>
              <stringProp name="895">237.92201021791263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1125806432">
              <stringProp name="895">229.37232822437704</stringProp>
              <stringProp name="896">229.37232822437704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="470023872">
              <stringProp name="896">240.9456782400167</stringProp>
              <stringProp name="897">240.9456782400167</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1570864224">
              <stringProp name="897">199.4484412470024</stringProp>
              <stringProp name="898">199.4484412470024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1620849696">
              <stringProp name="898">155.86591596288187</stringProp>
              <stringProp name="899">155.86591596288187</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-719436960">
              <stringProp name="899">158.36826191220936</stringProp>
              <stringProp name="900">158.36826191220936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1613272416">
              <stringProp name="900">146.79491189656972</stringProp>
              <stringProp name="901">146.79491189656972</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1630837568">
              <stringProp name="901">191.10728808257744</stringProp>
              <stringProp name="902">191.10728808257744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1654524768">
              <stringProp name="902">113.847356897091</stringProp>
              <stringProp name="903">113.847356897091</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ClarkNetTraining" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="ClarkNetTraining" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="548163040">
              <stringProp name="1">624.2812597443094</stringProp>
              <stringProp name="2">624.2812597443094</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1321254144">
              <stringProp name="2">666.688493919551</stringProp>
              <stringProp name="3">666.688493919551</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-677786208">
              <stringProp name="3">575.6376676021205</stringProp>
              <stringProp name="4">575.6376676021205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1518105312">
              <stringProp name="4">805.1356407857811</stringProp>
              <stringProp name="5">805.1356407857811</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2122903264">
              <stringProp name="5">590.604926722794</stringProp>
              <stringProp name="6">590.604926722794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="733457792">
              <stringProp name="6">656.0866853757406</stringProp>
              <stringProp name="7">656.0866853757406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1610394496">
              <stringProp name="7">515.7686311194262</stringProp>
              <stringProp name="8">515.7686311194262</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-757490944">
              <stringProp name="8">227.96071094480823</stringProp>
              <stringProp name="9">227.96071094480823</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1148269415">
              <stringProp name="9">726.2457125038978</stringProp>
              <stringProp name="10">726.2457125038978</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1144421920">
              <stringProp name="10">666.0648581228563</stringProp>
              <stringProp name="11">666.0648581228563</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1883151072">
              <stringProp name="11">772.7065793576552</stringProp>
              <stringProp name="12">772.7065793576552</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1843183776">
              <stringProp name="12">693.5048331774244</stringProp>
              <stringProp name="13">693.5048331774244</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="540013568">
              <stringProp name="13">776.7602120361709</stringProp>
              <stringProp name="14">776.7602120361709</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2137995232">
              <stringProp name="14">498.9304646086685</stringProp>
              <stringProp name="15">498.9304646086685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1791219968">
              <stringProp name="15">613.3676333021516</stringProp>
              <stringProp name="16">613.3676333021516</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-132304544">
              <stringProp name="16">699.7411911443717</stringProp>
              <stringProp name="17">699.7411911443717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-825384608">
              <stringProp name="17">789.8565637667602</stringProp>
              <stringProp name="18">789.8565637667602</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2086428096">
              <stringProp name="18">710.3429996881822</stringProp>
              <stringProp name="19">710.3429996881822</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-968251369">
              <stringProp name="19">619.9158091674462</stringProp>
              <stringProp name="20">619.9158091674462</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-871507168">
              <stringProp name="20">814.8019956345495</stringProp>
              <stringProp name="21">814.8019956345495</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1458591200">
              <stringProp name="21">701.3002806361085</stringProp>
              <stringProp name="22">701.3002806361085</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-730499104">
              <stringProp name="22">761.1693171188026</stringProp>
              <stringProp name="23">761.1693171188026</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1472396992">
              <stringProp name="23">508.5968194574367</stringProp>
              <stringProp name="24">508.5968194574367</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1151694784">
              <stringProp name="24">839.7474275023386</stringProp>
              <stringProp name="25">839.7474275023386</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="977565216">
              <stringProp name="25">818.2319925163705</stringProp>
              <stringProp name="26">818.2319925163705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1670768288">
              <stringProp name="26">683.838478328656</stringProp>
              <stringProp name="27">683.838478328656</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1159136544">
              <stringProp name="27">779.8783910196445</stringProp>
              <stringProp name="28">779.8783910196445</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1702284384">
              <stringProp name="28">847.2310570626754</stringProp>
              <stringProp name="29">847.2310570626754</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="38555127">
              <stringProp name="29">832.5756158403492</stringProp>
              <stringProp name="30">832.5756158403492</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1269787584">
              <stringProp name="30">721.5684440286873</stringProp>
              <stringProp name="31">721.5684440286873</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="628551488">
              <stringProp name="31">667.0003118178985</stringProp>
              <stringProp name="32">667.0003118178985</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1599528224">
              <stringProp name="32">1010.0</stringProp>
              <stringProp name="33">1010.0</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="883723968">
              <stringProp name="33">817.6083567196757</stringProp>
              <stringProp name="34">817.6083567196757</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1815305152">
              <stringProp name="34">668.2475834112879</stringProp>
              <stringProp name="35">668.2475834112879</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1459875840">
              <stringProp name="35">701.3002806361085</stringProp>
              <stringProp name="36">701.3002806361085</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1208499360">
              <stringProp name="36">623.969441845962</stringProp>
              <stringProp name="37">623.969441845962</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-625205536">
              <stringProp name="37">836.629248518865</stringProp>
              <stringProp name="38">836.629248518865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="677272736">
              <stringProp name="38">681.9675709385718</stringProp>
              <stringProp name="39">681.9675709385718</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1796453449">
              <stringProp name="39">707.8484565014031</stringProp>
              <stringProp name="40">707.8484565014031</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1741641472">
              <stringProp name="40">653.903960087309</stringProp>
              <stringProp name="41">653.903960087309</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2030960128">
              <stringProp name="41">795.4692859370128</stringProp>
              <stringProp name="42">795.4692859370128</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-933531936">
              <stringProp name="42">645.1730589335828</stringProp>
              <stringProp name="43">645.1730589335828</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-239992032">
              <stringProp name="43">577.1967570938572</stringProp>
              <stringProp name="44">577.1967570938572</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1082667648">
              <stringProp name="44">658.2694106641721</stringProp>
              <stringProp name="45">658.2694106641721</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2065608160">
              <stringProp name="45">593.4112878079202</stringProp>
              <stringProp name="46">593.4112878079202</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1374415232">
              <stringProp name="46">768.3411287807921</stringProp>
              <stringProp name="47">768.3411287807921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1641185664">
              <stringProp name="47">694.4402868724665</stringProp>
              <stringProp name="48">694.4402868724665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2063626304">
              <stringProp name="48">590.604926722794</stringProp>
              <stringProp name="49">590.604926722794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-459292809">
              <stringProp name="49">597.7767383847832</stringProp>
              <stringProp name="50">597.7767383847832</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1562520096">
              <stringProp name="50">522.9404427814158</stringProp>
              <stringProp name="51">522.9404427814158</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-636811968">
              <stringProp name="51">561.605862176489</stringProp>
              <stringProp name="52">561.605862176489</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-848677376">
              <stringProp name="52">627.7112566261304</stringProp>
              <stringProp name="53">627.7112566261304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="33680352">
              <stringProp name="53">363.9133146242594</stringProp>
              <stringProp name="54">363.9133146242594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1559993696">
              <stringProp name="54">386.9878391019644</stringProp>
              <stringProp name="55">386.9878391019644</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="675904992">
              <stringProp name="55">619.603991269099</stringProp>
              <stringProp name="56">619.603991269099</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1356433984">
              <stringProp name="56">537.5958840037418</stringProp>
              <stringProp name="57">537.5958840037418</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="936995232">
              <stringProp name="57">521.6931711880263</stringProp>
              <stringProp name="58">521.6931711880263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-823957248">
              <stringProp name="58">515.1449953227316</stringProp>
              <stringProp name="59">515.1449953227316</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1352154185">
              <stringProp name="59">543.2086061739944</stringProp>
              <stringProp name="60">543.2086061739944</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1852994976">
              <stringProp name="60">471.178671655753</stringProp>
              <stringProp name="61">471.178671655753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1197061632">
              <stringProp name="61">573.7667602120362</stringProp>
              <stringProp name="62">573.7667602120362</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-983354432">
              <stringProp name="62">532.9186155285314</stringProp>
              <stringProp name="63">532.9186155285314</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="96360864">
              <stringProp name="63">473.36139694418455</stringProp>
              <stringProp name="64">473.36139694418455</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1612498560">
              <stringProp name="64">518.5749922045526</stringProp>
              <stringProp name="65">518.5749922045526</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1449795872">
              <stringProp name="65">455.2759588400374</stringProp>
              <stringProp name="66">455.2759588400374</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-399347328">
              <stringProp name="66">627.0876208294355</stringProp>
              <stringProp name="67">627.0876208294355</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="128682784">
              <stringProp name="67">629.8939819145619</stringProp>
              <stringProp name="68">629.8939819145619</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1121609024">
              <stringProp name="68">524.4995322731525</stringProp>
              <stringProp name="69">524.4995322731525</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-257983241">
              <stringProp name="69">490.1995634549424</stringProp>
              <stringProp name="70">490.1995634549424</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="757028192">
              <stringProp name="70">570.0249454318679</stringProp>
              <stringProp name="71">570.0249454318679</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="505160640">
              <stringProp name="71">534.1658871219208</stringProp>
              <stringProp name="72">534.1658871219208</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1320096160">
              <stringProp name="72">477.7268475210477</stringProp>
              <stringProp name="73">477.7268475210477</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1202441792">
              <stringProp name="73">617.7330838790147</stringProp>
              <stringProp name="74">617.7330838790147</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-558511776">
              <stringProp name="74">513.5859058309948</stringProp>
              <stringProp name="75">513.5859058309948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="120709920">
              <stringProp name="75">425.3414405986903</stringProp>
              <stringProp name="76">425.3414405986903</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="291277760">
              <stringProp name="76">547.5740567508576</stringProp>
              <stringProp name="77">547.5740567508576</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1540469568">
              <stringProp name="77">457.1468662301216</stringProp>
              <stringProp name="78">457.1468662301216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1673011520">
              <stringProp name="78">515.7686311194262</stringProp>
              <stringProp name="79">515.7686311194262</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-256845417">
              <stringProp name="79">490.1995634549424</stringProp>
              <stringProp name="80">490.1995634549424</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1873922944">
              <stringProp name="80">502.6722793888368</stringProp>
              <stringProp name="81">502.6722793888368</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="345984672">
              <stringProp name="81">551.9395073277207</stringProp>
              <stringProp name="82">551.9395073277207</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="205649056">
              <stringProp name="82">590.2931088244466</stringProp>
              <stringProp name="83">590.2931088244466</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-268404640">
              <stringProp name="83">540.7140629872155</stringProp>
              <stringProp name="84">540.7140629872155</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1069637088">
              <stringProp name="84">442.8032429061428</stringProp>
              <stringProp name="85">442.8032429061428</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="352339136">
              <stringProp name="85">407.87963829123794</stringProp>
              <stringProp name="86">407.87963829123794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1496600832">
              <stringProp name="86">468.6841284689741</stringProp>
              <stringProp name="87">468.6841284689741</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1025300064">
              <stringProp name="87">371.0851262862489</stringProp>
              <stringProp name="88">371.0851262862489</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1615082720">
              <stringProp name="88">400.39600873090114</stringProp>
              <stringProp name="89">400.39600873090114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="294481111">
              <stringProp name="89">433.7605238540692</stringProp>
              <stringProp name="90">433.7605238540692</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-186683904">
              <stringProp name="90">425.965076395385</stringProp>
              <stringProp name="91">425.965076395385</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-103952800">
              <stringProp name="91">419.7287184284378</stringProp>
              <stringProp name="92">419.7287184284378</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1803659584">
              <stringProp name="92">461.5123168069847</stringProp>
              <stringProp name="93">461.5123168069847</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2126419840">
              <stringProp name="93">377.6333021515435</stringProp>
              <stringProp name="94">377.6333021515435</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1700990016">
              <stringProp name="94">347.6987839101964</stringProp>
              <stringProp name="95">347.6987839101964</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1927075456">
              <stringProp name="95">374.2033052697225</stringProp>
              <stringProp name="96">374.2033052697225</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1583869856">
              <stringProp name="96">364.53695042095416</stringProp>
              <stringProp name="97">364.53695042095416</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2017673760">
              <stringProp name="97">394.7832865606486</stringProp>
              <stringProp name="98">394.7832865606486</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="244082304">
              <stringProp name="98">305.29154973495474</stringProp>
              <stringProp name="99">305.29154973495474</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1393908688">
              <stringProp name="99">348.94605550358585</stringProp>
              <stringProp name="100">348.94605550358585</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1594944832">
              <stringProp name="100">319.94699095728095</stringProp>
              <stringProp name="101">319.94699095728095</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-686964800">
              <stringProp name="101">474.29685063922665</stringProp>
              <stringProp name="102">474.29685063922665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="512916384">
              <stringProp name="102">353.311506080449</stringProp>
              <stringProp name="103">353.311506080449</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1893977312">
              <stringProp name="103">310.90427190520734</stringProp>
              <stringProp name="104">310.90427190520734</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-840024256">
              <stringProp name="104">315.5815403804178</stringProp>
              <stringProp name="105">315.5815403804178</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="578407424">
              <stringProp name="105">214.24072341752415</stringProp>
              <stringProp name="106">214.24072341752415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-972502912">
              <stringProp name="106">228.58434674150297</stringProp>
              <stringProp name="107">228.58434674150297</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2077522272">
              <stringProp name="107">278.4752104770814</stringProp>
              <stringProp name="108">278.4752104770814</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1258242944">
              <stringProp name="108">258.2070470845027</stringProp>
              <stringProp name="109">258.2070470845027</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="851449175">
              <stringProp name="109">208.6280012472716</stringProp>
              <stringProp name="110">208.6280012472716</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2008797344">
              <stringProp name="110">258.51886498285</stringProp>
              <stringProp name="111">258.51886498285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1271629728">
              <stringProp name="111">194.2843779232928</stringProp>
              <stringProp name="112">194.2843779232928</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1760874464">
              <stringProp name="112">280.9697536638603</stringProp>
              <stringProp name="113">280.9697536638603</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-762725952">
              <stringProp name="113">195.2198316183349</stringProp>
              <stringProp name="114">195.2198316183349</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="869081024">
              <stringProp name="114">200.5207358902401</stringProp>
              <stringProp name="115">200.5207358902401</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-120338368">
              <stringProp name="115">163.41440598690366</stringProp>
              <stringProp name="116">163.41440598690366</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1919578720">
              <stringProp name="116">220.47708138447143</stringProp>
              <stringProp name="117">220.47708138447143</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1708260512">
              <stringProp name="117">226.4016214530714</stringProp>
              <stringProp name="118">226.4016214530714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="556369600">
              <stringProp name="118">202.3916432803243</stringProp>
              <stringProp name="119">202.3916432803243</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2009407209">
              <stringProp name="119">196.7789211100717</stringProp>
              <stringProp name="120">196.7789211100717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-569972800">
              <stringProp name="120">252.90614281259744</stringProp>
              <stringProp name="121">252.90614281259744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1400200992">
              <stringProp name="121">283.46429685063924</stringProp>
              <stringProp name="122">283.46429685063924</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="37706592">
              <stringProp name="122">195.53164951668225</stringProp>
              <stringProp name="123">195.53164951668225</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1389870688">
              <stringProp name="123">240.1216089803555</stringProp>
              <stringProp name="124">240.1216089803555</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1863028672">
              <stringProp name="124">211.43436233239788</stringProp>
              <stringProp name="125">211.43436233239788</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="549002208">
              <stringProp name="125">222.65980667290304</stringProp>
              <stringProp name="126">222.65980667290304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="37515872">
              <stringProp name="126">235.13252260679764</stringProp>
              <stringProp name="127">235.13252260679764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-164820256">
              <stringProp name="127">197.7143748051138</stringProp>
              <stringProp name="128">197.7143748051138</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1169764704">
              <stringProp name="128">265.0670408481447</stringProp>
              <stringProp name="129">265.0670408481447</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1930045705">
              <stringProp name="129">234.82070470845025</stringProp>
              <stringProp name="130">234.82070470845025</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-264017056">
              <stringProp name="130">331.79607109448085</stringProp>
              <stringProp name="131">331.79607109448085</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1204491424">
              <stringProp name="131">334.2906142812597</stringProp>
              <stringProp name="132">334.2906142812597</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-997659232">
              <stringProp name="132">292.50701590271285</stringProp>
              <stringProp name="133">292.50701590271285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="802899168">
              <stringProp name="133">237.93888369192396</stringProp>
              <stringProp name="134">237.93888369192396</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1929732480">
              <stringProp name="134">330.86061739943875</stringProp>
              <stringProp name="135">330.86061739943875</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="673256224">
              <stringProp name="135">332.4197068911756</stringProp>
              <stringProp name="136">332.4197068911756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="526175520">
              <stringProp name="136">300.6142812597443</stringProp>
              <stringProp name="137">300.6142812597443</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1025522912">
              <stringProp name="137">13.118178983473651</stringProp>
              <stringProp name="138">13.118178983473651</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1949063328">
              <stringProp name="138">314.64608668537574</stringProp>
              <stringProp name="139">314.64608668537574</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1874290167">
              <stringProp name="139">338.0324290614281</stringProp>
              <stringProp name="140">338.0324290614281</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-454501344">
              <stringProp name="140">383.8696601184908</stringProp>
              <stringProp name="141">383.8696601184908</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="963769312">
              <stringProp name="141">419.4169005300904</stringProp>
              <stringProp name="142">419.4169005300904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1017562944">
              <stringProp name="142">442.1796071094481</stringProp>
              <stringProp name="143">442.1796071094481</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="764968288">
              <stringProp name="143">458.3941378235111</stringProp>
              <stringProp name="144">458.3941378235111</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1122086112">
              <stringProp name="144">497.3713751169317</stringProp>
              <stringProp name="145">497.3713751169317</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1503276928">
              <stringProp name="145">527.6177112566262</stringProp>
              <stringProp name="146">527.6177112566262</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1179241888">
              <stringProp name="146">482.0922980979108</stringProp>
              <stringProp name="147">482.0922980979108</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1269486432">
              <stringProp name="147">457.458684128469</stringProp>
              <stringProp name="148">457.458684128469</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-232558976">
              <stringProp name="148">447.16869348300594</stringProp>
              <stringProp name="149">447.16869348300594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1309503159">
              <stringProp name="149">555.0576863111943</stringProp>
              <stringProp name="150">555.0576863111943</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1070618144">
              <stringProp name="150">597.464920486436</stringProp>
              <stringProp name="151">597.464920486436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1017567840">
              <stringProp name="151">562.8531337698785</stringProp>
              <stringProp name="152">562.8531337698785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2113818304">
              <stringProp name="152">429.0832553788587</stringProp>
              <stringProp name="153">429.0832553788587</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-110585376">
              <stringProp name="153">571.5840349236047</stringProp>
              <stringProp name="154">571.5840349236047</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1362255488">
              <stringProp name="154">632.0767072029935</stringProp>
              <stringProp name="155">632.0767072029935</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-252008896">
              <stringProp name="155">635.1948861864671</stringProp>
              <stringProp name="156">635.1948861864671</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1009146784">
              <stringProp name="156">497.6831930152791</stringProp>
              <stringProp name="157">497.6831930152791</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1849969536">
              <stringProp name="157">689.4512004989086</stringProp>
              <stringProp name="158">689.4512004989086</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-957312992">
              <stringProp name="158">785.4911131898972</stringProp>
              <stringProp name="159">785.4911131898972</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1070972567">
              <stringProp name="159">597.464920486436</stringProp>
              <stringProp name="160">597.464920486436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1071755968">
              <stringProp name="160">597.464920486436</stringProp>
              <stringProp name="161">597.464920486436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="512836448">
              <stringProp name="161">638.0012472715935</stringProp>
              <stringProp name="162">638.0012472715935</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="902037184">
              <stringProp name="162">505.4786404739632</stringProp>
              <stringProp name="163">505.4786404739632</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1459609024">
              <stringProp name="163">654.2157779856565</stringProp>
              <stringProp name="164">654.2157779856565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1458005312">
              <stringProp name="164">647.3557842220143</stringProp>
              <stringProp name="165">647.3557842220143</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-144967680">
              <stringProp name="165">640.4957904583723</stringProp>
              <stringProp name="166">640.4957904583723</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1558007520">
              <stringProp name="166">601.830371063299</stringProp>
              <stringProp name="167">601.830371063299</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1057670240">
              <stringProp name="167">679.7848456501403</stringProp>
              <stringProp name="168">679.7848456501403</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2121956832">
              <stringProp name="168">762.1047708138448</stringProp>
              <stringProp name="169">762.1047708138448</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1609955113">
              <stringProp name="169">669.8066729030246</stringProp>
              <stringProp name="170">669.8066729030246</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-549908480">
              <stringProp name="170">796.4047396320549</stringProp>
              <stringProp name="171">796.4047396320549</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-93416160">
              <stringProp name="171">785.1792952915497</stringProp>
              <stringProp name="172">785.1792952915497</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1380211456">
              <stringProp name="172">799.2111007171811</stringProp>
              <stringProp name="173">799.2111007171811</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1010168832">
              <stringProp name="173">787.0502026816339</stringProp>
              <stringProp name="174">787.0502026816339</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="121863904">
              <stringProp name="174">789.2329279700655</stringProp>
              <stringProp name="175">789.2329279700655</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="320564416">
              <stringProp name="175">750.2556906766449</stringProp>
              <stringProp name="176">750.2556906766449</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1869720832">
              <stringProp name="176">714.0848144683505</stringProp>
              <stringProp name="177">714.0848144683505</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="746840160">
              <stringProp name="177">790.1683816651076</stringProp>
              <stringProp name="178">790.1683816651076</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1682971072">
              <stringProp name="178">771.771125662613</stringProp>
              <stringProp name="179">771.771125662613</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-286963209">
              <stringProp name="179">750.8793264733396</stringProp>
              <stringProp name="180">750.8793264733396</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-797092992">
              <stringProp name="180">813.2429061428126</stringProp>
              <stringProp name="181">813.2429061428126</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1082593280">
              <stringProp name="181">857.209229809791</stringProp>
              <stringProp name="182">857.209229809791</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-882731232">
              <stringProp name="182">732.7938883691925</stringProp>
              <stringProp name="183">732.7938883691925</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2116131744">
              <stringProp name="183">895.8746492048643</stringProp>
              <stringProp name="184">895.8746492048643</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="248525728">
              <stringProp name="184">974.4527595884005</stringProp>
              <stringProp name="185">974.4527595884005</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1334280608">
              <stringProp name="185">667.6239476145931</stringProp>
              <stringProp name="186">667.6239476145931</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="831450432">
              <stringProp name="186">764.2874961022764</stringProp>
              <stringProp name="187">764.2874961022764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1354951456">
              <stringProp name="187">329.9251637043966</stringProp>
              <stringProp name="188">329.9251637043966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="339888896">
              <stringProp name="188">431.2659806672903</stringProp>
              <stringProp name="189">431.2659806672903</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-195400009">
              <stringProp name="189">691.6339257873402</stringProp>
              <stringProp name="190">691.6339257873402</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-225225376">
              <stringProp name="190">711.9020891799189</stringProp>
              <stringProp name="191">711.9020891799189</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1399087232">
              <stringProp name="191">913.3364515123168</stringProp>
              <stringProp name="192">913.3364515123168</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1208017056">
              <stringProp name="192">872.1764889304646</stringProp>
              <stringProp name="193">872.1764889304646</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1083804512">
              <stringProp name="193">857.209229809791</stringProp>
              <stringProp name="194">857.209229809791</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1093203104">
              <stringProp name="194">862.5101340816963</stringProp>
              <stringProp name="195">862.5101340816963</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1430094880">
              <stringProp name="195">932.6691612098534</stringProp>
              <stringProp name="196">932.6691612098534</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1808292320">
              <stringProp name="196">884.6492048643593</stringProp>
              <stringProp name="197">884.6492048643593</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1980943712">
              <stringProp name="197">891.8210165263486</stringProp>
              <stringProp name="198">891.8210165263486</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1377715584">
              <stringProp name="198">799.2111007171811</stringProp>
              <stringProp name="199">799.2111007171811</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="495033952">
              <stringProp name="199">787.3620205799813</stringProp>
              <stringProp name="200">787.3620205799813</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1268763552">
              <stringProp name="200">807.9420018709073</stringProp>
              <stringProp name="201">807.9420018709073</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1947258624">
              <stringProp name="201">811.3719987527285</stringProp>
              <stringProp name="202">811.3719987527285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2021922624">
              <stringProp name="202">899.6164639850329</stringProp>
              <stringProp name="203">899.6164639850329</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-211933024">
              <stringProp name="203">798.5874649204865</stringProp>
              <stringProp name="204">798.5874649204865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-88317344">
              <stringProp name="204">722.192079825382</stringProp>
              <stringProp name="205">722.192079825382</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2086698336">
              <stringProp name="205">682.5912067352666</stringProp>
              <stringProp name="206">682.5912067352666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-822523936">
              <stringProp name="206">736.2238852510135</stringProp>
              <stringProp name="207">736.2238852510135</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1821415008">
              <stringProp name="207">723.7511693171188</stringProp>
              <stringProp name="208">723.7511693171188</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-856341056">
              <stringProp name="208">732.7938883691925</stringProp>
              <stringProp name="209">732.7938883691925</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1447379145">
              <stringProp name="209">745.8902400997817</stringProp>
              <stringProp name="210">745.8902400997817</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1133285088">
              <stringProp name="210">623.3458060492673</stringProp>
              <stringProp name="211">623.3458060492673</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="638187808">
              <stringProp name="211">630.2057998129093</stringProp>
              <stringProp name="212">630.2057998129093</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1079001696">
              <stringProp name="212">643.613969441846</stringProp>
              <stringProp name="213">643.613969441846</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-53990304">
              <stringProp name="213">668.2475834112879</stringProp>
              <stringProp name="214">668.2475834112879</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1706860096">
              <stringProp name="214">831.6401621453072</stringProp>
              <stringProp name="215">831.6401621453072</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1791713632">
              <stringProp name="215">661.3875896476458</stringProp>
              <stringProp name="216">661.3875896476458</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1825863552">
              <stringProp name="216">600.894917368257</stringProp>
              <stringProp name="217">600.894917368257</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1480167296">
              <stringProp name="217">666.3766760212037</stringProp>
              <stringProp name="218">666.3766760212037</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1587269408">
              <stringProp name="218">493.317742438416</stringProp>
              <stringProp name="219">493.317742438416</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="932406583">
              <stringProp name="219">596.2176488930465</stringProp>
              <stringProp name="220">596.2176488930465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1925670336">
              <stringProp name="220">509.53227315247887</stringProp>
              <stringProp name="221">509.53227315247887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1125691968">
              <stringProp name="221">520.7577174929842</stringProp>
              <stringProp name="222">520.7577174929842</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1889151136">
              <stringProp name="222">592.7876520112255</stringProp>
              <stringProp name="223">592.7876520112255</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1011926592">
              <stringProp name="223">512.9622700343001</stringProp>
              <stringProp name="224">512.9622700343001</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-343829184">
              <stringProp name="224">555.3695042095417</stringProp>
              <stringProp name="225">555.3695042095417</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1792779648">
              <stringProp name="225">480.2213907078266</stringProp>
              <stringProp name="226">480.2213907078266</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-772490688">
              <stringProp name="226">502.3604614904895</stringProp>
              <stringProp name="227">502.3604614904895</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2056793056">
              <stringProp name="227">646.7321484253197</stringProp>
              <stringProp name="228">646.7321484253197</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="972122848">
              <stringProp name="228">463.0714062987215</stringProp>
              <stringProp name="229">463.0714062987215</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-719927273">
              <stringProp name="229">499.5541004053633</stringProp>
              <stringProp name="230">499.5541004053633</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1464013216">
              <stringProp name="230">552.8749610227628</stringProp>
              <stringProp name="231">552.8749610227628</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2134313408">
              <stringProp name="231">478.66230121608976</stringProp>
              <stringProp name="232">478.66230121608976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1738813248">
              <stringProp name="232">539.7786092921733</stringProp>
              <stringProp name="233">539.7786092921733</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1071385568">
              <stringProp name="233">480.533208606174</stringProp>
              <stringProp name="234">480.533208606174</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1232841824">
              <stringProp name="234">428.7714374805114</stringProp>
              <stringProp name="235">428.7714374805114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-872478848">
              <stringProp name="235">100.42719052073588</stringProp>
              <stringProp name="236">100.42719052073588</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1161953024">
              <stringProp name="236">442.4914250077954</stringProp>
              <stringProp name="237">442.4914250077954</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2132566912">
              <stringProp name="237">414.73963205488</stringProp>
              <stringProp name="238">414.73963205488</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-978020672">
              <stringProp name="238">568.7776738384783</stringProp>
              <stringProp name="239">568.7776738384783</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1391204343">
              <stringProp name="239">465.5659494855004</stringProp>
              <stringProp name="240">465.5659494855004</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1595739616">
              <stringProp name="240">521.6931711880263</stringProp>
              <stringProp name="241">521.6931711880263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1595702912">
              <stringProp name="241">521.6931711880263</stringProp>
              <stringProp name="242">521.6931711880263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-719901888">
              <stringProp name="242">571.2722170252573</stringProp>
              <stringProp name="243">571.2722170252573</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="663972032">
              <stringProp name="243">566.2831306516995</stringProp>
              <stringProp name="244">566.2831306516995</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1387692256">
              <stringProp name="244">469.3077642656688</stringProp>
              <stringProp name="245">469.3077642656688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1619176736">
              <stringProp name="245">486.45774867477394</stringProp>
              <stringProp name="246">486.45774867477394</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1503659968">
              <stringProp name="246">415.675085749922</stringProp>
              <stringProp name="247">415.675085749922</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1585388832">
              <stringProp name="247">382.31057062675393</stringProp>
              <stringProp name="248">382.31057062675393</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1577098336">
              <stringProp name="248">320.2588088556283</stringProp>
              <stringProp name="249">320.2588088556283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="127904471">
              <stringProp name="249">526.0586217648894</stringProp>
              <stringProp name="250">526.0586217648894</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="721546432">
              <stringProp name="250">451.22232616152166</stringProp>
              <stringProp name="251">451.22232616152166</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1237867680">
              <stringProp name="251">491.1350171499845</stringProp>
              <stringProp name="252">491.1350171499845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="453013664">
              <stringProp name="252">459.0177736202058</stringProp>
              <stringProp name="253">459.0177736202058</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1350960672">
              <stringProp name="253">405.38509510445897</stringProp>
              <stringProp name="254">405.38509510445897</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-583156000">
              <stringProp name="254">389.7942001870907</stringProp>
              <stringProp name="255">389.7942001870907</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1173542656">
              <stringProp name="255">395.09510445899593</stringProp>
              <stringProp name="256">395.09510445899593</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1882098176">
              <stringProp name="256">425.3414405986903</stringProp>
              <stringProp name="257">425.3414405986903</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1926340736">
              <stringProp name="257">427.5241658871219</stringProp>
              <stringProp name="258">427.5241658871219</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1164899776">
              <stringProp name="258">366.7196757093857</stringProp>
              <stringProp name="259">366.7196757093857</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-154777033">
              <stringProp name="259">326.18334892422826</stringProp>
              <stringProp name="260">326.18334892422826</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1864314368">
              <stringProp name="260">343.956969130028</stringProp>
              <stringProp name="261">343.956969130028</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-191456960">
              <stringProp name="261">354.55877767383845</stringProp>
              <stringProp name="262">354.55877767383845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1522944">
              <stringProp name="262">316.51699407545993</stringProp>
              <stringProp name="263">316.51699407545993</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1166042304">
              <stringProp name="263">317.14062987215465</stringProp>
              <stringProp name="264">317.14062987215465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1740869568">
              <stringProp name="264">384.1814780168382</stringProp>
              <stringProp name="265">384.1814780168382</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1874757792">
              <stringProp name="265">257.89522918615523</stringProp>
              <stringProp name="266">257.89522918615523</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1511229280">
              <stringProp name="266">324.00062363579667</stringProp>
              <stringProp name="267">324.00062363579667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-3350208">
              <stringProp name="267">311.2160898035547</stringProp>
              <stringProp name="268">311.2160898035547</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-990346720">
              <stringProp name="268">247.29342064234487</stringProp>
              <stringProp name="269">247.29342064234487</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1782391671">
              <stringProp name="269">275.04521359526035</stringProp>
              <stringProp name="270">275.04521359526035</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1861190848">
              <stringProp name="270">334.9142500779544</stringProp>
              <stringProp name="271">334.9142500779544</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-976312992">
              <stringProp name="271">255.088868101029</stringProp>
              <stringProp name="272">255.088868101029</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1750803968">
              <stringProp name="272">239.18615528531336</stringProp>
              <stringProp name="273">239.18615528531336</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1061992192">
              <stringProp name="273">157.4898659183037</stringProp>
              <stringProp name="274">157.4898659183037</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2072094112">
              <stringProp name="274">263.5079513564079</stringProp>
              <stringProp name="275">263.5079513564079</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1297473056">
              <stringProp name="275">252.28250701590272</stringProp>
              <stringProp name="276">252.28250701590272</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1143314752">
              <stringProp name="276">256.6479575927658</stringProp>
              <stringProp name="277">256.6479575927658</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1242101792">
              <stringProp name="277">211.74618023074524</stringProp>
              <stringProp name="278">211.74618023074524</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-553332864">
              <stringProp name="278">259.4543186778921</stringProp>
              <stringProp name="279">259.4543186778921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1441480375">
              <stringProp name="279">283.46429685063924</stringProp>
              <stringProp name="280">283.46429685063924</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1476893504">
              <stringProp name="280">205.19800436545057</stringProp>
              <stringProp name="281">205.19800436545057</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1799781664">
              <stringProp name="281">309.65700031181785</stringProp>
              <stringProp name="282">309.65700031181785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2008657312">
              <stringProp name="282">274.10975990021825</stringProp>
              <stringProp name="283">274.10975990021825</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1160363648">
              <stringProp name="283">251.3470533208606</stringProp>
              <stringProp name="284">251.3470533208606</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-41197216">
              <stringProp name="284">240.43342687870285</stringProp>
              <stringProp name="285">240.43342687870285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1577231232">
              <stringProp name="285">193.0371063299033</stringProp>
              <stringProp name="286">193.0371063299033</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="912391744">
              <stringProp name="286">200.5207358902401</stringProp>
              <stringProp name="287">200.5207358902401</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1966960800">
              <stringProp name="287">197.40255690676645</stringProp>
              <stringProp name="288">197.40255690676645</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1578892736">
              <stringProp name="288">203.3270969753664</stringProp>
              <stringProp name="289">203.3270969753664</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-716780073">
              <stringProp name="289">203.95073277206112</stringProp>
              <stringProp name="290">203.95073277206112</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-210290592">
              <stringProp name="290">189.91892734642968</stringProp>
              <stringProp name="291">189.91892734642968</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1361949216">
              <stringProp name="291">242.92797006548176</stringProp>
              <stringProp name="292">242.92797006548176</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="553585568">
              <stringProp name="292">249.4761459307764</stringProp>
              <stringProp name="293">249.4761459307764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-953790784">
              <stringProp name="293">300.3024633613969</stringProp>
              <stringProp name="294">300.3024633613969</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1785399968">
              <stringProp name="294">243.55160586217647</stringProp>
              <stringProp name="295">243.55160586217647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="109737728">
              <stringProp name="295">225.77798565637667</stringProp>
              <stringProp name="296">225.77798565637667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2058656224">
              <stringProp name="296">265.378858746492</stringProp>
              <stringProp name="297">265.378858746492</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1901925824">
              <stringProp name="297">307.7860929217337</stringProp>
              <stringProp name="298">307.7860929217337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1247176544">
              <stringProp name="298">357.36513875896475</stringProp>
              <stringProp name="299">357.36513875896475</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="438173408">
              <stringProp name="299">439.37324602432176</stringProp>
              <stringProp name="300">439.37324602432176</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-347272672">
              <stringProp name="300">319.01153726223885</stringProp>
              <stringProp name="301">319.01153726223885</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="33441824">
              <stringProp name="301">381.0632990333645</stringProp>
              <stringProp name="302">381.0632990333645</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-742103264">
              <stringProp name="302">374.8269410664172</stringProp>
              <stringProp name="303">374.8269410664172</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1135499872">
              <stringProp name="303">366.7196757093857</stringProp>
              <stringProp name="304">366.7196757093857</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1470495968">
              <stringProp name="304">380.4396632366698</stringProp>
              <stringProp name="305">380.4396632366698</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2107748480">
              <stringProp name="305">360.17149984409104</stringProp>
              <stringProp name="306">360.17149984409104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1174082784">
              <stringProp name="306">490.51138135328966</stringProp>
              <stringProp name="307">490.51138135328966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="7859968">
              <stringProp name="307">578.7558465855941</stringProp>
              <stringProp name="308">578.7558465855941</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-764762400">
              <stringProp name="308">462.1359526036794</stringProp>
              <stringProp name="309">462.1359526036794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="850424919">
              <stringProp name="309">505.7904583723105</stringProp>
              <stringProp name="310">505.7904583723105</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1607057632">
              <stringProp name="310">466.5014031805426</stringProp>
              <stringProp name="311">466.5014031805426</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-788380416">
              <stringProp name="311">574.7022139070783</stringProp>
              <stringProp name="312">574.7022139070783</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1176830208">
              <stringProp name="312">575.6376676021205</stringProp>
              <stringProp name="313">575.6376676021205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-303243264">
              <stringProp name="313">389.170564390396</stringProp>
              <stringProp name="314">389.170564390396</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="824597920">
              <stringProp name="314">595.5940130963518</stringProp>
              <stringProp name="315">595.5940130963518</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1330520544">
              <stringProp name="315">609.3140006236358</stringProp>
              <stringProp name="316">609.3140006236358</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1683809856">
              <stringProp name="316">640.183972560025</stringProp>
              <stringProp name="317">640.183972560025</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="442096768">
              <stringProp name="317">543.2086061739944</stringProp>
              <stringProp name="318">543.2086061739944</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="499997120">
              <stringProp name="318">642.3666978484566</stringProp>
              <stringProp name="319">642.3666978484566</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1881444215">
              <stringProp name="319">605.26036794512</stringProp>
              <stringProp name="320">605.26036794512</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="532854208">
              <stringProp name="320">201.7680074836296</stringProp>
              <stringProp name="321">201.7680074836296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1686982176">
              <stringProp name="321">419.7287184284378</stringProp>
              <stringProp name="322">419.7287184284378</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-327717664">
              <stringProp name="322">564.4122232616152</stringProp>
              <stringProp name="323">564.4122232616152</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1429350400">
              <stringProp name="323">632.0767072029935</stringProp>
              <stringProp name="324">632.0767072029935</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="85614528">
              <stringProp name="324">710.6548175865295</stringProp>
              <stringProp name="325">710.6548175865295</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1153137376">
              <stringProp name="325">788.2974742750234</stringProp>
              <stringProp name="326">788.2974742750234</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1716129280">
              <stringProp name="326">631.4530714062988</stringProp>
              <stringProp name="327">631.4530714062988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="946992416">
              <stringProp name="327">627.7112566261304</stringProp>
              <stringProp name="328">627.7112566261304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="337832448">
              <stringProp name="328">805.1356407857811</stringProp>
              <stringProp name="329">805.1356407857811</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1663849321">
              <stringProp name="329">686.9566573121298</stringProp>
              <stringProp name="330">686.9566573121298</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="84333760">
              <stringProp name="330">785.8029310882445</stringProp>
              <stringProp name="331">785.8029310882445</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="434026624">
              <stringProp name="331">774.5774867477393</stringProp>
              <stringProp name="332">774.5774867477393</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-954862784">
              <stringProp name="332">763.0402245088869</stringProp>
              <stringProp name="333">763.0402245088869</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="240700864">
              <stringProp name="333">738.0947926410977</stringProp>
              <stringProp name="334">738.0947926410977</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-954789376">
              <stringProp name="334">763.0402245088869</stringProp>
              <stringProp name="335">763.0402245088869</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-49594624">
              <stringProp name="335">722.192079825382</stringProp>
              <stringProp name="336">722.192079825382</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1935738880">
              <stringProp name="336">708.1602743997506</stringProp>
              <stringProp name="337">708.1602743997506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="355417728">
              <stringProp name="337">687.8921110071718</stringProp>
              <stringProp name="338">687.8921110071718</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-774677760">
              <stringProp name="338">783.620205799813</stringProp>
              <stringProp name="339">783.620205799813</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="880239511">
              <stringProp name="339">759.9220455254132</stringProp>
              <stringProp name="340">759.9220455254132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-375679840">
              <stringProp name="340">756.1802307452448</stringProp>
              <stringProp name="341">756.1802307452448</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1333217792">
              <stringProp name="341">874.982850015591</stringProp>
              <stringProp name="342">874.982850015591</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-436047776">
              <stringProp name="342">973.5173058933584</stringProp>
              <stringProp name="343">973.5173058933584</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1745509408">
              <stringProp name="343">831.6401621453072</stringProp>
              <stringProp name="344">831.6401621453072</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-153341472">
              <stringProp name="344">814.1783598378547</stringProp>
              <stringProp name="345">814.1783598378547</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="561150144">
              <stringProp name="345">926.432803242906</stringProp>
              <stringProp name="346">926.432803242906</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1630719200">
              <stringProp name="346">894.9391955098223</stringProp>
              <stringProp name="347">894.9391955098223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1015138528">
              <stringProp name="347">866.563766760212</stringProp>
              <stringProp name="348">866.563766760212</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="251144512">
              <stringProp name="348">705.3539133146243</stringProp>
              <stringProp name="349">705.3539133146243</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="390563383">
              <stringProp name="349">879.9719363891487</stringProp>
              <stringProp name="350">879.9719363891487</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="797219936">
              <stringProp name="350">791.1038353601497</stringProp>
              <stringProp name="351">791.1038353601497</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1227328256">
              <stringProp name="351">828.2101652634861</stringProp>
              <stringProp name="352">828.2101652634861</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1951539392">
              <stringProp name="352">776.7602120361709</stringProp>
              <stringProp name="353">776.7602120361709</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-545573408">
              <stringProp name="353">882.4664795759277</stringProp>
              <stringProp name="354">882.4664795759277</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1777515616">
              <stringProp name="354">810.4365450576863</stringProp>
              <stringProp name="355">810.4365450576863</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="265116736">
              <stringProp name="355">787.6738384783288</stringProp>
              <stringProp name="356">787.6738384783288</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="436485792">
              <stringProp name="356">774.5774867477393</stringProp>
              <stringProp name="357">774.5774867477393</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1590986624">
              <stringProp name="357">886.2082943560961</stringProp>
              <stringProp name="358">886.2082943560961</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="919051520">
              <stringProp name="358">876.8537574056751</stringProp>
              <stringProp name="359">876.8537574056751</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1149553001">
              <stringProp name="359">788.2974742750234</stringProp>
              <stringProp name="360">788.2974742750234</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-987090112">
              <stringProp name="360">775.201122544434</stringProp>
              <stringProp name="361">775.201122544434</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-467497440">
              <stringProp name="361">584.0567508574993</stringProp>
              <stringProp name="362">584.0567508574993</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-494803008">
              <stringProp name="362">252.90614281259744</stringProp>
              <stringProp name="363">252.90614281259744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-545787584">
              <stringProp name="363">715.3320860617399</stringProp>
              <stringProp name="364">715.3320860617399</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1654213120">
              <stringProp name="364">738.7184284377923</stringProp>
              <stringProp name="365">738.7184284377923</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="996386912">
              <stringProp name="365">782.0611163080761</stringProp>
              <stringProp name="366">782.0611163080761</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1214490880">
              <stringProp name="366">711.5902712815716</stringProp>
              <stringProp name="367">711.5902712815716</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="638685472">
              <stringProp name="367">629.5821640162146</stringProp>
              <stringProp name="368">629.5821640162146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2073613664">
              <stringProp name="368">752.7502338634238</stringProp>
              <stringProp name="369">752.7502338634238</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1317818665">
              <stringProp name="369">698.8057374493296</stringProp>
              <stringProp name="370">698.8057374493296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-973554944">
              <stringProp name="370">888.7028375428749</stringProp>
              <stringProp name="371">888.7028375428749</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1538182688">
              <stringProp name="371">712.5257249766137</stringProp>
              <stringProp name="372">712.5257249766137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="540225920">
              <stringProp name="372">666.688493919551</stringProp>
              <stringProp name="373">666.688493919551</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1984394496">
              <stringProp name="373">706.6011849080137</stringProp>
              <stringProp name="374">706.6011849080137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1563240192">
              <stringProp name="374">699.4293732460244</stringProp>
              <stringProp name="375">699.4293732460244</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1786116064">
              <stringProp name="375">716.2675397567821</stringProp>
              <stringProp name="376">716.2675397567821</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="894952672">
              <stringProp name="376">712.2139070782664</stringProp>
              <stringProp name="377">712.2139070782664</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2114197280">
              <stringProp name="377">545.0795135640785</stringProp>
              <stringProp name="378">545.0795135640785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1008071776">
              <stringProp name="378">691.0102899906456</stringProp>
              <stringProp name="379">691.0102899906456</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2110981911">
              <stringProp name="379">724.9984409105083</stringProp>
              <stringProp name="380">724.9984409105083</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1132535360">
              <stringProp name="380">616.4858122856252</stringProp>
              <stringProp name="381">616.4858122856252</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2012750240">
              <stringProp name="381">676.9784845650141</stringProp>
              <stringProp name="382">676.9784845650141</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="595942688">
              <stringProp name="382">623.969441845962</stringProp>
              <stringProp name="383">623.969441845962</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1519402816">
              <stringProp name="383">536.6604303086998</stringProp>
              <stringProp name="384">536.6604303086998</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="479783584">
              <stringProp name="384">595.2821951980044</stringProp>
              <stringProp name="385">595.2821951980044</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2111735968">
              <stringProp name="385">705.977549111319</stringProp>
              <stringProp name="386">705.977549111319</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1949399360">
              <stringProp name="386">660.4521359526036</stringProp>
              <stringProp name="387">660.4521359526036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1692945312">
              <stringProp name="387">498.3068288119738</stringProp>
              <stringProp name="388">498.3068288119738</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1860097984">
              <stringProp name="388">523.252260679763</stringProp>
              <stringProp name="389">523.252260679763</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="596223703">
              <stringProp name="389">623.969441845962</stringProp>
              <stringProp name="390">623.969441845962</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2127715232">
              <stringProp name="390">485.8341128780792</stringProp>
              <stringProp name="391">485.8341128780792</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1710070912">
              <stringProp name="391">505.1668225756159</stringProp>
              <stringProp name="392">505.1668225756159</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1155006400">
              <stringProp name="392">692.5693794823823</stringProp>
              <stringProp name="393">692.5693794823823</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1233482848">
              <stringProp name="393">516.7040848144684</stringProp>
              <stringProp name="394">516.7040848144684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1503533504">
              <stringProp name="394">599.6476457748676</stringProp>
              <stringProp name="395">599.6476457748676</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="508989600">
              <stringProp name="395">642.3666978484566</stringProp>
              <stringProp name="396">642.3666978484566</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="735568288">
              <stringProp name="396">629.2703461178672</stringProp>
              <stringProp name="397">629.2703461178672</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-328078688">
              <stringProp name="397">570.6485812285625</stringProp>
              <stringProp name="398">570.6485812285625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1864441728">
              <stringProp name="398">542.5849703772997</stringProp>
              <stringProp name="399">542.5849703772997</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-348015424">
              <stringProp name="399">498.9304646086685</stringProp>
              <stringProp name="400">498.9304646086685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-416700960">
              <stringProp name="400">501.1131898971001</stringProp>
              <stringProp name="401">501.1131898971001</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="505843424">
              <stringProp name="401">595.2821951980044</stringProp>
              <stringProp name="402">595.2821951980044</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="185303520">
              <stringProp name="402">492.0704708450265</stringProp>
              <stringProp name="403">492.0704708450265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1131082496">
              <stringProp name="403">418.169628936701</stringProp>
              <stringProp name="404">418.169628936701</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1724870304">
              <stringProp name="404">439.0614281259744</stringProp>
              <stringProp name="405">439.0614281259744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1984852640">
              <stringProp name="405">454.028687246648</stringProp>
              <stringProp name="406">454.028687246648</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2117485280">
              <stringProp name="406">547.5740567508576</stringProp>
              <stringProp name="407">547.5740567508576</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1640320032">
              <stringProp name="407">514.8331774243842</stringProp>
              <stringProp name="408">514.8331774243842</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1189999744">
              <stringProp name="408">531.0477081384472</stringProp>
              <stringProp name="409">531.0477081384472</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-822935113">
              <stringProp name="409">462.4477705020268</stringProp>
              <stringProp name="410">462.4477705020268</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1094215360">
              <stringProp name="410">497.0595572185844</stringProp>
              <stringProp name="411">497.0595572185844</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="250441280">
              <stringProp name="411">513.2740879326474</stringProp>
              <stringProp name="412">513.2740879326474</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="596661792">
              <stringProp name="412">473.67321484253193</stringProp>
              <stringProp name="413">473.67321484253193</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1049899456">
              <stringProp name="413">450.5986903648269</stringProp>
              <stringProp name="414">450.5986903648269</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1147452384">
              <stringProp name="414">477.7268475210477</stringProp>
              <stringProp name="415">477.7268475210477</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1677652192">
              <stringProp name="415">61.44995322731524</stringProp>
              <stringProp name="416">61.44995322731524</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2103141568">
              <stringProp name="416">193.3489242282507</stringProp>
              <stringProp name="417">193.3489242282507</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-489651424">
              <stringProp name="417">259.4543186778921</stringProp>
              <stringProp name="418">259.4543186778921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="101821952">
              <stringProp name="418">223.28344246959776</stringProp>
              <stringProp name="419">223.28344246959776</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-871614185">
              <stringProp name="419">249.7879638291238</stringProp>
              <stringProp name="420">249.7879638291238</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="143113280">
              <stringProp name="420">235.13252260679764</stringProp>
              <stringProp name="421">235.13252260679764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1509085824">
              <stringProp name="421">320.2588088556283</stringProp>
              <stringProp name="422">320.2588088556283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="94719168">
              <stringProp name="422">282.84066105394453</stringProp>
              <stringProp name="423">282.84066105394453</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-763994880">
              <stringProp name="423">345.2042407234175</stringProp>
              <stringProp name="424">345.2042407234175</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-896152128">
              <stringProp name="424">353.62332397879635</stringProp>
              <stringProp name="425">353.62332397879635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1421384672">
              <stringProp name="425">257.2715933894605</stringProp>
              <stringProp name="426">257.2715933894605</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1594311456">
              <stringProp name="426">358.30059245400685</stringProp>
              <stringProp name="427">358.30059245400685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1128604096">
              <stringProp name="427">348.94605550358585</stringProp>
              <stringProp name="428">348.94605550358585</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1508828896">
              <stringProp name="428">320.2588088556283</stringProp>
              <stringProp name="429">320.2588088556283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="161016471">
              <stringProp name="429">289.7006548175865</stringProp>
              <stringProp name="430">289.7006548175865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1302620704">
              <stringProp name="430">295.3133769878391</stringProp>
              <stringProp name="431">295.3133769878391</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="770208352">
              <stringProp name="431">292.8188338010602</stringProp>
              <stringProp name="432">292.8188338010602</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-382301696">
              <stringProp name="432">264.7552229497973</stringProp>
              <stringProp name="433">264.7552229497973</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1055404032">
              <stringProp name="433">294.6897411911444</stringProp>
              <stringProp name="434">294.6897411911444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1201400928">
              <stringProp name="434">229.20798253819768</stringProp>
              <stringProp name="435">229.20798253819768</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1837732256">
              <stringProp name="435">266.00249454318674</stringProp>
              <stringProp name="436">266.00249454318674</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="177439360">
              <stringProp name="436">351.7524165887122</stringProp>
              <stringProp name="437">351.7524165887122</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="201330016">
              <stringProp name="437">309.03336451512314</stringProp>
              <stringProp name="438">309.03336451512314</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1818553792">
              <stringProp name="438">298.1197380729654</stringProp>
              <stringProp name="439">298.1197380729654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="945079479">
              <stringProp name="439">283.7761147489866</stringProp>
              <stringProp name="440">283.7761147489866</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1940061472">
              <stringProp name="440">381.6869348300592</stringProp>
              <stringProp name="441">381.6869348300592</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="400691456">
              <stringProp name="441">231.39070782662924</stringProp>
              <stringProp name="442">231.39070782662924</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1972653248">
              <stringProp name="442">208.93981914561897</stringProp>
              <stringProp name="443">208.93981914561897</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="492440128">
              <stringProp name="443">244.48705955721857</stringProp>
              <stringProp name="444">244.48705955721857</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="194509568">
              <stringProp name="444">254.1534144059869</stringProp>
              <stringProp name="445">254.1534144059869</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-594468256">
              <stringProp name="445">214.55254131587157</stringProp>
              <stringProp name="446">214.55254131587157</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1052865792">
              <stringProp name="446">245.42251325226067</stringProp>
              <stringProp name="447">245.42251325226067</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2045879040">
              <stringProp name="447">275.66884939195506</stringProp>
              <stringProp name="448">275.66884939195506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="46180256">
              <stringProp name="448">237.0034299968818</stringProp>
              <stringProp name="449">237.0034299968818</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-266925833">
              <stringProp name="449">254.46523230433428</stringProp>
              <stringProp name="450">254.46523230433428</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="689730656">
              <stringProp name="450">214.24072341752415</stringProp>
              <stringProp name="451">214.24072341752415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1760358272">
              <stringProp name="451">270.9915809167446</stringProp>
              <stringProp name="452">270.9915809167446</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1013606464">
              <stringProp name="452">274.733395696913</stringProp>
              <stringProp name="453">274.733395696913</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-987298816">
              <stringProp name="453">197.0907390084191</stringProp>
              <stringProp name="454">197.0907390084191</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="888845056">
              <stringProp name="454">188.67165575304023</stringProp>
              <stringProp name="455">188.67165575304023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="164259040">
              <stringProp name="455">289.7006548175865</stringProp>
              <stringProp name="456">289.7006548175865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1428989408">
              <stringProp name="456">239.80979108200808</stringProp>
              <stringProp name="457">239.80979108200808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-867160384">
              <stringProp name="457">249.7879638291238</stringProp>
              <stringProp name="458">249.7879638291238</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="658343424">
              <stringProp name="458">222.65980667290304</stringProp>
              <stringProp name="459">222.65980667290304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1037670615">
              <stringProp name="459">219.54162768942936</stringProp>
              <stringProp name="460">219.54162768942936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2006511776">
              <stringProp name="460">310.90427190520734</stringProp>
              <stringProp name="461">310.90427190520734</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-866683456">
              <stringProp name="461">280.3461178671656</stringProp>
              <stringProp name="462">280.3461178671656</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-731932384">
              <stringProp name="462">255.7125038977237</stringProp>
              <stringProp name="463">255.7125038977237</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="561822560">
              <stringProp name="463">354.24695977549106</stringProp>
              <stringProp name="464">354.24695977549106</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1512678208">
              <stringProp name="464">382.31057062675393</stringProp>
              <stringProp name="465">382.31057062675393</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-910038432">
              <stringProp name="465">397.9014655441222</stringProp>
              <stringProp name="466">397.9014655441222</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="540136992">
              <stringProp name="466">351.12878079201744</stringProp>
              <stringProp name="467">351.12878079201744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-241240224">
              <stringProp name="467">421.59962581852193</stringProp>
              <stringProp name="468">421.59962581852193</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1387622688">
              <stringProp name="468">368.2787652011225</stringProp>
              <stringProp name="469">368.2787652011225</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="54895191">
              <stringProp name="469">539.466791393826</stringProp>
              <stringProp name="470">539.466791393826</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1769231520">
              <stringProp name="470">420.0405363267851</stringProp>
              <stringProp name="471">420.0405363267851</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1691471968">
              <stringProp name="471">485.2104770813845</stringProp>
              <stringProp name="472">485.2104770813845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1912755136">
              <stringProp name="472">514.5213595260368</stringProp>
              <stringProp name="473">514.5213595260368</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1763459296">
              <stringProp name="473">487.393202369816</stringProp>
              <stringProp name="474">487.393202369816</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1387516480">
              <stringProp name="474">488.9522918615528</stringProp>
              <stringProp name="475">488.9522918615528</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="374306816">
              <stringProp name="475">533.2304334268787</stringProp>
              <stringProp name="476">533.2304334268787</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1221417376">
              <stringProp name="476">581.8740255690677</stringProp>
              <stringProp name="477">581.8740255690677</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="748255072">
              <stringProp name="477">488.0168381665108</stringProp>
              <stringProp name="478">488.0168381665108</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1071720000">
              <stringProp name="478">512.3386342376053</stringProp>
              <stringProp name="479">512.3386342376053</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1219210711">
              <stringProp name="479">575.6376676021205</stringProp>
              <stringProp name="480">575.6376676021205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1660264416">
              <stringProp name="480">609.0021827252885</stringProp>
              <stringProp name="481">609.0021827252885</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-745143104">
              <stringProp name="481">574.7022139070783</stringProp>
              <stringProp name="482">574.7022139070783</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1915918272">
              <stringProp name="482">660.7639538509511</stringProp>
              <stringProp name="483">660.7639538509511</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1341148256">
              <stringProp name="483">660.1403180542563</stringProp>
              <stringProp name="484">660.1403180542563</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="97228928">
              <stringProp name="484">653.903960087309</stringProp>
              <stringProp name="485">653.903960087309</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2015475776">
              <stringProp name="485">590.9167446211413</stringProp>
              <stringProp name="486">590.9167446211413</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="50953792">
              <stringProp name="486">613.3676333021516</stringProp>
              <stringProp name="487">613.3676333021516</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1960642496">
              <stringProp name="487">744.3311506080449</stringProp>
              <stringProp name="488">744.3311506080449</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1574633600">
              <stringProp name="488">794.2220143436234</stringProp>
              <stringProp name="489">794.2220143436234</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2045500855">
              <stringProp name="489">739.9657000311818</stringProp>
              <stringProp name="490">739.9657000311818</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-115444192">
              <stringProp name="490">889.3264733395697</stringProp>
              <stringProp name="491">889.3264733395697</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="66515776">
              <stringProp name="491">692.257561584035</stringProp>
              <stringProp name="492">692.257561584035</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-734041600">
              <stringProp name="492">693.8166510757717</stringProp>
              <stringProp name="493">693.8166510757717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1713132000">
              <stringProp name="493">624.5930776426567</stringProp>
              <stringProp name="494">624.5930776426567</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1336787456">
              <stringProp name="494">784.8674773932024</stringProp>
              <stringProp name="495">784.8674773932024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-650762656">
              <stringProp name="495">758.9865918303711</stringProp>
              <stringProp name="496">758.9865918303711</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1188381856">
              <stringProp name="496">16.548175865294667</stringProp>
              <stringProp name="497">16.548175865294667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1439482496">
              <stringProp name="497">821.0383536014969</stringProp>
              <stringProp name="498">821.0383536014969</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1891146624">
              <stringProp name="498">614.614904895541</stringProp>
              <stringProp name="499">614.614904895541</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="218774528">
              <stringProp name="499">758.051138135329</stringProp>
              <stringProp name="500">758.051138135329</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="395895744">
              <stringProp name="500">657.9575927658248</stringProp>
              <stringProp name="501">657.9575927658248</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="797926560">
              <stringProp name="501">795.7811038353601</stringProp>
              <stringProp name="502">795.7811038353601</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1717857856">
              <stringProp name="502">738.7184284377923</stringProp>
              <stringProp name="503">738.7184284377923</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-542264000">
              <stringProp name="503">727.1811661989398</stringProp>
              <stringProp name="504">727.1811661989398</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="350542464">
              <stringProp name="504">757.4275023386343</stringProp>
              <stringProp name="505">757.4275023386343</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-383243584">
              <stringProp name="505">767.40567508575</stringProp>
              <stringProp name="506">767.40567508575</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-578134240">
              <stringProp name="506">671.3657623947615</stringProp>
              <stringProp name="507">671.3657623947615</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="641961280">
              <stringProp name="507">846.9192391643281</stringProp>
              <stringProp name="508">846.9192391643281</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1325162272">
              <stringProp name="508">654.2157779856565</stringProp>
              <stringProp name="509">654.2157779856565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-625559625">
              <stringProp name="509">758.9865918303711</stringProp>
              <stringProp name="510">758.9865918303711</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1126923168">
              <stringProp name="510">751.191144371687</stringProp>
              <stringProp name="511">751.191144371687</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1188068064">
              <stringProp name="511">747.4493295915186</stringProp>
              <stringProp name="512">747.4493295915186</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-531843296">
              <stringProp name="512">719.0739008419083</stringProp>
              <stringProp name="513">719.0739008419083</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="10164224">
              <stringProp name="513">745.5784222014345</stringProp>
              <stringProp name="514">745.5784222014345</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1603464640">
              <stringProp name="514">846.6074212659806</stringProp>
              <stringProp name="515">846.6074212659806</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="454724992">
              <stringProp name="515">829.4574368568756</stringProp>
              <stringProp name="516">829.4574368568756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-959599008">
              <stringProp name="516">771.4593077642658</stringProp>
              <stringProp name="517">771.4593077642658</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1835451072">
              <stringProp name="517">652.0330526972249</stringProp>
              <stringProp name="518">652.0330526972249</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2041560512">
              <stringProp name="518">904.2937324602432</stringProp>
              <stringProp name="519">904.2937324602432</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1747319113">
              <stringProp name="519">689.763018397256</stringProp>
              <stringProp name="520">689.763018397256</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1237375648">
              <stringProp name="520">821.6619893981915</stringProp>
              <stringProp name="521">821.6619893981915</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1903995648">
              <stringProp name="521">635.8185219831619</stringProp>
              <stringProp name="522">635.8185219831619</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1416631680">
              <stringProp name="522">806.6947302775179</stringProp>
              <stringProp name="523">806.6947302775179</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1931957504">
              <stringProp name="523">771.1474898659183</stringProp>
              <stringProp name="524">771.1474898659183</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="863124896">
              <stringProp name="524">830.7047084502651</stringProp>
              <stringProp name="525">830.7047084502651</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="697984480">
              <stringProp name="525">734.6647957592766</stringProp>
              <stringProp name="526">734.6647957592766</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-276678368">
              <stringProp name="526">603.3894605550358</stringProp>
              <stringProp name="527">603.3894605550358</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1075731968">
              <stringProp name="527">818.5438104147178</stringProp>
              <stringProp name="528">818.5438104147178</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2049433984">
              <stringProp name="528">706.6011849080137</stringProp>
              <stringProp name="529">706.6011849080137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="907743895">
              <stringProp name="529">670.4303086997194</stringProp>
              <stringProp name="530">670.4303086997194</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1831039200">
              <stringProp name="530">696.9348300592454</stringProp>
              <stringProp name="531">696.9348300592454</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1990005696">
              <stringProp name="531">744.3311506080449</stringProp>
              <stringProp name="532">744.3311506080449</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1919372000">
              <stringProp name="532">614.614904895541</stringProp>
              <stringProp name="533">614.614904895541</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1634145760">
              <stringProp name="533">656.0866853757406</stringProp>
              <stringProp name="534">656.0866853757406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1940886528">
              <stringProp name="534">601.5185531649518</stringProp>
              <stringProp name="535">601.5185531649518</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1702008192">
              <stringProp name="535">618.044901777362</stringProp>
              <stringProp name="536">618.044901777362</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1171132448">
              <stringProp name="536">913.0246336139696</stringProp>
              <stringProp name="537">913.0246336139696</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="812060032">
              <stringProp name="537">702.547552229498</stringProp>
              <stringProp name="538">702.547552229498</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1032598048">
              <stringProp name="538">717.8266292485189</stringProp>
              <stringProp name="539">717.8266292485189</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1225186409">
              <stringProp name="539">559.7349547864047</stringProp>
              <stringProp name="540">559.7349547864047</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-467633920">
              <stringProp name="540">15.300904271905209</stringProp>
              <stringProp name="541">15.300904271905209</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-189493600">
              <stringProp name="541">648.2912379170565</stringProp>
              <stringProp name="542">648.2912379170565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1696407808">
              <stringProp name="542">546.3267851574682</stringProp>
              <stringProp name="543">546.3267851574682</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1717689440">
              <stringProp name="543">594.6585594013096</stringProp>
              <stringProp name="544">594.6585594013096</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-254345024">
              <stringProp name="544">499.86591830371066</stringProp>
              <stringProp name="545">499.86591830371066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-219722656">
              <stringProp name="545">555.9931400062363</stringProp>
              <stringProp name="546">555.9931400062363</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-813528064">
              <stringProp name="546">661.0757717492984</stringProp>
              <stringProp name="547">661.0757717492984</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-116387872">
              <stringProp name="547">486.76956657312127</stringProp>
              <stringProp name="548">486.76956657312127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="443498368">
              <stringProp name="548">511.0913626442159</stringProp>
              <stringProp name="549">511.0913626442159</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-863785769">
              <stringProp name="549">522.9404427814158</stringProp>
              <stringProp name="550">522.9404427814158</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1704100320">
              <stringProp name="550">618.044901777362</stringProp>
              <stringProp name="551">618.044901777362</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-499744832">
              <stringProp name="551">453.7168693483006</stringProp>
              <stringProp name="552">453.7168693483006</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-976974528">
              <stringProp name="552">455.2759588400374</stringProp>
              <stringProp name="553">455.2759588400374</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2134684576">
              <stringProp name="553">438.74961022762704</stringProp>
              <stringProp name="554">438.74961022762704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1470039648">
              <stringProp name="554">500.177736202058</stringProp>
              <stringProp name="555">500.177736202058</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-582611936">
              <stringProp name="555">439.9968818210165</stringProp>
              <stringProp name="556">439.9968818210165</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1191877856">
              <stringProp name="556">587.4867477393203</stringProp>
              <stringProp name="557">587.4867477393203</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1727016064">
              <stringProp name="557">427.2123479887746</stringProp>
              <stringProp name="558">427.2123479887746</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-717952992">
              <stringProp name="558">454.6523230433427</stringProp>
              <stringProp name="559">454.6523230433427</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-624386153">
              <stringProp name="559">454.3405051449953</stringProp>
              <stringProp name="560">454.3405051449953</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1695632384">
              <stringProp name="560">483.33956969130026</stringProp>
              <stringProp name="561">483.33956969130026</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="46017600">
              <stringProp name="561">527.9295291549735</stringProp>
              <stringProp name="562">527.9295291549735</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1825501248">
              <stringProp name="562">529.4886186467104</stringProp>
              <stringProp name="563">529.4886186467104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="513743328">
              <stringProp name="563">430.9541627689429</stringProp>
              <stringProp name="564">430.9541627689429</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-244616736">
              <stringProp name="564">476.7913938260056</stringProp>
              <stringProp name="565">476.7913938260056</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1840502016">
              <stringProp name="565">551.6276894293733</stringProp>
              <stringProp name="566">551.6276894293733</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1704113760">
              <stringProp name="566">595.9058309946992</stringProp>
              <stringProp name="567">595.9058309946992</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="771646912">
              <stringProp name="567">467.748674773932</stringProp>
              <stringProp name="568">467.748674773932</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="16743488">
              <stringProp name="568">471.178671655753</stringProp>
              <stringProp name="569">471.178671655753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="859245847">
              <stringProp name="569">486.14593077642655</stringProp>
              <stringProp name="570">486.14593077642655</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="153049568">
              <stringProp name="570">441.244153414406</stringProp>
              <stringProp name="571">441.244153414406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1450304352">
              <stringProp name="571">490.82319925163705</stringProp>
              <stringProp name="572">490.82319925163705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-633333152">
              <stringProp name="572">493.0059245400686</stringProp>
              <stringProp name="573">493.0059245400686</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="409505952">
              <stringProp name="573">533.2304334268787</stringProp>
              <stringProp name="574">533.2304334268787</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1108383072">
              <stringProp name="574">419.4169005300904</stringProp>
              <stringProp name="575">419.4169005300904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2137033632">
              <stringProp name="575">438.74961022762704</stringProp>
              <stringProp name="576">438.74961022762704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-190841408">
              <stringProp name="576">590.604926722794</stringProp>
              <stringProp name="577">590.604926722794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2037823552">
              <stringProp name="577">449.6632366697848</stringProp>
              <stringProp name="578">449.6632366697848</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-929986048">
              <stringProp name="578">468.6841284689741</stringProp>
              <stringProp name="579">468.6841284689741</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-309643273">
              <stringProp name="579">383.8696601184908</stringProp>
              <stringProp name="580">383.8696601184908</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1344201760">
              <stringProp name="580">428.7714374805114</stringProp>
              <stringProp name="581">428.7714374805114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1968007936">
              <stringProp name="581">473.36139694418455</stringProp>
              <stringProp name="582">473.36139694418455</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1667881856">
              <stringProp name="582">477.10321172435295</stringProp>
              <stringProp name="583">477.10321172435295</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1268805504">
              <stringProp name="583">346.451512316807</stringProp>
              <stringProp name="584">346.451512316807</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="242181568">
              <stringProp name="584">309.03336451512314</stringProp>
              <stringProp name="585">309.03336451512314</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-588391648">
              <stringProp name="585">318.69971936389146</stringProp>
              <stringProp name="586">318.69971936389146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="904764128">
              <stringProp name="586">328.6778921110072</stringProp>
              <stringProp name="587">328.6778921110072</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1225281056">
              <stringProp name="587">300.92609915809163</stringProp>
              <stringProp name="588">300.92609915809163</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="585447456">
              <stringProp name="588">394.4714686623012</stringProp>
              <stringProp name="589">394.4714686623012</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1827257929">
              <stringProp name="589">265.6906766448394</stringProp>
              <stringProp name="590">265.6906766448394</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-184797120">
              <stringProp name="590">386.0523854069223</stringProp>
              <stringProp name="591">386.0523854069223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1659082080">
              <stringProp name="591">335.8497037729966</stringProp>
              <stringProp name="592">335.8497037729966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2013416960">
              <stringProp name="592">344.2687870283754</stringProp>
              <stringProp name="593">344.2687870283754</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1752987456">
              <stringProp name="593">334.9142500779544</stringProp>
              <stringProp name="594">334.9142500779544</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-992643680">
              <stringProp name="594">309.3451824134705</stringProp>
              <stringProp name="595">309.3451824134705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1315512416">
              <stringProp name="595">252.59432491425005</stringProp>
              <stringProp name="596">252.59432491425005</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1475365792">
              <stringProp name="596">375.7623947614593</stringProp>
              <stringProp name="597">375.7623947614593</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1947855360">
              <stringProp name="597">310.59245400685995</stringProp>
              <stringProp name="598">310.59245400685995</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="901496064">
              <stringProp name="598">268.8088556283131</stringProp>
              <stringProp name="599">268.8088556283131</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="484821056">
              <stringProp name="599">224.21889616463983</stringProp>
              <stringProp name="600">224.21889616463983</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1094738624">
              <stringProp name="600">288.45338322419707</stringProp>
              <stringProp name="601">288.45338322419707</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1028060256">
              <stringProp name="601">180.8762082943561</stringProp>
              <stringProp name="602">180.8762082943561</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="163428416">
              <stringProp name="602">230.76707202993447</stringProp>
              <stringProp name="603">230.76707202993447</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1533182432">
              <stringProp name="603">226.4016214530714</stringProp>
              <stringProp name="604">226.4016214530714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1977772640">
              <stringProp name="604">243.86342376052383</stringProp>
              <stringProp name="605">243.86342376052383</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-961172128">
              <stringProp name="605">233.88525101340812</stringProp>
              <stringProp name="606">233.88525101340812</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="483522400">
              <stringProp name="606">209.25163704396635</stringProp>
              <stringProp name="607">209.25163704396635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-719043296">
              <stringProp name="607">196.15528531337696</stringProp>
              <stringProp name="608">196.15528531337696</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2058537952">
              <stringProp name="608">185.55347676956657</stringProp>
              <stringProp name="609">185.55347676956657</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1654342601">
              <stringProp name="609">243.55160586217647</stringProp>
              <stringProp name="610">243.55160586217647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-510253056">
              <stringProp name="610">183.99438727782973</stringProp>
              <stringProp name="611">183.99438727782973</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-878269024">
              <stringProp name="611">219.229809791082</stringProp>
              <stringProp name="612">219.229809791082</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="113091648">
              <stringProp name="612">237.0034299968818</stringProp>
              <stringProp name="613">237.0034299968818</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="821889248">
              <stringProp name="613">212.36981602744</stringProp>
              <stringProp name="614">212.36981602744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1185500032">
              <stringProp name="614">161.54349859681946</stringProp>
              <stringProp name="615">161.54349859681946</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1905411520">
              <stringProp name="615">208.93981914561897</stringProp>
              <stringProp name="616">208.93981914561897</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1245451776">
              <stringProp name="616">201.1443716869348</stringProp>
              <stringProp name="617">201.1443716869348</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1185389920">
              <stringProp name="617">161.54349859681946</stringProp>
              <stringProp name="618">161.54349859681946</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-821619680">
              <stringProp name="618">300.3024633613969</stringProp>
              <stringProp name="619">300.3024633613969</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1381472855">
              <stringProp name="619">231.7025257249766</stringProp>
              <stringProp name="620">231.7025257249766</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1505181568">
              <stringProp name="620">236.69161209853445</stringProp>
              <stringProp name="621">236.69161209853445</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1768471808">
              <stringProp name="621">266.00249454318674</stringProp>
              <stringProp name="622">266.00249454318674</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="701253600">
              <stringProp name="622">300.6142812597443</stringProp>
              <stringProp name="623">300.6142812597443</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2061931680">
              <stringProp name="623">159.67259120673526</stringProp>
              <stringProp name="624">159.67259120673526</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="114302880">
              <stringProp name="624">237.0034299968818</stringProp>
              <stringProp name="625">237.0034299968818</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1792946624">
              <stringProp name="625">419.7287184284378</stringProp>
              <stringProp name="626">419.7287184284378</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="200660512">
              <stringProp name="626">399.7723729342064</stringProp>
              <stringProp name="627">399.7723729342064</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="619823104">
              <stringProp name="627">320.57062675397566</stringProp>
              <stringProp name="628">320.57062675397566</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-633789760">
              <stringProp name="628">374.8269410664172</stringProp>
              <stringProp name="629">374.8269410664172</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1834441911">
              <stringProp name="629">420.0405363267851</stringProp>
              <stringProp name="630">420.0405363267851</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-257367968">
              <stringProp name="630">482.7159338946056</stringProp>
              <stringProp name="631">482.7159338946056</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1711243232">
              <stringProp name="631">425.965076395385</stringProp>
              <stringProp name="632">425.965076395385</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1685881184">
              <stringProp name="632">470.5550358590583</stringProp>
              <stringProp name="633">470.5550358590583</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1364616736">
              <stringProp name="633">365.1605862176489</stringProp>
              <stringProp name="634">365.1605862176489</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1685954592">
              <stringProp name="634">470.5550358590583</stringProp>
              <stringProp name="635">470.5550358590583</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1803828288">
              <stringProp name="635">437.19052073589023</stringProp>
              <stringProp name="636">437.19052073589023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="882901824">
              <stringProp name="636">574.3903960087309</stringProp>
              <stringProp name="637">574.3903960087309</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="47972864">
              <stringProp name="637">719.6975366386031</stringProp>
              <stringProp name="638">719.6975366386031</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="847387744">
              <stringProp name="638">652.6566884939195</stringProp>
              <stringProp name="639">652.6566884939195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1969363575">
              <stringProp name="639">600.894917368257</stringProp>
              <stringProp name="640">600.894917368257</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1342645312">
              <stringProp name="640">513.5859058309948</stringProp>
              <stringProp name="641">513.5859058309948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="580939808">
              <stringProp name="641">595.2821951980044</stringProp>
              <stringProp name="642">595.2821951980044</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="983004224">
              <stringProp name="642">513.897723729342</stringProp>
              <stringProp name="643">513.897723729342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="115708448">
              <stringProp name="643">845.3601496725912</stringProp>
              <stringProp name="644">845.3601496725912</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1703475872">
              <stringProp name="644">675.7312129716246</stringProp>
              <stringProp name="645">675.7312129716246</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1471247424">
              <stringProp name="645">748.3847832865606</stringProp>
              <stringProp name="646">748.3847832865606</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-892761472">
              <stringProp name="646">642.0548799501091</stringProp>
              <stringProp name="647">642.0548799501091</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="100833952">
              <stringProp name="647">680.7202993451824</stringProp>
              <stringProp name="648">680.7202993451824</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2062517376">
              <stringProp name="648">682.5912067352666</stringProp>
              <stringProp name="649">682.5912067352666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="10081175">
              <stringProp name="649">728.7402556906767</stringProp>
              <stringProp name="650">728.7402556906767</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2057659008">
              <stringProp name="650">741.5247895229187</stringProp>
              <stringProp name="651">741.5247895229187</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2112345472">
              <stringProp name="651">727.8048019956345</stringProp>
              <stringProp name="652">727.8048019956345</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="179347520">
              <stringProp name="652">740.9011537262239</stringProp>
              <stringProp name="653">740.9011537262239</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1427258720">
              <stringProp name="653">653.5921421889617</stringProp>
              <stringProp name="654">653.5921421889617</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1284347424">
              <stringProp name="654">654.2157779856565</stringProp>
              <stringProp name="655">654.2157779856565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="682849536">
              <stringProp name="655">846.9192391643281</stringProp>
              <stringProp name="656">846.9192391643281</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="281117696">
              <stringProp name="656">665.7530402245088</stringProp>
              <stringProp name="657">665.7530402245088</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2131668576">
              <stringProp name="657">709.40754599314</stringProp>
              <stringProp name="658">709.40754599314</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="73664352">
              <stringProp name="658">735.6002494543187</stringProp>
              <stringProp name="659">735.6002494543187</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="882408055">
              <stringProp name="659">851.9083255378858</stringProp>
              <stringProp name="660">851.9083255378858</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1868043072">
              <stringProp name="660">756.4920486435922</stringProp>
              <stringProp name="661">756.4920486435922</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="392531840">
              <stringProp name="661">757.4275023386343</stringProp>
              <stringProp name="662">757.4275023386343</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-884718976">
              <stringProp name="662">835.6937948238229</stringProp>
              <stringProp name="663">835.6937948238229</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="331457344">
              <stringProp name="663">720.6329903336451</stringProp>
              <stringProp name="664">720.6329903336451</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1853639392">
              <stringProp name="664">831.6401621453072</stringProp>
              <stringProp name="665">831.6401621453072</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="699965216">
              <stringProp name="665">635.5067040848145</stringProp>
              <stringProp name="666">635.5067040848145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-341107392">
              <stringProp name="666">767.40567508575</stringProp>
              <stringProp name="667">767.40567508575</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1716566336">
              <stringProp name="667">925.8091674462114</stringProp>
              <stringProp name="668">925.8091674462114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1724724224">
              <stringProp name="668">637.3776114748987</stringProp>
              <stringProp name="669">637.3776114748987</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2097713513">
              <stringProp name="669">978.8182101652636</stringProp>
              <stringProp name="670">978.8182101652636</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-86701728">
              <stringProp name="670">992.5381976925476</stringProp>
              <stringProp name="671">992.5381976925476</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-175140704">
              <stringProp name="671">710.3429996881822</stringProp>
              <stringProp name="672">710.3429996881822</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1217986080">
              <stringProp name="672">609.3140006236358</stringProp>
              <stringProp name="673">609.3140006236358</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-751293728">
              <stringProp name="673">10.0</stringProp>
              <stringProp name="674">10.0</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-169394592">
              <stringProp name="674">835.3819769254756</stringProp>
              <stringProp name="675">835.3819769254756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-791122656">
              <stringProp name="675">863.7574056750857</stringProp>
              <stringProp name="676">863.7574056750857</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-655459744">
              <stringProp name="676">847.8546928593701</stringProp>
              <stringProp name="677">847.8546928593701</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1717704160">
              <stringProp name="677">925.8091674462114</stringProp>
              <stringProp name="678">925.8091674462114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1916309632">
              <stringProp name="678">950.7545993140006</stringProp>
              <stringProp name="679">950.7545993140006</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1950633591">
              <stringProp name="679">861.5746803866542</stringProp>
              <stringProp name="680">861.5746803866542</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-699130144">
              <stringProp name="680">879.348300592454</stringProp>
              <stringProp name="681">879.348300592454</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1704399520">
              <stringProp name="681">689.763018397256</stringProp>
              <stringProp name="682">689.763018397256</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="720841184">
              <stringProp name="682">859.3919550982226</stringProp>
              <stringProp name="683">859.3919550982226</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1106507712">
              <stringProp name="683">711.5902712815716</stringProp>
              <stringProp name="684">711.5902712815716</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1162345536">
              <stringProp name="684">900.5519176800748</stringProp>
              <stringProp name="685">900.5519176800748</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-540674432">
              <stringProp name="685">718.762082943561</stringProp>
              <stringProp name="686">718.762082943561</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="990277696">
              <stringProp name="686">853.77923292797</stringProp>
              <stringProp name="687">853.77923292797</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1646812064">
              <stringProp name="687">846.6074212659806</stringProp>
              <stringProp name="688">846.6074212659806</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1306879328">
              <stringProp name="688">769.2765824758342</stringProp>
              <stringProp name="689">769.2765824758342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-581184489">
              <stringProp name="689">758.9865918303711</stringProp>
              <stringProp name="690">758.9865918303711</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1054627456">
              <stringProp name="690">737.7829747427502</stringProp>
              <stringProp name="691">737.7829747427502</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-525445568">
              <stringProp name="691">713.4611786716558</stringProp>
              <stringProp name="692">713.4611786716558</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="74949728">
              <stringProp name="692">890.2619270346119</stringProp>
              <stringProp name="693">890.2619270346119</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="805629568">
              <stringProp name="693">546.9504209541628</stringProp>
              <stringProp name="694">546.9504209541628</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1231468672">
              <stringProp name="694">766.7820392890552</stringProp>
              <stringProp name="695">766.7820392890552</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1692016256">
              <stringProp name="695">697.8702837542875</stringProp>
              <stringProp name="696">697.8702837542875</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1447278944">
              <stringProp name="696">614.9267227938884</stringProp>
              <stringProp name="697">614.9267227938884</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="16770016">
              <stringProp name="697">608.0667290302464</stringProp>
              <stringProp name="698">608.0667290302464</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-60731136">
              <stringProp name="698">610.5612722170252</stringProp>
              <stringProp name="699">610.5612722170252</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2065839264">
              <stringProp name="699">674.1721234798878</stringProp>
              <stringProp name="700">674.1721234798878</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-480546720">
              <stringProp name="700">687.5802931088245</stringProp>
              <stringProp name="701">687.5802931088245</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-83732896">
              <stringProp name="701">681.0321172435299</stringProp>
              <stringProp name="702">681.0321172435299</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1882367584">
              <stringProp name="702">632.7003429996882</stringProp>
              <stringProp name="703">632.7003429996882</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-145115360">
              <stringProp name="703">682.903024633614</stringProp>
              <stringProp name="704">682.903024633614</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-114975296">
              <stringProp name="704">603.0776426566885</stringProp>
              <stringProp name="705">603.0776426566885</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1516416224">
              <stringProp name="705">555.0576863111943</stringProp>
              <stringProp name="706">555.0576863111943</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2102975584">
              <stringProp name="706">615.2385406922357</stringProp>
              <stringProp name="707">615.2385406922357</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="558575392">
              <stringProp name="707">478.97411911443714</stringProp>
              <stringProp name="708">478.97411911443714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2106405312">
              <stringProp name="708">569.0894917368257</stringProp>
              <stringProp name="709">569.0894917368257</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1861904471">
              <stringProp name="709">544.7676956657313</stringProp>
              <stringProp name="710">544.7676956657313</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="128673088">
              <stringProp name="710">491.7586529466792</stringProp>
              <stringProp name="711">491.7586529466792</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-217092256">
              <stringProp name="711">498.9304646086685</stringProp>
              <stringProp name="712">498.9304646086685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="110910272">
              <stringProp name="712">527.9295291549735</stringProp>
              <stringProp name="713">527.9295291549735</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1131601696">
              <stringProp name="713">392.9123791705644</stringProp>
              <stringProp name="714">392.9123791705644</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="620297216">
              <stringProp name="714">521.0695353913314</stringProp>
              <stringProp name="715">521.0695353913314</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1245353792">
              <stringProp name="715">496.4359214218896</stringProp>
              <stringProp name="716">496.4359214218896</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1333885440">
              <stringProp name="716">543.5204240723418</stringProp>
              <stringProp name="717">543.5204240723418</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1825392448">
              <stringProp name="717">500.80137199875264</stringProp>
              <stringProp name="718">500.80137199875264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1422496736">
              <stringProp name="718">521.6931711880263</stringProp>
              <stringProp name="719">521.6931711880263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1986100105">
              <stringProp name="719">507.3495478640473</stringProp>
              <stringProp name="720">507.3495478640473</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-115282240">
              <stringProp name="720">289.0770190208918</stringProp>
              <stringProp name="721">289.0770190208918</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-792928512">
              <stringProp name="721">168.09167446211413</stringProp>
              <stringProp name="722">168.09167446211413</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-596274784">
              <stringProp name="722">502.3604614904895</stringProp>
              <stringProp name="723">502.3604614904895</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ClarkNetTesting" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="ClarkNetTesting" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-186590784">
              <stringProp name="723">564.4122232616152</stringProp>
              <stringProp name="724">564.4122232616152</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1816184992">
              <stringProp name="724">531.3595260367946</stringProp>
              <stringProp name="725">531.3595260367946</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-909732800">
              <stringProp name="725">455.2759588400374</stringProp>
              <stringProp name="726">455.2759588400374</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="190075072">
              <stringProp name="726">451.53414405986905</stringProp>
              <stringProp name="727">451.53414405986905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1388638208">
              <stringProp name="727">482.0922980979108</stringProp>
              <stringProp name="728">482.0922980979108</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1471870240">
              <stringProp name="728">464.318677892111</stringProp>
              <stringProp name="729">464.318677892111</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-798189545">
              <stringProp name="729">386.9878391019644</stringProp>
              <stringProp name="730">386.9878391019644</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="832436128">
              <stringProp name="730">465.8777673838479</stringProp>
              <stringProp name="731">465.8777673838479</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-573732480">
              <stringProp name="731">461.20049890863737</stringProp>
              <stringProp name="732">461.20049890863737</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-300789984">
              <stringProp name="732">401.0196445275959</stringProp>
              <stringProp name="733">401.0196445275959</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1266242080">
              <stringProp name="733">415.0514499532273</stringProp>
              <stringProp name="734">415.0514499532273</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-819464448">
              <stringProp name="734">350.5051449953227</stringProp>
              <stringProp name="735">350.5051449953227</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1333734880">
              <stringProp name="735">346.451512316807</stringProp>
              <stringProp name="736">346.451512316807</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1615073024">
              <stringProp name="736">380.4396632366698</stringProp>
              <stringProp name="737">380.4396632366698</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2094157152">
              <stringProp name="737">454.028687246648</stringProp>
              <stringProp name="738">454.028687246648</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-965470688">
              <stringProp name="738">406.9441845961958</stringProp>
              <stringProp name="739">406.9441845961958</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1595046217">
              <stringProp name="739">335.8497037729966</stringProp>
              <stringProp name="740">335.8497037729966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1715623488">
              <stringProp name="740">413.4923604614905</stringProp>
              <stringProp name="741">413.4923604614905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1944162464">
              <stringProp name="741">380.1278453383224</stringProp>
              <stringProp name="742">380.1278453383224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1971629792">
              <stringProp name="742">309.65700031181785</stringProp>
              <stringProp name="743">309.65700031181785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="860008192">
              <stringProp name="743">410.9978172747116</stringProp>
              <stringProp name="744">410.9978172747116</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-169429824">
              <stringProp name="744">401.3314624259432</stringProp>
              <stringProp name="745">401.3314624259432</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-360588800">
              <stringProp name="745">285.3352042407234</stringProp>
              <stringProp name="746">285.3352042407234</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-380457024">
              <stringProp name="746">259.4543186778921</stringProp>
              <stringProp name="747">259.4543186778921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-927677600">
              <stringProp name="747">309.3451824134705</stringProp>
              <stringProp name="748">309.3451824134705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1998582240">
              <stringProp name="748">283.15247895229186</stringProp>
              <stringProp name="749">283.15247895229186</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1214039145">
              <stringProp name="749">330.236981602744</stringProp>
              <stringProp name="750">330.236981602744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-936853280">
              <stringProp name="750">391.0414717804802</stringProp>
              <stringProp name="751">391.0414717804802</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="139543360">
              <stringProp name="751">339.5915185531649</stringProp>
              <stringProp name="752">339.5915185531649</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="791901152">
              <stringProp name="752">402.89055191768006</stringProp>
              <stringProp name="753">402.89055191768006</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1329011456">
              <stringProp name="753">373.5796694730277</stringProp>
              <stringProp name="754">373.5796694730277</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-533207840">
              <stringProp name="754">297.4961022762707</stringProp>
              <stringProp name="755">297.4961022762707</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1475457216">
              <stringProp name="755">258.2070470845027</stringProp>
              <stringProp name="756">258.2070470845027</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="28107520">
              <stringProp name="756">210.49890863735575</stringProp>
              <stringProp name="757">210.49890863735575</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1047976000">
              <stringProp name="757">255.40068599937632</stringProp>
              <stringProp name="758">255.40068599937632</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1098196448">
              <stringProp name="758">246.3579669473028</stringProp>
              <stringProp name="759">246.3579669473028</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1250231383">
              <stringProp name="759">171.8334892422825</stringProp>
              <stringProp name="760">171.8334892422825</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1623493728">
              <stringProp name="760">232.014343623324</stringProp>
              <stringProp name="761">232.014343623324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="7277152">
              <stringProp name="761">232.3261615216713</stringProp>
              <stringProp name="762">232.3261615216713</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-754187520">
              <stringProp name="762">228.58434674150297</stringProp>
              <stringProp name="763">228.58434674150297</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1904188320">
              <stringProp name="763">171.52167134393514</stringProp>
              <stringProp name="764">171.52167134393514</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-626041344">
              <stringProp name="764">255.7125038977237</stringProp>
              <stringProp name="765">255.7125038977237</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="543774816">
              <stringProp name="765">157.17804801995635</stringProp>
              <stringProp name="766">157.17804801995635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1693779136">
              <stringProp name="766">203.01527907701904</stringProp>
              <stringProp name="767">203.01527907701904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="574592448">
              <stringProp name="767">160.91986280012472</stringProp>
              <stringProp name="768">160.91986280012472</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-837050432">
              <stringProp name="768">219.229809791082</stringProp>
              <stringProp name="769">219.229809791082</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1194033079">
              <stringProp name="769">191.78983473651388</stringProp>
              <stringProp name="770">191.78983473651388</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2016330208">
              <stringProp name="770">120.38353601496723</stringProp>
              <stringProp name="771">120.38353601496723</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-293307360">
              <stringProp name="771">169.02712815715623</stringProp>
              <stringProp name="772">169.02712815715623</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="192785184">
              <stringProp name="772">180.56439039600872</stringProp>
              <stringProp name="773">180.56439039600872</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1538097760">
              <stringProp name="773">153.12441534144062</stringProp>
              <stringProp name="774">153.12441534144062</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="969197792">
              <stringProp name="774">147.19987527284067</stringProp>
              <stringProp name="775">147.19987527284067</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-815272864">
              <stringProp name="775">94.19083255378855</stringProp>
              <stringProp name="776">94.19083255378855</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2097638912">
              <stringProp name="776">107.91082008107264</stringProp>
              <stringProp name="777">107.91082008107264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-769893888">
              <stringProp name="777">107.28718428437791</stringProp>
              <stringProp name="778">107.28718428437791</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="462423136">
              <stringProp name="778">182.7471156844403</stringProp>
              <stringProp name="779">182.7471156844403</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-456327209">
              <stringProp name="779">122.5662613033988</stringProp>
              <stringProp name="780">122.5662613033988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1076404064">
              <stringProp name="780">221.1007171811662</stringProp>
              <stringProp name="781">221.1007171811662</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2064193920">
              <stringProp name="781">153.74805113813534</stringProp>
              <stringProp name="782">153.74805113813534</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1962893536">
              <stringProp name="782">170.89803554724045</stringProp>
              <stringProp name="783">170.89803554724045</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-662911584">
              <stringProp name="783">238.56251948861865</stringProp>
              <stringProp name="784">238.56251948861865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="885688768">
              <stringProp name="784">119.1362644215778</stringProp>
              <stringProp name="785">119.1362644215778</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1882841792">
              <stringProp name="785">199.27346429685065</stringProp>
              <stringProp name="786">199.27346429685065</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="625949280">
              <stringProp name="786">177.4462114125351</stringProp>
              <stringProp name="787">177.4462114125351</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2026336160">
              <stringProp name="787">242.30433426878704</stringProp>
              <stringProp name="788">242.30433426878704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-925026304">
              <stringProp name="788">149.38260056127223</stringProp>
              <stringProp name="789">149.38260056127223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="748286679">
              <stringProp name="789">169.65076395385094</stringProp>
              <stringProp name="790">169.65076395385094</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="510946144">
              <stringProp name="790">238.2507015902713</stringProp>
              <stringProp name="791">238.2507015902713</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1957865728">
              <stringProp name="791">225.4661677580293</stringProp>
              <stringProp name="792">225.4661677580293</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1895079264">
              <stringProp name="792">250.4115996258185</stringProp>
              <stringProp name="793">250.4115996258185</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1493111296">
              <stringProp name="793">189.60710944808235</stringProp>
              <stringProp name="794">189.60710944808235</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1750854912">
              <stringProp name="794">215.4879950109136</stringProp>
              <stringProp name="795">215.4879950109136</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1695869824">
              <stringProp name="795">262.8843155597132</stringProp>
              <stringProp name="796">262.8843155597132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-49320416">
              <stringProp name="796">244.1752416588712</stringProp>
              <stringProp name="797">244.1752416588712</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-729019232">
              <stringProp name="797">324.6242594324914</stringProp>
              <stringProp name="798">324.6242594324914</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-508179072">
              <stringProp name="798">290.0124727159339</stringProp>
              <stringProp name="799">290.0124727159339</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1302401600">
              <stringProp name="799">295.6251948861864</stringProp>
              <stringProp name="800">295.6251948861864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1154721728">
              <stringProp name="800">277.85157468038665</stringProp>
              <stringProp name="801">277.85157468038665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1807696864">
              <stringProp name="801">295.0015590894917</stringProp>
              <stringProp name="802">295.0015590894917</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1114489792">
              <stringProp name="802">294.377923292797</stringProp>
              <stringProp name="803">294.377923292797</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1652049440">
              <stringProp name="803">232.014343623324</stringProp>
              <stringProp name="804">232.014343623324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-648953696">
              <stringProp name="804">308.0979108200811</stringProp>
              <stringProp name="805">308.0979108200811</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-366725664">
              <stringProp name="805">279.72248207047085</stringProp>
              <stringProp name="806">279.72248207047085</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1338189024">
              <stringProp name="806">403.82600561272216</stringProp>
              <stringProp name="807">403.82600561272216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1489458688">
              <stringProp name="807">343.6451512316807</stringProp>
              <stringProp name="808">343.6451512316807</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1897329248">
              <stringProp name="808">459.9532273152479</stringProp>
              <stringProp name="809">459.9532273152479</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1131681065">
              <stringProp name="809">387.9232927970065</stringProp>
              <stringProp name="810">387.9232927970065</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1980075744">
              <stringProp name="810">343.021515434986</stringProp>
              <stringProp name="811">343.021515434986</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-648356160">
              <stringProp name="811">392.2887433738696</stringProp>
              <stringProp name="812">392.2887433738696</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1215725888">
              <stringProp name="812">407.5678203928905</stringProp>
              <stringProp name="813">407.5678203928905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-55570240">
              <stringProp name="813">332.1078889928282</stringProp>
              <stringProp name="814">332.1078889928282</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1010940512">
              <stringProp name="814">332.7315247895229</stringProp>
              <stringProp name="815">332.7315247895229</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1194291968">
              <stringProp name="815">294.6897411911444</stringProp>
              <stringProp name="816">294.6897411911444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="49162208">
              <stringProp name="816">322.12971624571253</stringProp>
              <stringProp name="817">322.12971624571253</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-526988384">
              <stringProp name="817">424.4059869036483</stringProp>
              <stringProp name="818">424.4059869036483</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1625713024">
              <stringProp name="818">427.2123479887746</stringProp>
              <stringProp name="819">427.2123479887746</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="673961783">
              <stringProp name="819">391.9769254755223</stringProp>
              <stringProp name="820">391.9769254755223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-745324544">
              <stringProp name="820">390.41783598378544</stringProp>
              <stringProp name="821">390.41783598378544</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1723618368">
              <stringProp name="821">458.0823199251637</stringProp>
              <stringProp name="822">458.0823199251637</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1232144064">
              <stringProp name="822">415.0514499532273</stringProp>
              <stringProp name="823">415.0514499532273</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1608513408">
              <stringProp name="823">422.8468974119114</stringProp>
              <stringProp name="824">422.8468974119114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-652529248">
              <stringProp name="824">515.7686311194262</stringProp>
              <stringProp name="825">515.7686311194262</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="738999904">
              <stringProp name="825">473.67321484253193</stringProp>
              <stringProp name="826">473.67321484253193</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2035831392">
              <stringProp name="826">49.60087309011537</stringProp>
              <stringProp name="827">49.60087309011537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="522199040">
              <stringProp name="827">269.1206735266604</stringProp>
              <stringProp name="828">269.1206735266604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1922032768">
              <stringProp name="828">414.73963205488</stringProp>
              <stringProp name="829">414.73963205488</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-272980713">
              <stringProp name="829">501.1131898971001</stringProp>
              <stringProp name="830">501.1131898971001</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-479253472">
              <stringProp name="830">439.9968818210165</stringProp>
              <stringProp name="831">439.9968818210165</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1079580224">
              <stringProp name="831">348.32241970689114</stringProp>
              <stringProp name="832">348.32241970689114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1055836000">
              <stringProp name="832">400.7078266292485</stringProp>
              <stringProp name="833">400.7078266292485</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1325591104">
              <stringProp name="833">432.8250701590271</stringProp>
              <stringProp name="834">432.8250701590271</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1204532960">
              <stringProp name="834">418.4814468350484</stringProp>
              <stringProp name="835">418.4814468350484</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-519518144">
              <stringProp name="835">484.5868412846897</stringProp>
              <stringProp name="836">484.5868412846897</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-171971328">
              <stringProp name="836">424.7178048019956</stringProp>
              <stringProp name="837">424.7178048019956</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-34552480">
              <stringProp name="837">406.320548799501</stringProp>
              <stringProp name="838">406.320548799501</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1304083200">
              <stringProp name="838">417.5459931400063</stringProp>
              <stringProp name="839">417.5459931400063</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1839322761">
              <stringProp name="839">327.74243841596507</stringProp>
              <stringProp name="840">327.74243841596507</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1196390848">
              <stringProp name="840">467.1250389772373</stringProp>
              <stringProp name="841">467.1250389772373</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-84508448">
              <stringProp name="841">455.8995946367321</stringProp>
              <stringProp name="842">455.8995946367321</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1782962848">
              <stringProp name="842">425.965076395385</stringProp>
              <stringProp name="843">425.965076395385</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="39816960">
              <stringProp name="843">517.9513564078578</stringProp>
              <stringProp name="844">517.9513564078578</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-322726048">
              <stringProp name="844">576.5731212971625</stringProp>
              <stringProp name="845">576.5731212971625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-558616480">
              <stringProp name="845">502.3604614904895</stringProp>
              <stringProp name="846">502.3604614904895</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1365521568">
              <stringProp name="846">503.9195509822263</stringProp>
              <stringProp name="847">503.9195509822263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="255710656">
              <stringProp name="847">441.244153414406</stringProp>
              <stringProp name="848">441.244153414406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-487015200">
              <stringProp name="848">318.69971936389146</stringProp>
              <stringProp name="849">318.69971936389146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="81427255">
              <stringProp name="849">501.4250077954474</stringProp>
              <stringProp name="850">501.4250077954474</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1708521504">
              <stringProp name="850">440.6205176177112</stringProp>
              <stringProp name="851">440.6205176177112</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2019281120">
              <stringProp name="851">388.5469285937013</stringProp>
              <stringProp name="852">388.5469285937013</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-874925312">
              <stringProp name="852">444.3623323978797</stringProp>
              <stringProp name="853">444.3623323978797</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-963825696">
              <stringProp name="853">591.2285625194886</stringProp>
              <stringProp name="854">591.2285625194886</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1211925056">
              <stringProp name="854">419.4169005300904</stringProp>
              <stringProp name="855">419.4169005300904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="150844224">
              <stringProp name="855">527.9295291549735</stringProp>
              <stringProp name="856">527.9295291549735</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="332229632">
              <stringProp name="856">492.0704708450265</stringProp>
              <stringProp name="857">492.0704708450265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1490555328">
              <stringProp name="857">483.02775179295287</stringProp>
              <stringProp name="858">483.02775179295287</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-485954176">
              <stringProp name="858">408.81509198628</stringProp>
              <stringProp name="859">408.81509198628</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1032484905">
              <stringProp name="859">387.6114748986592</stringProp>
              <stringProp name="860">387.6114748986592</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2091131008">
              <stringProp name="860">398.2132834424696</stringProp>
              <stringProp name="861">398.2132834424696</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="712035488">
              <stringProp name="861">396.030558154038</stringProp>
              <stringProp name="862">396.030558154038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="688769216">
              <stringProp name="862">394.4714686623012</stringProp>
              <stringProp name="863">394.4714686623012</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="712108896">
              <stringProp name="863">396.030558154038</stringProp>
              <stringProp name="864">396.030558154038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="756510752">
              <stringProp name="864">405.0732772061117</stringProp>
              <stringProp name="865">405.0732772061117</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1819847744">
              <stringProp name="865">337.4087932647334</stringProp>
              <stringProp name="866">337.4087932647334</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1439227680">
              <stringProp name="866">387.2996570003118</stringProp>
              <stringProp name="867">387.2996570003118</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="890603392">
              <stringProp name="867">386.3642033052697</stringProp>
              <stringProp name="868">386.3642033052697</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1835970080">
              <stringProp name="868">327.74243841596507</stringProp>
              <stringProp name="869">327.74243841596507</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1031347081">
              <stringProp name="869">387.6114748986592</stringProp>
              <stringProp name="870">387.6114748986592</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2110765600">
              <stringProp name="870">329.61334580604927</stringProp>
              <stringProp name="871">329.61334580604927</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-739598720">
              <stringProp name="871">390.41783598378544</stringProp>
              <stringProp name="872">390.41783598378544</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1754382912">
              <stringProp name="872">413.4923604614905</stringProp>
              <stringProp name="873">413.4923604614905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="171642592">
              <stringProp name="873">466.1895852821952</stringProp>
              <stringProp name="874">466.1895852821952</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1389791744">
              <stringProp name="874">398.83691923916433</stringProp>
              <stringProp name="875">398.83691923916433</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-424649888">
              <stringProp name="875">419.1050826317431</stringProp>
              <stringProp name="876">419.1050826317431</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1046752">
              <stringProp name="876">337.7206111630808</stringProp>
              <stringProp name="877">337.7206111630808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="596619424">
              <stringProp name="877">338.6560648581228</stringProp>
              <stringProp name="878">338.6560648581228</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1337456320">
              <stringProp name="878">375.450576863112</stringProp>
              <stringProp name="879">375.450576863112</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-22102313">
              <stringProp name="879">362.0424072341752</stringProp>
              <stringProp name="880">362.0424072341752</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="22417248">
              <stringProp name="880">354.55877767383845</stringProp>
              <stringProp name="881">354.55877767383845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="329396800">
              <stringProp name="881">361.4187714374805</stringProp>
              <stringProp name="882">361.4187714374805</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-63732096">
              <stringProp name="882">355.1824134705332</stringProp>
              <stringProp name="883">355.1824134705332</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-748271712">
              <stringProp name="883">353.62332397879635</stringProp>
              <stringProp name="884">353.62332397879635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1370759392">
              <stringProp name="884">375.7623947614593</stringProp>
              <stringProp name="885">375.7623947614593</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1782412544">
              <stringProp name="885">472.7377611474898</stringProp>
              <stringProp name="886">472.7377611474898</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2083323424">
              <stringProp name="886">367.9669473027752</stringProp>
              <stringProp name="887">367.9669473027752</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2094391456">
              <stringProp name="887">428.459619582164</stringProp>
              <stringProp name="888">428.459619582164</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-518986912">
              <stringProp name="888">424.4059869036483</stringProp>
              <stringProp name="889">424.4059869036483</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1616112489">
              <stringProp name="889">390.1060180854381</stringProp>
              <stringProp name="890">390.1060180854381</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-20181088">
              <stringProp name="890">362.0424072341752</stringProp>
              <stringProp name="891">362.0424072341752</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1741971904">
              <stringProp name="891">450.9105082631743</stringProp>
              <stringProp name="892">450.9105082631743</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1249003328">
              <stringProp name="892">442.8032429061428</stringProp>
              <stringProp name="893">442.8032429061428</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1118784">
              <stringProp name="893">337.7206111630808</stringProp>
              <stringProp name="894">337.7206111630808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-531522880">
              <stringProp name="894">461.20049890863737</stringProp>
              <stringProp name="895">461.20049890863737</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-927767424">
              <stringProp name="895">519.822263797942</stringProp>
              <stringProp name="896">519.822263797942</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-542227520">
              <stringProp name="896">436.2550670408481</stringProp>
              <stringProp name="897">436.2550670408481</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-626441056">
              <stringProp name="897">409.4387277829748</stringProp>
              <stringProp name="898">409.4387277829748</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="269034496">
              <stringProp name="898">344.58060492672274</stringProp>
              <stringProp name="899">344.58060492672274</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-719574656">
              <stringProp name="899">408.5032740879327</stringProp>
              <stringProp name="900">408.5032740879327</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-294033088">
              <stringProp name="900">436.8787028375429</stringProp>
              <stringProp name="901">436.8787028375429</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1096726240">
              <stringProp name="901">387.9232927970065</stringProp>
              <stringProp name="902">387.9232927970065</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1559868928">
              <stringProp name="902">546.3267851574682</stringProp>
              <stringProp name="903">546.3267851574682</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <intProp name="ThroughputController.maxThroughput">50</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>10.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">${jsfViewState}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                    </elementProp>
                    <elementProp name="login:password" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">xxx</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">login:password</stringProp>
                    </elementProp>
                    <elementProp name="login:submit" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">Log in</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">login:submit</stringProp>
                    </elementProp>
                    <elementProp name="login:uid" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">login:uid</stringProp>
                    </elementProp>
                    <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">login_SUBMIT</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="3327652">loop</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1902774694">
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">true</boolProp>
                </UserParameters>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1024322212">Ready to Trade</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${loop}</stringProp>
              </WhileController>
              <hashTree>
                <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                  <intProp name="InterleaveControl.style">1</intProp>
                </RandomController>
                <hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="quotes:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:symbols</stringProp>
                          </elementProp>
                          <elementProp name="quotes:submit2" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">quotes</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:submit2</stringProp>
                          </elementProp>
                          <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="789765197">DayTrader Quotes</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>16.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>15.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>10.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>8.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                      <boolProp name="createNewConnection">true</boolProp>
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server">${hostname}</stringProp>
                      <stringProp name="port">${port}</stringProp>
                      <stringProp name="path">/daytrader/marketsummary</stringProp>
                      <boolProp name="binaryPayload">false</boolProp>
                      <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                      <stringProp name="readTimeout">60000</stringProp>
                      <stringProp name="TestPlan.comments">open and close</stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <boolProp name="loadDataFromFile">false</boolProp>
                      <stringProp name="dataFile"></stringProp>
                    </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="quotes:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:symbols</stringProp>
                          </elementProp>
                          <elementProp name="quotes:submit2" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">quotes</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:submit2</stringProp>
                          </elementProp>
                          <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">100</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="789765197">DayTrader Quotes</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                        <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default">0</stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                        <stringProp name="Sample.scope">all</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="quotes:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:${tobuy}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:symbols</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                          </elementProp>
                          <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">buy</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                          </elementProp>
                          <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                        <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default">0</stringProp>
                        <stringProp name="RegexExtractor.match_number">0</stringProp>
                        <stringProp name="Sample.scope">all</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                      <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                      <boolProp name="IfController.useExpression">true</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">${jsfViewState}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                            </elementProp>
                            <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                            </elementProp>
                            <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">1</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                            </elementProp>
                            <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">portfolio:symbols</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="837442055">been submitted</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>2.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:uid</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:password" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">xxx</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:password</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:address" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">rndAddress</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:address</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">xxx</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">rndCC</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:email" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:email</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">Update Profile</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:submit</stringProp>
                          </elementProp>
                          <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>1.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="1129050579">DayTrader Login</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="register:fullname" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:fullname</stringProp>
                          </elementProp>
                          <elementProp name="register:address" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:address</stringProp>
                          </elementProp>
                          <elementProp name="register:email" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:email</stringProp>
                          </elementProp>
                          <elementProp name="register:uid" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:uid</stringProp>
                          </elementProp>
                          <elementProp name="register:password" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">yyy</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:password</stringProp>
                          </elementProp>
                          <elementProp name="register:cpassword" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">yyy</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:cpassword</stringProp>
                          </elementProp>
                          <elementProp name="register:money" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1000000</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:money</stringProp>
                          </elementProp>
                          <elementProp name="register:ccn" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:ccn</stringProp>
                          </elementProp>
                          <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="register:submit" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">Register</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">register:submit</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="874613025">Registration operation succeeded</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="1129050579">DayTrader Login</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="3327652">loop</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-544885953">
                          <stringProp name="97196323">false</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>4.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                          </elementProp>
                          <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="1129050579">DayTrader Login</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="3327652">loop</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-544885953">
                          <stringProp name="97196323">false</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>70.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="uid" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">uid</stringProp>
                    </elementProp>
                    <elementProp name="passwd" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">xxx</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">passwd</stringProp>
                    </elementProp>
                    <elementProp name="action" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">login</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">action</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="3327652">loop</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1902774694">
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">true</boolProp>
                </UserParameters>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${loop}</stringProp>
              </WhileController>
              <hashTree>
                <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                  <intProp name="InterleaveControl.style">1</intProp>
                </RandomController>
                <hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">quotes</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>16.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">home</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>15.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">portfolio</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>10.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">account</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>8.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                      <boolProp name="createNewConnection">false</boolProp>
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server">${hostname}</stringProp>
                      <stringProp name="port">${port}</stringProp>
                      <stringProp name="path">/daytrader/marketsummary</stringProp>
                      <boolProp name="binaryPayload">false</boolProp>
                      <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                      <stringProp name="readTimeout">60000</stringProp>
                      <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <boolProp name="loadDataFromFile">false</boolProp>
                      <stringProp name="dataFile"></stringProp>
                    </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">quotes</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">buy</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="symbol" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">s:${tobuy}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">symbol</stringProp>
                          </elementProp>
                          <elementProp name="quantity" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">quantity</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">portfolio</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                        <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default">NotFound</stringProp>
                        <stringProp name="RegexExtractor.match_number">0</stringProp>
                        <stringProp name="Sample.scope">all</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                        <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                        <stringProp name="RegexExtractor.template">true</stringProp>
                        <stringProp name="RegexExtractor.default">false</stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                        <stringProp name="Sample.scope">all</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                      <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                      <boolProp name="IfController.useExpression">true</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="action" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">sell</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">action</stringProp>
                            </elementProp>
                            <elementProp name="holdingID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">holdingID</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="763316301">has been submitted</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>2.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">account</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">update_profile</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="userID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">userID</stringProp>
                          </elementProp>
                          <elementProp name="fullname" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">fullname</stringProp>
                          </elementProp>
                          <elementProp name="password" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">xxx</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">password</stringProp>
                          </elementProp>
                          <elementProp name="address" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">rndAddress</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">address</stringProp>
                          </elementProp>
                          <elementProp name="cpassword" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">xxx</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">cpassword</stringProp>
                          </elementProp>
                          <elementProp name="creditcard" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">rndCC</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">creditcard</stringProp>
                          </elementProp>
                          <elementProp name="email" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">email</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>1.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">logout</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">register</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="Full Name" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">Full Name</stringProp>
                          </elementProp>
                          <elementProp name="snail mail" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">snail mail</stringProp>
                          </elementProp>
                          <elementProp name="email" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">email</stringProp>
                          </elementProp>
                          <elementProp name="user id" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">user id</stringProp>
                          </elementProp>
                          <elementProp name="passwd" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">yyy</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">passwd</stringProp>
                          </elementProp>
                          <elementProp name="confirm passwd" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">yyy</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">confirm passwd</stringProp>
                          </elementProp>
                          <elementProp name="money" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">1000000</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">money</stringProp>
                          </elementProp>
                          <elementProp name="Credit Card Number" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">Credit Card Number</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">logout</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="3327652">loop</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-544885953">
                          <stringProp name="97196323">false</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                  </hashTree>
                  <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                    <intProp name="ThroughputController.style">1</intProp>
                    <boolProp name="ThroughputController.perThread">true</boolProp>
                    <intProp name="ThroughputController.maxThroughput">1</intProp>
                    <FloatProperty>
                      <name>ThroughputController.percentThroughput</name>
                      <value>4.0</value>
                      <savedValue>0.0</savedValue>
                    </FloatProperty>
                  </ThroughputController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">logout</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="1129050579">DayTrader Login</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="3327652">loop</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-544885953">
                          <stringProp name="97196323">false</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>20.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="symbols" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">symbols</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
          <hashTree>
            <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
              <boolProp name="TLS">false</boolProp>
              <stringProp name="server">${hostname}</stringProp>
              <stringProp name="port">${port}</stringProp>
              <stringProp name="path">/daytrader/marketsummary</stringProp>
              <stringProp name="readTimeout">60000</stringProp>
              <stringProp name="connectTimeout">20000</stringProp>
            </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="WorldCupTraining" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="WorldCupTraining" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="317715616">
              <stringProp name="1">322.7352191331796</stringProp>
              <stringProp name="2">322.7352191331796</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1579023520">
              <stringProp name="2">296.02646594633967</stringProp>
              <stringProp name="3">296.02646594633967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1746142304">
              <stringProp name="3">274.1738497025616</stringProp>
              <stringProp name="4">274.1738497025616</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-159389920">
              <stringProp name="4">314.8439966007041</stringProp>
              <stringProp name="5">314.8439966007041</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1038241696">
              <stringProp name="5">302.2180405487435</stringProp>
              <stringProp name="6">302.2180405487435</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1273665952">
              <stringProp name="6">291.17032900327786</stringProp>
              <stringProp name="7">291.17032900327786</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1903906592">
              <stringProp name="7">296.6334830642224</stringProp>
              <stringProp name="8">296.6334830642224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1703169152">
              <stringProp name="8">346.2874833070292</stringProp>
              <stringProp name="9">346.2874833070292</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-733506905">
              <stringProp name="9">325.89170814616966</stringProp>
              <stringProp name="10">325.89170814616966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1974710592">
              <stringProp name="10">275.99490105620976</stringProp>
              <stringProp name="11">275.99490105620976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-414630368">
              <stringProp name="11">267.37525798227506</stringProp>
              <stringProp name="12">267.37525798227506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="217075808">
              <stringProp name="12">237.14580551171545</stringProp>
              <stringProp name="13">237.14580551171545</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-104893568">
              <stringProp name="13">170.00971227388612</stringProp>
              <stringProp name="14">170.00971227388612</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="83461088">
              <stringProp name="14">161.14726235279835</stringProp>
              <stringProp name="15">161.14726235279835</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-905645280">
              <stringProp name="15">143.17955566346967</stringProp>
              <stringProp name="16">143.17955566346967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1455144096">
              <stringProp name="16">194.5332038363482</stringProp>
              <stringProp name="17">194.5332038363482</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-773010272">
              <stringProp name="17">132.0104406944276</stringProp>
              <stringProp name="18">132.0104406944276</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-400531808">
              <stringProp name="18">212.25810367852367</stringProp>
              <stringProp name="19">212.25810367852367</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1996009289">
              <stringProp name="19">232.7752822629598</stringProp>
              <stringProp name="20">232.7752822629598</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="327100480">
              <stringProp name="20">222.4559912589535</stringProp>
              <stringProp name="21">222.4559912589535</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1703817152">
              <stringProp name="21">287.6496297195581</stringProp>
              <stringProp name="22">287.6496297195581</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1630969856">
              <stringProp name="22">225.248270001214</stringProp>
              <stringProp name="23">225.248270001214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1537667680">
              <stringProp name="23">244.3086075027316</stringProp>
              <stringProp name="24">244.3086075027316</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1815983456">
              <stringProp name="24">205.58091538181375</stringProp>
              <stringProp name="25">205.58091538181375</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1312904128">
              <stringProp name="25">283.15770304722594</stringProp>
              <stringProp name="26">283.15770304722594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1936350176">
              <stringProp name="26">167.33883695520214</stringProp>
              <stringProp name="27">167.33883695520214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1118833472">
              <stringProp name="27">170.37392254461577</stringProp>
              <stringProp name="28">170.37392254461577</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1019646304">
              <stringProp name="28">137.9592084496783</stringProp>
              <stringProp name="29">137.9592084496783</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-226520873">
              <stringProp name="29">129.82517907004976</stringProp>
              <stringProp name="30">129.82517907004976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1697458336">
              <stringProp name="30">204.6096879932014</stringProp>
              <stringProp name="31">204.6096879932014</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2089299712">
              <stringProp name="31">345.6804661891465</stringProp>
              <stringProp name="32">345.6804661891465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-342543904">
              <stringProp name="32">251.3500060701712</stringProp>
              <stringProp name="33">251.3500060701712</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1969626976">
              <stringProp name="33">184.4567196794949</stringProp>
              <stringProp name="34">184.4567196794949</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1074878080">
              <stringProp name="34">224.76265630690784</stringProp>
              <stringProp name="35">224.76265630690784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1889065024">
              <stringProp name="35">191.86232851766425</stringProp>
              <stringProp name="36">191.86232851766425</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-835187328">
              <stringProp name="36">352.9646716037392</stringProp>
              <stringProp name="37">352.9646716037392</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1439010304">
              <stringProp name="37">210.1942454777225</stringProp>
              <stringProp name="38">210.1942454777225</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1588576544">
              <stringProp name="38">121.69114969042126</stringProp>
              <stringProp name="39">121.69114969042126</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1783267543">
              <stringProp name="39">237.7528226295981</stringProp>
              <stringProp name="40">237.7528226295981</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1835322624">
              <stringProp name="40">348.4727449314071</stringProp>
              <stringProp name="41">348.4727449314071</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1518537152">
              <stringProp name="41">198.053903120068</stringProp>
              <stringProp name="42">198.053903120068</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1345607840">
              <stringProp name="42">181.0574238193517</stringProp>
              <stringProp name="43">181.0574238193517</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1888985024">
              <stringProp name="43">146.4574481000364</stringProp>
              <stringProp name="44">146.4574481000364</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1461780288">
              <stringProp name="44">147.06446521791915</stringProp>
              <stringProp name="45">147.06446521791915</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1315896224">
              <stringProp name="45">224.15563918902515</stringProp>
              <stringProp name="46">224.15563918902515</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-701941600">
              <stringProp name="46">288.2566468374408</stringProp>
              <stringProp name="47">288.2566468374408</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1019367296">
              <stringProp name="47">450.3302173121281</stringProp>
              <stringProp name="48">450.3302173121281</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2045326688">
              <stringProp name="48">363.5267694548986</stringProp>
              <stringProp name="49">363.5267694548986</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1484237449">
              <stringProp name="49">357.69940512322444</stringProp>
              <stringProp name="50">357.69940512322444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="444343296">
              <stringProp name="50">410.5098943790215</stringProp>
              <stringProp name="51">410.5098943790215</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="785905824">
              <stringProp name="51">418.64392375865</stringProp>
              <stringProp name="52">418.64392375865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="254076192">
              <stringProp name="52">400.4334102221682</stringProp>
              <stringProp name="53">400.4334102221682</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1967143872">
              <stringProp name="53">449.9660070413986</stringProp>
              <stringProp name="54">449.9660070413986</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2034064448">
              <stringProp name="54">478.2530047347335</stringProp>
              <stringProp name="55">478.2530047347335</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-703778720">
              <stringProp name="55">403.8327060823115</stringProp>
              <stringProp name="56">403.8327060823115</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2004725760">
              <stringProp name="56">410.38849095544487</stringProp>
              <stringProp name="57">410.38849095544487</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1652290496">
              <stringProp name="57">345.19485249484035</stringProp>
              <stringProp name="58">345.19485249484035</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="753360512">
              <stringProp name="58">391.3281534539274</stringProp>
              <stringProp name="59">391.3281534539274</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="688907991">
              <stringProp name="59">417.7940997936142</stringProp>
              <stringProp name="60">417.7940997936142</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="225123840">
              <stringProp name="60">401.6474444579337</stringProp>
              <stringProp name="61">401.6474444579337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1127027584">
              <stringProp name="61">476.55335680466186</stringProp>
              <stringProp name="62">476.55335680466186</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1090629248">
              <stringProp name="62">456.03617822022574</stringProp>
              <stringProp name="63">456.03617822022574</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="754723264">
              <stringProp name="63">441.4677673910404</stringProp>
              <stringProp name="64">441.4677673910404</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2037735392">
              <stringProp name="64">443.41022216826514</stringProp>
              <stringProp name="65">443.41022216826514</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1734403264">
              <stringProp name="65">372.8748330702926</stringProp>
              <stringProp name="66">372.8748330702926</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1540680512">
              <stringProp name="66">413.302173121282</stringProp>
              <stringProp name="67">413.302173121282</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1853565056">
              <stringProp name="67">488.6936991623164</stringProp>
              <stringProp name="68">488.6936991623164</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-596415904">
              <stringProp name="68">367.2902755857715</stringProp>
              <stringProp name="69">367.2902755857715</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1538141513">
              <stringProp name="69">327.83416292339444</stringProp>
              <stringProp name="70">327.83416292339444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1896125760">
              <stringProp name="70">404.68253004734726</stringProp>
              <stringProp name="71">404.68253004734726</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1831872448">
              <stringProp name="71">348.4727449314071</stringProp>
              <stringProp name="72">348.4727449314071</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1925334272">
              <stringProp name="72">299.0615515357533</stringProp>
              <stringProp name="73">299.0615515357533</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="902958048">
              <stringProp name="73">454.9435474080369</stringProp>
              <stringProp name="74">454.9435474080369</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2131688960">
              <stringProp name="74">386.2292096637125</stringProp>
              <stringProp name="75">386.2292096637125</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="43370432">
              <stringProp name="75">445.5954837926429</stringProp>
              <stringProp name="76">445.5954837926429</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1991153280">
              <stringProp name="76">422.4074298895229</stringProp>
              <stringProp name="77">422.4074298895229</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-779630016">
              <stringProp name="77">384.4081583100643</stringProp>
              <stringProp name="78">384.4081583100643</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-556922304">
              <stringProp name="78">394.8488527376472</stringProp>
              <stringProp name="79">394.8488527376472</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="551608951">
              <stringProp name="79">408.3246327546436</stringProp>
              <stringProp name="80">408.3246327546436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-159556288">
              <stringProp name="80">511.7603496418599</stringProp>
              <stringProp name="81">511.7603496418599</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="296378048">
              <stringProp name="81">418.76532718222654</stringProp>
              <stringProp name="82">418.76532718222654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-977862400">
              <stringProp name="82">459.192667233216</stringProp>
              <stringProp name="83">459.192667233216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1005922432">
              <stringProp name="83">568.4557484521063</stringProp>
              <stringProp name="84">568.4557484521063</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1863236320">
              <stringProp name="84">571.8550443122497</stringProp>
              <stringProp name="85">571.8550443122497</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-451657728">
              <stringProp name="85">639.2339443972319</stringProp>
              <stringProp name="86">639.2339443972319</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="231011072">
              <stringProp name="86">608.2760713852131</stringProp>
              <stringProp name="87">608.2760713852131</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-250514528">
              <stringProp name="87">451.30144470074055</stringProp>
              <stringProp name="88">451.30144470074055</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="209005824">
              <stringProp name="88">617.86694184776</stringProp>
              <stringProp name="89">617.86694184776</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1711344841">
              <stringProp name="89">738.2991380356927</stringProp>
              <stringProp name="90">738.2991380356927</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="750415712">
              <stringProp name="90">517.1021002792278</stringProp>
              <stringProp name="91">517.1021002792278</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1412743584">
              <stringProp name="91">537.7406822872406</stringProp>
              <stringProp name="92">537.7406822872406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1182766592">
              <stringProp name="92">611.7967706689329</stringProp>
              <stringProp name="93">611.7967706689329</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-977905408">
              <stringProp name="93">619.3237829306786</stringProp>
              <stringProp name="94">619.3237829306786</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="238759520">
              <stringProp name="94">612.4037877868155</stringProp>
              <stringProp name="95">612.4037877868155</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="808997952">
              <stringProp name="95">637.89850673789</stringProp>
              <stringProp name="96">637.89850673789</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1993430848">
              <stringProp name="96">627.8220225810367</stringProp>
              <stringProp name="97">627.8220225810367</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2060879232">
              <stringProp name="97">506.90421269879806</stringProp>
              <stringProp name="98">506.90421269879806</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1703851008">
              <stringProp name="98">461.4993322811703</stringProp>
              <stringProp name="99">461.4993322811703</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2080205136">
              <stringProp name="99">695.4437295131723</stringProp>
              <stringProp name="100">695.4437295131723</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1554923296">
              <stringProp name="100">680.7539152604103</stringProp>
              <stringProp name="101">680.7539152604103</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1485160864">
              <stringProp name="101">591.765205778803</stringProp>
              <stringProp name="102">591.765205778803</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="995511616">
              <stringProp name="102">511.0319291004007</stringProp>
              <stringProp name="103">511.0319291004007</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="881239040">
              <stringProp name="103">620.7806240135972</stringProp>
              <stringProp name="104">620.7806240135972</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="135629248">
              <stringProp name="104">689.4949617579216</stringProp>
              <stringProp name="105">689.4949617579216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="756480480">
              <stringProp name="105">722.2738861235887</stringProp>
              <stringProp name="106">722.2738861235887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="618609728">
              <stringProp name="106">667.3995386669905</stringProp>
              <stringProp name="107">667.3995386669905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-159056032">
              <stringProp name="107">795.6015539638217</stringProp>
              <stringProp name="108">795.6015539638217</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="991210912">
              <stringProp name="108">710.3763506130873</stringProp>
              <stringProp name="109">710.3763506130873</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-133056457">
              <stringProp name="109">782.6113876411314</stringProp>
              <stringProp name="110">782.6113876411314</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1679417344">
              <stringProp name="110">820.4892557970134</stringProp>
              <stringProp name="111">820.4892557970134</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1535483520">
              <stringProp name="111">771.1994658249362</stringProp>
              <stringProp name="112">771.1994658249362</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1528836448">
              <stringProp name="112">750.9250940876533</stringProp>
              <stringProp name="113">750.9250940876533</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1622283168">
              <stringProp name="113">754.445793371373</stringProp>
              <stringProp name="114">754.445793371373</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1584314784">
              <stringProp name="114">746.0689571445915</stringProp>
              <stringProp name="115">746.0689571445915</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-683764064">
              <stringProp name="115">760.8801748209299</stringProp>
              <stringProp name="116">760.8801748209299</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1769076256">
              <stringProp name="116">748.9826393104287</stringProp>
              <stringProp name="117">748.9826393104287</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1091608640">
              <stringProp name="117">751.4107077819594</stringProp>
              <stringProp name="118">751.4107077819594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1934171776">
              <stringProp name="118">758.8163166201288</stringProp>
              <stringProp name="119">758.8163166201288</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-580110057">
              <stringProp name="119">658.172878475173</stringProp>
              <stringProp name="120">658.172878475173</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-577967744">
              <stringProp name="120">720.3314313463641</stringProp>
              <stringProp name="121">720.3314313463641</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1887670368">
              <stringProp name="121">810.4127716401601</stringProp>
              <stringProp name="122">810.4127716401601</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1950624192">
              <stringProp name="122">657.5658613572904</stringProp>
              <stringProp name="123">657.5658613572904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-178895904">
              <stringProp name="123">768.5285905062523</stringProp>
              <stringProp name="124">768.5285905062523</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="476153440">
              <stringProp name="124">739.5131722714581</stringProp>
              <stringProp name="125">739.5131722714581</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="614200608">
              <stringProp name="125">823.6457448100036</stringProp>
              <stringProp name="126">823.6457448100036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-199183232">
              <stringProp name="126">824.2527619278864</stringProp>
              <stringProp name="127">824.2527619278864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1384746400">
              <stringProp name="127">740.8486099308001</stringProp>
              <stringProp name="128">740.8486099308001</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="236399744">
              <stringProp name="128">874.8779895593055</stringProp>
              <stringProp name="129">874.8779895593055</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1761947433">
              <stringProp name="129">859.3383513415079</stringProp>
              <stringProp name="130">859.3383513415079</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="184795808">
              <stringProp name="130">914.455505645259</stringProp>
              <stringProp name="131">914.455505645259</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1262599008">
              <stringProp name="131">829.3517057181012</stringProp>
              <stringProp name="132">829.3517057181012</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="508648736">
              <stringProp name="132">797.6654121646229</stringProp>
              <stringProp name="133">797.6654121646229</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-731209728">
              <stringProp name="133">762.3370159038485</stringProp>
              <stringProp name="134">762.3370159038485</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1069840576">
              <stringProp name="134">566.9989073691879</stringProp>
              <stringProp name="135">566.9989073691879</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-617464960">
              <stringProp name="135">587.3946825300474</stringProp>
              <stringProp name="136">587.3946825300474</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="949611040">
              <stringProp name="136">757.9664926550929</stringProp>
              <stringProp name="137">757.9664926550929</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="553648768">
              <stringProp name="137">699.9356561855044</stringProp>
              <stringProp name="138">699.9356561855044</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1561139680">
              <stringProp name="138">896.366395532354</stringProp>
              <stringProp name="139">896.366395532354</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-901268297">
              <stringProp name="139">757.2380721136336</stringProp>
              <stringProp name="140">757.2380721136336</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2118621568">
              <stringProp name="140">697.2647808668204</stringProp>
              <stringProp name="141">697.2647808668204</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-703037152">
              <stringProp name="141">500.1056209785115</stringProp>
              <stringProp name="142">500.1056209785115</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-183181088">
              <stringProp name="142">649.0676217069322</stringProp>
              <stringProp name="143">649.0676217069322</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1583734496">
              <stringProp name="143">517.2235037028044</stringProp>
              <stringProp name="144">517.2235037028044</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-303663072">
              <stringProp name="144">797.3012018938934</stringProp>
              <stringProp name="145">797.3012018938934</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1842773728">
              <stringProp name="145">789.409979361418</stringProp>
              <stringProp name="146">789.409979361418</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1660366144">
              <stringProp name="146">826.4380235522641</stringProp>
              <stringProp name="147">826.4380235522641</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1010005536">
              <stringProp name="147">770.3496418599005</stringProp>
              <stringProp name="148">770.3496418599005</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="289283520">
              <stringProp name="148">706.6128444822144</stringProp>
              <stringProp name="149">706.6128444822144</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1238073769">
              <stringProp name="149">747.0401845332037</stringProp>
              <stringProp name="150">747.0401845332037</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1481082688">
              <stringProp name="150">559.8361053781717</stringProp>
              <stringProp name="151">559.8361053781717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1929214208">
              <stringProp name="151">526.692970741775</stringProp>
              <stringProp name="152">526.692970741775</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-927244960">
              <stringProp name="152">643.6044676459876</stringProp>
              <stringProp name="153">643.6044676459876</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1116149664">
              <stringProp name="153">674.44093723443</stringProp>
              <stringProp name="154">674.44093723443</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1011835136">
              <stringProp name="154">564.3280320505038</stringProp>
              <stringProp name="155">564.3280320505038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1308699808">
              <stringProp name="155">535.0698069685565</stringProp>
              <stringProp name="156">535.0698069685565</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-409603712">
              <stringProp name="156">518.3161345149933</stringProp>
              <stringProp name="157">518.3161345149933</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="359367040">
              <stringProp name="157">658.5370887459026</stringProp>
              <stringProp name="158">658.5370887459026</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1655082912">
              <stringProp name="158">750.3180769697706</stringProp>
              <stringProp name="159">750.3180769697706</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-989109257">
              <stringProp name="159">611.4325603982031</stringProp>
              <stringProp name="160">611.4325603982031</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-97155360">
              <stringProp name="160">646.6395532354012</stringProp>
              <stringProp name="161">646.6395532354012</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1844366336">
              <stringProp name="161">557.4080369066407</stringProp>
              <stringProp name="162">557.4080369066407</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-579141344">
              <stringProp name="162">601.7202865120796</stringProp>
              <stringProp name="163">601.7202865120796</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="312271008">
              <stringProp name="163">537.7406822872406</stringProp>
              <stringProp name="164">537.7406822872406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1035645600">
              <stringProp name="164">540.532961029501</stringProp>
              <stringProp name="165">540.532961029501</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-405423744">
              <stringProp name="165">491.9715915988831</stringProp>
              <stringProp name="166">491.9715915988831</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1761247520">
              <stringProp name="166">498.0417627777104</stringProp>
              <stringProp name="167">498.0417627777104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1107456416">
              <stringProp name="167">444.8670632511837</stringProp>
              <stringProp name="168">444.8670632511837</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-386550528">
              <stringProp name="168">447.173728299138</stringProp>
              <stringProp name="169">447.173728299138</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="599396183">
              <stringProp name="169">426.4137428675489</stringProp>
              <stringProp name="170">426.4137428675489</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-791745760">
              <stringProp name="170">589.7013475780018</stringProp>
              <stringProp name="171">589.7013475780018</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-943266976">
              <stringProp name="171">689.373558334345</stringProp>
              <stringProp name="172">689.373558334345</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2043060672">
              <stringProp name="172">616.2886973412649</stringProp>
              <stringProp name="173">616.2886973412649</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="303276000">
              <stringProp name="173">503.14070656792506</stringProp>
              <stringProp name="174">503.14070656792506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1391804672">
              <stringProp name="174">468.9049411193395</stringProp>
              <stringProp name="175">468.9049411193395</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1069004480">
              <stringProp name="175">376.8811460483185</stringProp>
              <stringProp name="176">376.8811460483185</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1221611584">
              <stringProp name="176">408.6888430253733</stringProp>
              <stringProp name="177">408.6888430253733</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1119280224">
              <stringProp name="177">335.11836833798714</stringProp>
              <stringProp name="178">335.11836833798714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1227829056">
              <stringProp name="178">264.461575816438</stringProp>
              <stringProp name="179">264.461575816438</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1888930743">
              <stringProp name="179">252.19983003520696</stringProp>
              <stringProp name="180">252.19983003520696</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2070559840">
              <stringProp name="180">262.39771761563674</stringProp>
              <stringProp name="181">262.39771761563674</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1226821280">
              <stringProp name="181">235.68896442879688</stringProp>
              <stringProp name="182">235.68896442879688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-484038688">
              <stringProp name="182">161.02585892922178</stringProp>
              <stringProp name="183">161.02585892922178</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1738180480">
              <stringProp name="183">158.840597304844</stringProp>
              <stringProp name="184">158.840597304844</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1955098400">
              <stringProp name="184">210.315648901299</stringProp>
              <stringProp name="185">210.315648901299</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="547574656">
              <stringProp name="185">131.64623042369794</stringProp>
              <stringProp name="186">131.64623042369794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1679257696">
              <stringProp name="186">343.37380114119213</stringProp>
              <stringProp name="187">343.37380114119213</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-763956544">
              <stringProp name="187">340.4601189753551</stringProp>
              <stringProp name="188">340.4601189753551</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="147220480">
              <stringProp name="188">242.7303629962365</stringProp>
              <stringProp name="189">242.7303629962365</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="694693463">
              <stringProp name="189">233.62510622799564</stringProp>
              <stringProp name="190">233.62510622799564</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-692690432">
              <stringProp name="190">292.0201529683137</stringProp>
              <stringProp name="191">292.0201529683137</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="527772416">
              <stringProp name="191">246.73667597426245</stringProp>
              <stringProp name="192">246.73667597426245</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-760958816">
              <stringProp name="192">209.2230180891101</stringProp>
              <stringProp name="193">209.2230180891101</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-100273984">
              <stringProp name="193">246.2510622799563</stringProp>
              <stringProp name="194">246.2510622799563</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="296224672">
              <stringProp name="194">222.6987981061066</stringProp>
              <stringProp name="195">222.6987981061066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1815400448">
              <stringProp name="195">265.1899963578973</stringProp>
              <stringProp name="196">265.1899963578973</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1321688320">
              <stringProp name="196">353.571688721622</stringProp>
              <stringProp name="197">353.571688721622</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="667170272">
              <stringProp name="197">217.35704746873864</stringProp>
              <stringProp name="198">217.35704746873864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1038908576">
              <stringProp name="198">187.49180526890856</stringProp>
              <stringProp name="199">187.49180526890856</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1195504704">
              <stringProp name="199">171.8307636275343</stringProp>
              <stringProp name="200">171.8307636275343</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1274416800">
              <stringProp name="200">193.44057302415928</stringProp>
              <stringProp name="201">193.44057302415928</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-828244032">
              <stringProp name="201">230.590020638582</stringProp>
              <stringProp name="202">230.590020638582</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1153054400">
              <stringProp name="202">218.9352919752337</stringProp>
              <stringProp name="203">218.9352919752337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-399926016">
              <stringProp name="203">155.31989802112415</stringProp>
              <stringProp name="204">155.31989802112415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-877299040">
              <stringProp name="204">191.74092509408763</stringProp>
              <stringProp name="205">191.74092509408763</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-319003648">
              <stringProp name="205">167.58164380235525</stringProp>
              <stringProp name="206">167.58164380235525</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1003637824">
              <stringProp name="206">227.5549350491684</stringProp>
              <stringProp name="207">227.5549350491684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-965186048">
              <stringProp name="207">190.40548743474568</stringProp>
              <stringProp name="208">190.40548743474568</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-907243456">
              <stringProp name="208">208.25179070049776</stringProp>
              <stringProp name="209">208.25179070049776</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1590453161">
              <stringProp name="209">163.93954109505887</stringProp>
              <stringProp name="210">163.93954109505887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-49388416">
              <stringProp name="210">192.4693456355469</stringProp>
              <stringProp name="211">192.4693456355469</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1992743904">
              <stringProp name="211">168.67427461454415</stringProp>
              <stringProp name="212">168.67427461454415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="215702528">
              <stringProp name="212">182.1500546315406</stringProp>
              <stringProp name="213">182.1500546315406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-578338336">
              <stringProp name="213">202.7886366395532</stringProp>
              <stringProp name="214">202.7886366395532</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1183061888">
              <stringProp name="214">195.9900449192667</stringProp>
              <stringProp name="215">195.9900449192667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1924737984">
              <stringProp name="215">219.42090566953988</stringProp>
              <stringProp name="216">219.42090566953988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-434065984">
              <stringProp name="216">205.82372222896683</stringProp>
              <stringProp name="217">205.82372222896683</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1228465408">
              <stringProp name="217">240.18089110112905</stringProp>
              <stringProp name="218">240.18089110112905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-734568640">
              <stringProp name="218">209.2230180891101</stringProp>
              <stringProp name="219">209.2230180891101</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="389661303">
              <stringProp name="219">199.26793735583345</stringProp>
              <stringProp name="220">199.26793735583345</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1566604672">
              <stringProp name="220">202.4244263688236</stringProp>
              <stringProp name="221">202.4244263688236</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1891635232">
              <stringProp name="221">209.1016146655336</stringProp>
              <stringProp name="222">209.1016146655336</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-63397760">
              <stringProp name="222">170.61672939176887</stringProp>
              <stringProp name="223">170.61672939176887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="203992640">
              <stringProp name="223">185.3065436445308</stringProp>
              <stringProp name="224">185.3065436445308</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="687611296">
              <stringProp name="224">224.76265630690784</stringProp>
              <stringProp name="225">224.76265630690784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-838793152">
              <stringProp name="225">165.76059244870706</stringProp>
              <stringProp name="226">165.76059244870706</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-279217888">
              <stringProp name="226">161.87568289425764</stringProp>
              <stringProp name="227">161.87568289425764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-761381312">
              <stringProp name="227">157.62656306907851</stringProp>
              <stringProp name="228">157.62656306907851</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="661117152">
              <stringProp name="228">208.1303872769212</stringProp>
              <stringProp name="229">208.1303872769212</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2020981623">
              <stringProp name="229">207.4019667354619</stringProp>
              <stringProp name="230">207.4019667354619</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="403709856">
              <stringProp name="230">241.15211848974135</stringProp>
              <stringProp name="231">241.15211848974135</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1425716800">
              <stringProp name="231">191.49811824693455</stringProp>
              <stringProp name="232">191.49811824693455</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-56648960">
              <stringProp name="232">239.6952774068229</stringProp>
              <stringProp name="233">239.6952774068229</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1220426304">
              <stringProp name="233">162.48270001214033</stringProp>
              <stringProp name="234">162.48270001214033</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-223691296">
              <stringProp name="234">161.63287604710453</stringProp>
              <stringProp name="235">161.63287604710453</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1593559328">
              <stringProp name="235">195.62583464853705</stringProp>
              <stringProp name="236">195.62583464853705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2013289248">
              <stringProp name="236">186.27777103314315</stringProp>
              <stringProp name="237">186.27777103314315</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-539615328">
              <stringProp name="237">165.1535753308243</stringProp>
              <stringProp name="238">165.1535753308243</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1180639424">
              <stringProp name="238">195.9900449192667</stringProp>
              <stringProp name="239">195.9900449192667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-699228937">
              <stringProp name="239">187.24899842175543</stringProp>
              <stringProp name="240">187.24899842175543</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1481765344">
              <stringProp name="240">135.53113997814737</stringProp>
              <stringProp name="241">135.53113997814737</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-195508576">
              <stringProp name="241">220.8777467524584</stringProp>
              <stringProp name="242">220.8777467524584</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-849060480">
              <stringProp name="242">108.33677309700134</stringProp>
              <stringProp name="243">108.33677309700134</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1295962784">
              <stringProp name="243">173.5304115576059</stringProp>
              <stringProp name="244">173.5304115576059</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1995451648">
              <stringProp name="244">167.8244506495083</stringProp>
              <stringProp name="245">167.8244506495083</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="422850400">
              <stringProp name="245">229.13317955566347</stringProp>
              <stringProp name="246">229.13317955566347</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-946755936">
              <stringProp name="246">238.84545344178704</stringProp>
              <stringProp name="247">238.84545344178704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-878621472">
              <stringProp name="247">169.76690542673302</stringProp>
              <stringProp name="248">169.76690542673302</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1072742848">
              <stringProp name="248">137.47359475537206</stringProp>
              <stringProp name="249">137.47359475537206</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1846711945">
              <stringProp name="249">171.10234308607502</stringProp>
              <stringProp name="250">171.10234308607502</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-437015040">
              <stringProp name="250">172.31637732184046</stringProp>
              <stringProp name="251">172.31637732184046</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1349336416">
              <stringProp name="251">135.16692970741772</stringProp>
              <stringProp name="252">135.16692970741772</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="172149280">
              <stringProp name="252">33.55226417384971</stringProp>
              <stringProp name="253">33.55226417384971</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1925564064">
              <stringProp name="253">163.08971713002308</stringProp>
              <stringProp name="254">163.08971713002308</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1226466208">
              <stringProp name="254">100.688357411679</stringProp>
              <stringProp name="255">100.688357411679</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="797854208">
              <stringProp name="255">72.76556998907367</stringProp>
              <stringProp name="256">72.76556998907367</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1213193280">
              <stringProp name="256">104.33046011897532</stringProp>
              <stringProp name="257">104.33046011897532</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="276460672">
              <stringProp name="257">69.73048439966006</stringProp>
              <stringProp name="258">69.73048439966006</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-893777696">
              <stringProp name="258">151.43498846667475</stringProp>
              <stringProp name="259">151.43498846667475</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1884162679">
              <stringProp name="259">73.85820080126258</stringProp>
              <stringProp name="260">73.85820080126258</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-689437152">
              <stringProp name="260">131.2820201529683</stringProp>
              <stringProp name="261">131.2820201529683</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1388918720">
              <stringProp name="261">131.5248270001214</stringProp>
              <stringProp name="262">131.5248270001214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1141196608">
              <stringProp name="262">156.53393225688967</stringProp>
              <stringProp name="263">156.53393225688967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-568190496">
              <stringProp name="263">123.02658734976322</stringProp>
              <stringProp name="264">123.02658734976322</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="520009088">
              <stringProp name="264">197.68969284933837</stringProp>
              <stringProp name="265">197.68969284933837</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1285570368">
              <stringProp name="265">129.09675852859047</stringProp>
              <stringProp name="266">129.09675852859047</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1091838816">
              <stringProp name="266">44.47857229573873</stringProp>
              <stringProp name="267">44.47857229573873</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1546067840">
              <stringProp name="267">38.77261138764112</stringProp>
              <stringProp name="268">38.77261138764112</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="578230272">
              <stringProp name="268">157.7479664926551</stringProp>
              <stringProp name="269">157.7479664926551</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2130793431">
              <stringProp name="269">121.93395653757436</stringProp>
              <stringProp name="270">121.93395653757436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1766224384">
              <stringProp name="270">115.01396139371128</stringProp>
              <stringProp name="271">115.01396139371128</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="567283520">
              <stringProp name="271">94.37537938569866</stringProp>
              <stringProp name="272">94.37537938569866</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1735392480">
              <stringProp name="272">109.42940390919024</stringProp>
              <stringProp name="273">109.42940390919024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-661062816">
              <stringProp name="273">134.92412286026467</stringProp>
              <stringProp name="274">134.92412286026467</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="506942752">
              <stringProp name="274">183.60689571445917</stringProp>
              <stringProp name="275">183.60689571445917</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-147773024">
              <stringProp name="275">159.4476144227267</stringProp>
              <stringProp name="276">159.4476144227267</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-657835232">
              <stringProp name="276">103.11642588320989</stringProp>
              <stringProp name="277">103.11642588320989</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-696215008">
              <stringProp name="277">152.77042612601676</stringProp>
              <stringProp name="278">152.77042612601676</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-544569760">
              <stringProp name="278">136.62377079033627</stringProp>
              <stringProp name="279">136.62377079033627</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-892139593">
              <stringProp name="279">10.0</stringProp>
              <stringProp name="280">10.0</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-338621856">
              <stringProp name="280">39.01541823479421</stringProp>
              <stringProp name="281">39.01541823479421</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1269338080">
              <stringProp name="281">104.69467038970495</stringProp>
              <stringProp name="282">104.69467038970495</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-356514304">
              <stringProp name="282">140.99429403909193</stringProp>
              <stringProp name="283">140.99429403909193</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1623858912">
              <stringProp name="283">175.83707660556024</stringProp>
              <stringProp name="284">175.83707660556024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1810290528">
              <stringProp name="284">149.73534053660313</stringProp>
              <stringProp name="285">149.73534053660313</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1703461056">
              <stringProp name="285">150.58516450163896</stringProp>
              <stringProp name="286">150.58516450163896</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1133360480">
              <stringProp name="286">158.5977904576909</stringProp>
              <stringProp name="287">158.5977904576909</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1842258144">
              <stringProp name="287">171.10234308607502</stringProp>
              <stringProp name="288">171.10234308607502</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1836746848">
              <stringProp name="288">107.00133543765932</stringProp>
              <stringProp name="289">107.00133543765932</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-172237897">
              <stringProp name="289">134.68131601311157</stringProp>
              <stringProp name="290">134.68131601311157</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1266118080">
              <stringProp name="290">93.4041519970863</stringProp>
              <stringProp name="291">93.4041519970863</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1304910176">
              <stringProp name="291">159.32621099915016</stringProp>
              <stringProp name="292">159.32621099915016</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-730213408">
              <stringProp name="292">243.3373801141192</stringProp>
              <stringProp name="293">243.3373801141192</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1915708800">
              <stringProp name="293">219.42090566953988</stringProp>
              <stringProp name="294">219.42090566953988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-817893504">
              <stringProp name="294">230.590020638582</stringProp>
              <stringProp name="295">230.590020638582</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-367008032">
              <stringProp name="295">168.3100643438145</stringProp>
              <stringProp name="296">168.3100643438145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-944030272">
              <stringProp name="296">227.3121282020153</stringProp>
              <stringProp name="297">227.3121282020153</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1883509248">
              <stringProp name="297">213.1079276435596</stringProp>
              <stringProp name="298">213.1079276435596</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1844290624">
              <stringProp name="298">172.437780745417</stringProp>
              <stringProp name="299">172.437780745417</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="169098528">
              <stringProp name="299">128.61114483428432</stringProp>
              <stringProp name="300">128.61114483428432</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-540899808">
              <stringProp name="300">117.80624013597183</stringProp>
              <stringProp name="301">117.80624013597183</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="287206944">
              <stringProp name="301">149.00691999514387</stringProp>
              <stringProp name="302">149.00691999514387</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-152765600">
              <stringProp name="302">211.04406944275829</stringProp>
              <stringProp name="303">211.04406944275829</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1289320000">
              <stringProp name="303">203.15284691028285</stringProp>
              <stringProp name="304">203.15284691028285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="86837664">
              <stringProp name="304">178.1437416535146</stringProp>
              <stringProp name="305">178.1437416535146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="534287232">
              <stringProp name="305">183.60689571445917</stringProp>
              <stringProp name="306">183.60689571445917</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="189748512">
              <stringProp name="306">75.67925215491074</stringProp>
              <stringProp name="307">75.67925215491074</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1981915008">
              <stringProp name="307">178.50795192424422</stringProp>
              <stringProp name="308">178.50795192424422</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-924858944">
              <stringProp name="308">101.41677795313826</stringProp>
              <stringProp name="309">101.41677795313826</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-708410793">
              <stringProp name="309">173.40900813402936</stringProp>
              <stringProp name="310">173.40900813402936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1247143520">
              <stringProp name="310">195.74723807211365</stringProp>
              <stringProp name="311">195.74723807211365</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1605970880">
              <stringProp name="311">232.65387883938325</stringProp>
              <stringProp name="312">232.65387883938325</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-915653216">
              <stringProp name="312">211.1654728663348</stringProp>
              <stringProp name="313">211.1654728663348</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2051369120">
              <stringProp name="313">174.13742867548865</stringProp>
              <stringProp name="314">174.13742867548865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1481644480">
              <stringProp name="314">177.65812795920843</stringProp>
              <stringProp name="315">177.65812795920843</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-235619712">
              <stringProp name="315">203.63846060458903</stringProp>
              <stringProp name="316">203.63846060458903</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1866638208">
              <stringProp name="316">171.22374650965156</stringProp>
              <stringProp name="317">171.22374650965156</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1387049312">
              <stringProp name="317">159.5690178463033</stringProp>
              <stringProp name="318">159.5690178463033</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-190547584">
              <stringProp name="318">161.63287604710453</stringProp>
              <stringProp name="319">161.63287604710453</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="96880471">
              <stringProp name="319">173.04479786329975</stringProp>
              <stringProp name="320">173.04479786329975</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-923303232">
              <stringProp name="320">230.71142406215856</stringProp>
              <stringProp name="321">230.71142406215856</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1105098400">
              <stringProp name="321">158.5977904576909</stringProp>
              <stringProp name="322">158.5977904576909</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1985883008">
              <stringProp name="322">198.78232366152727</stringProp>
              <stringProp name="323">198.78232366152727</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2136085632">
              <stringProp name="323">211.52968313706444</stringProp>
              <stringProp name="324">211.52968313706444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="846890336">
              <stringProp name="324">195.1402209542309</stringProp>
              <stringProp name="325">195.1402209542309</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-473441984">
              <stringProp name="325">239.5738739832463</stringProp>
              <stringProp name="326">239.5738739832463</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1658077600">
              <stringProp name="326">255.7205293189268</stringProp>
              <stringProp name="327">255.7205293189268</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-839640736">
              <stringProp name="327">191.74092509408763</stringProp>
              <stringProp name="328">191.74092509408763</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-456551904">
              <stringProp name="328">183.48549229088263</stringProp>
              <stringProp name="329">183.48549229088263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1681098807">
              <stringProp name="329">187.97741896321477</stringProp>
              <stringProp name="330">187.97741896321477</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-651580416">
              <stringProp name="330">176.32269029986648</stringProp>
              <stringProp name="331">176.32269029986648</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-11803520">
              <stringProp name="331">192.4693456355469</stringProp>
              <stringProp name="332">192.4693456355469</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1669753504">
              <stringProp name="332">192.7121524827</stringProp>
              <stringProp name="333">192.7121524827</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-509311168">
              <stringProp name="333">173.89462182833554</stringProp>
              <stringProp name="334">173.89462182833554</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1434073504">
              <stringProp name="334">316.7864513779288</stringProp>
              <stringProp name="335">316.7864513779288</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-212904992">
              <stringProp name="335">293.4769940512322</stringProp>
              <stringProp name="336">293.4769940512322</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-177753376">
              <stringProp name="336">314.2369794828214</stringProp>
              <stringProp name="337">314.2369794828214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="912508928">
              <stringProp name="337">328.5625834648537</stringProp>
              <stringProp name="338">328.5625834648537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="26774208">
              <stringProp name="338">295.9050625227631</stringProp>
              <stringProp name="339">295.9050625227631</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1603418263">
              <stringProp name="339">272.1099915017604</stringProp>
              <stringProp name="340">272.1099915017604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-901191072">
              <stringProp name="340">375.7885152361296</stringProp>
              <stringProp name="341">375.7885152361296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2019057024">
              <stringProp name="341">279.2727934927765</stringProp>
              <stringProp name="342">279.2727934927765</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="417251584">
              <stringProp name="342">285.2215612480272</stringProp>
              <stringProp name="343">285.2215612480272</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-57736288">
              <stringProp name="343">218.0854680101979</stringProp>
              <stringProp name="344">218.0854680101979</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-764228224">
              <stringProp name="344">260.3338594148355</stringProp>
              <stringProp name="345">260.3338594148355</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1249346176">
              <stringProp name="345">300.51839261867184</stringProp>
              <stringProp name="346">300.51839261867184</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-152842464">
              <stringProp name="346">363.89097972562826</stringProp>
              <stringProp name="347">363.89097972562826</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="84757792">
              <stringProp name="347">457.857229573874</stringProp>
              <stringProp name="348">457.857229573874</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-306717440">
              <stringProp name="348">391.8137671482335</stringProp>
              <stringProp name="349">391.8137671482335</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="345227095">
              <stringProp name="349">386.35061308728905</stringProp>
              <stringProp name="350">386.35061308728905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-431939200">
              <stringProp name="350">366.92606531504185</stringProp>
              <stringProp name="351">366.92606531504185</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1445245280">
              <stringProp name="351">425.0783052082068</stringProp>
              <stringProp name="352">425.0783052082068</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2039004192">
              <stringProp name="352">366.8046618914654</stringProp>
              <stringProp name="353">366.8046618914654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="372910048">
              <stringProp name="353">250.25737525798223</stringProp>
              <stringProp name="354">250.25737525798223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-564260832">
              <stringProp name="354">242.48755614908345</stringProp>
              <stringProp name="355">242.48755614908345</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-485717504">
              <stringProp name="355">187.37040184533203</stringProp>
              <stringProp name="356">187.37040184533203</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-863217984">
              <stringProp name="356">300.8826028894015</stringProp>
              <stringProp name="357">300.8826028894015</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="241774176">
              <stringProp name="357">370.9323782930679</stringProp>
              <stringProp name="358">370.9323782930679</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2018377056">
              <stringProp name="358">267.86087167658127</stringProp>
              <stringProp name="359">267.86087167658127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1765956809">
              <stringProp name="359">302.70365424304964</stringProp>
              <stringProp name="360">302.70365424304964</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-394953472">
              <stringProp name="360">310.47347335194854</stringProp>
              <stringProp name="361">310.47347335194854</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="87964736">
              <stringProp name="361">368.0186961272308</stringProp>
              <stringProp name="362">368.0186961272308</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="982879456">
              <stringProp name="362">359.03484278256644</stringProp>
              <stringProp name="363">359.03484278256644</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-923273024">
              <stringProp name="363">398.7337622920966</stringProp>
              <stringProp name="364">398.7337622920966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="137183616">
              <stringProp name="364">226.94791793128564</stringProp>
              <stringProp name="365">226.94791793128564</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1436058528">
              <stringProp name="365">395.09165958480025</stringProp>
              <stringProp name="366">395.09165958480025</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-757892384">
              <stringProp name="366">502.5336894500424</stringProp>
              <stringProp name="367">502.5336894500424</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1989726720">
              <stringProp name="367">533.370159038485</stringProp>
              <stringProp name="368">533.370159038485</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1285986208">
              <stringProp name="368">381.4944761442272</stringProp>
              <stringProp name="369">381.4944761442272</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="716833399">
              <stringProp name="369">299.18295495932983</stringProp>
              <stringProp name="370">299.18295495932983</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1769821632">
              <stringProp name="370">377.0025494718951</stringProp>
              <stringProp name="371">377.0025494718951</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1773561216">
              <stringProp name="371">263.9759621221318</stringProp>
              <stringProp name="372">263.9759621221318</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-337738112">
              <stringProp name="372">408.9316498725264</stringProp>
              <stringProp name="373">408.9316498725264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2120969664">
              <stringProp name="373">376.51693577758886</stringProp>
              <stringProp name="374">376.51693577758886</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1789707840">
              <stringProp name="374">352.47905790943304</stringProp>
              <stringProp name="375">352.47905790943304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-825982240">
              <stringProp name="375">477.03897049896807</stringProp>
              <stringProp name="376">477.03897049896807</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="410370624">
              <stringProp name="376">339.1246813160131</stringProp>
              <stringProp name="377">339.1246813160131</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1731380096">
              <stringProp name="377">291.04892557970135</stringProp>
              <stringProp name="378">291.04892557970135</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-751763008">
              <stringProp name="378">431.14847638703407</stringProp>
              <stringProp name="379">431.14847638703407</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-685058953">
              <stringProp name="379">436.3688236008256</stringProp>
              <stringProp name="380">436.3688236008256</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1614583520">
              <stringProp name="380">277.4517421391283</stringProp>
              <stringProp name="381">277.4517421391283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1289420384">
              <stringProp name="381">265.67561005220347</stringProp>
              <stringProp name="382">265.67561005220347</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1933033504">
              <stringProp name="382">300.2755857715188</stringProp>
              <stringProp name="383">300.2755857715188</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1014891904">
              <stringProp name="383">395.9414835498361</stringProp>
              <stringProp name="384">395.9414835498361</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1361902144">
              <stringProp name="384">370.3253611751852</stringProp>
              <stringProp name="385">370.3253611751852</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1243229024">
              <stringProp name="385">442.3175913560762</stringProp>
              <stringProp name="386">442.3175913560762</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1604690272">
              <stringProp name="386">407.4748087896079</stringProp>
              <stringProp name="387">407.4748087896079</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-4972352">
              <stringProp name="387">333.7829306786452</stringProp>
              <stringProp name="388">333.7829306786452</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1824718624">
              <stringProp name="388">439.1611023430861</stringProp>
              <stringProp name="389">439.1611023430861</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1573947401">
              <stringProp name="389">545.1462911254097</stringProp>
              <stringProp name="390">545.1462911254097</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1981005504">
              <stringProp name="390">440.3751365788515</stringProp>
              <stringProp name="391">440.3751365788515</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1742074848">
              <stringProp name="391">359.8846667476023</stringProp>
              <stringProp name="392">359.8846667476023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1940875520">
              <stringProp name="392">463.1989802112419</stringProp>
              <stringProp name="393">463.1989802112419</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-4835680">
              <stringProp name="393">429.4488284569625</stringProp>
              <stringProp name="394">429.4488284569625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1498015936">
              <stringProp name="394">438.4326818016268</stringProp>
              <stringProp name="395">438.4326818016268</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-721138336">
              <stringProp name="395">441.9533810853466</stringProp>
              <stringProp name="396">441.9533810853466</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="77731808">
              <stringProp name="396">276.84472502124555</stringProp>
              <stringProp name="397">276.84472502124555</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1308722944">
              <stringProp name="397">330.2622313949253</stringProp>
              <stringProp name="398">330.2622313949253</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1117563136">
              <stringProp name="398">399.3407794099793</stringProp>
              <stringProp name="399">399.3407794099793</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="220471424">
              <stringProp name="399">368.74711666869</stringProp>
              <stringProp name="400">368.74711666869</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="238879232">
              <stringProp name="400">302.8250576666262</stringProp>
              <stringProp name="401">302.8250576666262</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1154733472">
              <stringProp name="401">376.0313220832828</stringProp>
              <stringProp name="402">376.0313220832828</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-408291552">
              <stringProp name="402">423.5000607017118</stringProp>
              <stringProp name="403">423.5000607017118</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1150952480">
              <stringProp name="403">380.0376350613087</stringProp>
              <stringProp name="404">380.0376350613087</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1798905824">
              <stringProp name="404">325.77030472259315</stringProp>
              <stringProp name="405">325.77030472259315</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-782034752">
              <stringProp name="405">295.7836590991866</stringProp>
              <stringProp name="406">295.7836590991866</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1248253952">
              <stringProp name="406">205.0953016875076</stringProp>
              <stringProp name="407">205.0953016875076</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1334815808">
              <stringProp name="407">240.5451013718587</stringProp>
              <stringProp name="408">240.5451013718587</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1779537600">
              <stringProp name="408">274.53805997329124</stringProp>
              <stringProp name="409">274.53805997329124</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-989637001">
              <stringProp name="409">376.6383392011655</stringProp>
              <stringProp name="410">376.6383392011655</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2123749152">
              <stringProp name="410">275.7520942090567</stringProp>
              <stringProp name="411">275.7520942090567</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-611421184">
              <stringProp name="411">361.2201044069442</stringProp>
              <stringProp name="412">361.2201044069442</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2047018272">
              <stringProp name="412">318.36469588442395</stringProp>
              <stringProp name="413">318.36469588442395</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1096177920">
              <stringProp name="413">270.8959572659949</stringProp>
              <stringProp name="414">270.8959572659949</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-457887008">
              <stringProp name="414">244.06580065557847</stringProp>
              <stringProp name="415">244.06580065557847</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1904113152">
              <stringProp name="415">249.89316498725265</stringProp>
              <stringProp name="416">249.89316498725265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="218061824">
              <stringProp name="416">237.3886123588685</stringProp>
              <stringProp name="417">237.3886123588685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1839014656">
              <stringProp name="417">217.1142406215855</stringProp>
              <stringProp name="418">217.1142406215855</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1229274560">
              <stringProp name="418">213.59354133786573</stringProp>
              <stringProp name="419">213.59354133786573</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="376797847">
              <stringProp name="419">238.23843632390435</stringProp>
              <stringProp name="420">238.23843632390435</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1767703456">
              <stringProp name="420">221.36336044676457</stringProp>
              <stringProp name="421">221.36336044676457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2069218560">
              <stringProp name="421">188.9486463518271</stringProp>
              <stringProp name="422">188.9486463518271</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1021896544">
              <stringProp name="422">172.6805875925701</stringProp>
              <stringProp name="423">172.6805875925701</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1794355584">
              <stringProp name="423">312.2945247055967</stringProp>
              <stringProp name="424">312.2945247055967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1189124288">
              <stringProp name="424">278.66577637489377</stringProp>
              <stringProp name="425">278.66577637489377</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-118778368">
              <stringProp name="425">227.1907247784388</stringProp>
              <stringProp name="426">227.1907247784388</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="700251136">
              <stringProp name="426">170.85953623892192</stringProp>
              <stringProp name="427">170.85953623892192</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="115318560">
              <stringProp name="427">188.22022581036785</stringProp>
              <stringProp name="428">188.22022581036785</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-165909152">
              <stringProp name="428">179.72198616000972</stringProp>
              <stringProp name="429">179.72198616000972</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="591083095">
              <stringProp name="429">216.5072235037028</stringProp>
              <stringProp name="430">216.5072235037028</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1863875136">
              <stringProp name="430">166.2462061430132</stringProp>
              <stringProp name="431">166.2462061430132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1471917504">
              <stringProp name="431">204.73109141677796</stringProp>
              <stringProp name="432">204.73109141677796</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1976175872">
              <stringProp name="432">219.5423090931164</stringProp>
              <stringProp name="433">219.5423090931164</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2056934560">
              <stringProp name="433">187.73461211606167</stringProp>
              <stringProp name="434">187.73461211606167</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1410642880">
              <stringProp name="434">211.4082797134879</stringProp>
              <stringProp name="435">211.4082797134879</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="915229760">
              <stringProp name="435">255.84193274250333</stringProp>
              <stringProp name="436">255.84193274250333</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1514259648">
              <stringProp name="436">179.47917931285662</stringProp>
              <stringProp name="437">179.47917931285662</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1662269280">
              <stringProp name="437">210.43705232487557</stringProp>
              <stringProp name="438">210.43705232487557</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="96959136">
              <stringProp name="438">202.6672332159767</stringProp>
              <stringProp name="439">202.6672332159767</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="839703223">
              <stringProp name="439">184.82092995022455</stringProp>
              <stringProp name="440">184.82092995022455</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1276175808">
              <stringProp name="440">164.42515478936502</stringProp>
              <stringProp name="441">164.42515478936502</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1816855264">
              <stringProp name="441">166.00339929586016</stringProp>
              <stringProp name="442">166.00339929586016</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-908171168">
              <stringProp name="442">170.73813281534538</stringProp>
              <stringProp name="443">170.73813281534538</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1321212448">
              <stringProp name="443">106.63712516692968</stringProp>
              <stringProp name="444">106.63712516692968</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="345801760">
              <stringProp name="444">200.23916474444584</stringProp>
              <stringProp name="445">200.23916474444584</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="801293728">
              <stringProp name="445">212.86512079640647</stringProp>
              <stringProp name="446">212.86512079640647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="189351168">
              <stringProp name="446">213.2293310671361</stringProp>
              <stringProp name="447">213.2293310671361</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="390845824">
              <stringProp name="447">162.96831370644654</stringProp>
              <stringProp name="448">162.96831370644654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-419003712">
              <stringProp name="448">183.48549229088263</stringProp>
              <stringProp name="449">183.48549229088263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-94307049">
              <stringProp name="449">155.07709117397113</stringProp>
              <stringProp name="450">155.07709117397113</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1466521280">
              <stringProp name="450">199.7535510501396</stringProp>
              <stringProp name="451">199.7535510501396</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1069327872">
              <stringProp name="451">165.2749787544009</stringProp>
              <stringProp name="452">165.2749787544009</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1946777184">
              <stringProp name="452">174.5016389462183</stringProp>
              <stringProp name="453">174.5016389462183</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1987889824">
              <stringProp name="453">216.38582008012625</stringProp>
              <stringProp name="454">216.38582008012625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-112400832">
              <stringProp name="454">199.51074420298653</stringProp>
              <stringProp name="455">199.51074420298653</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-870052928">
              <stringProp name="455">121.69114969042126</stringProp>
              <stringProp name="456">121.69114969042126</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1588580832">
              <stringProp name="456">192.22653878839384</stringProp>
              <stringProp name="457">192.22653878839384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="594399072">
              <stringProp name="457">216.5072235037028</stringProp>
              <stringProp name="458">216.5072235037028</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1043920096">
              <stringProp name="458">199.9963578972927</stringProp>
              <stringProp name="459">199.9963578972927</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-103348809">
              <stringProp name="459">249.40755129294644</stringProp>
              <stringProp name="460">249.40755129294644</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1511195808">
              <stringProp name="460">209.83003520699285</stringProp>
              <stringProp name="461">209.83003520699285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1020658432">
              <stringProp name="461">185.6707539152604</stringProp>
              <stringProp name="462">185.6707539152604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1117701440">
              <stringProp name="462">180.2075998543159</stringProp>
              <stringProp name="463">180.2075998543159</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1501122208">
              <stringProp name="463">189.19145319898024</stringProp>
              <stringProp name="464">189.19145319898024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-52500384">
              <stringProp name="464">146.4574481000364</stringProp>
              <stringProp name="465">146.4574481000364</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-648657088">
              <stringProp name="465">119.1416777953138</stringProp>
              <stringProp name="466">119.1416777953138</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1031435680">
              <stringProp name="466">138.93043583829063</stringProp>
              <stringProp name="467">138.93043583829063</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="304348800">
              <stringProp name="467">197.93249969649145</stringProp>
              <stringProp name="468">197.93249969649145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="783432096">
              <stringProp name="468">203.39565375743595</stringProp>
              <stringProp name="469">203.39565375743595</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1708720535">
              <stringProp name="469">192.7121524827</stringProp>
              <stringProp name="470">192.7121524827</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1639280896">
              <stringProp name="470">139.78025980332643</stringProp>
              <stringProp name="471">139.78025980332643</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1648070368">
              <stringProp name="471">232.65387883938325</stringProp>
              <stringProp name="472">232.65387883938325</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1867758560">
              <stringProp name="472">207.8875804297681</stringProp>
              <stringProp name="473">207.8875804297681</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1513239776">
              <stringProp name="473">236.29598154667963</stringProp>
              <stringProp name="474">236.29598154667963</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1729542112">
              <stringProp name="474">178.87216219497387</stringProp>
              <stringProp name="475">178.87216219497387</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1754224544">
              <stringProp name="475">168.79567803812068</stringProp>
              <stringProp name="476">168.79567803812068</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1315782272">
              <stringProp name="476">201.57460240378776</stringProp>
              <stringProp name="477">201.57460240378776</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-183701312">
              <stringProp name="477">208.3731941240743</stringProp>
              <stringProp name="478">208.3731941240743</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2127711776">
              <stringProp name="478">222.4559912589535</stringProp>
              <stringProp name="479">222.4559912589535</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-443262537">
              <stringProp name="479">174.0160252519121</stringProp>
              <stringProp name="480">174.0160252519121</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-571443424">
              <stringProp name="480">197.44688600218524</stringProp>
              <stringProp name="481">197.44688600218524</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1100608576">
              <stringProp name="481">165.51778560155395</stringProp>
              <stringProp name="482">165.51778560155395</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1684385632">
              <stringProp name="482">163.45392740075272</stringProp>
              <stringProp name="483">163.45392740075272</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1015032896">
              <stringProp name="483">172.6805875925701</stringProp>
              <stringProp name="484">172.6805875925701</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2136092352">
              <stringProp name="484">153.01323297316983</stringProp>
              <stringProp name="485">153.01323297316983</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="122752320">
              <stringProp name="485">133.46728177734613</stringProp>
              <stringProp name="486">133.46728177734613</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-617600960">
              <stringProp name="486">193.19776617700617</stringProp>
              <stringProp name="487">193.19776617700617</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="498412224">
              <stringProp name="487">216.7500303508559</stringProp>
              <stringProp name="488">216.7500303508559</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1927999008">
              <stringProp name="488">164.30375136578851</stringProp>
              <stringProp name="489">164.30375136578851</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1290735255">
              <stringProp name="489">195.74723807211365</stringProp>
              <stringProp name="490">195.74723807211365</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1321103840">
              <stringProp name="490">165.63918902513052</stringProp>
              <stringProp name="491">165.63918902513052</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1988950336">
              <stringProp name="491">297.60471045283475</stringProp>
              <stringProp name="492">297.60471045283475</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-146392672">
              <stringProp name="492">161.63287604710453</stringProp>
              <stringProp name="493">161.63287604710453</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1144542688">
              <stringProp name="493">187.49180526890856</stringProp>
              <stringProp name="494">187.49180526890856</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1756463488">
              <stringProp name="494">168.79567803812068</stringProp>
              <stringProp name="495">168.79567803812068</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-946195264">
              <stringProp name="495">147.91428918295497</stringProp>
              <stringProp name="496">147.91428918295497</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1673137056">
              <stringProp name="496">138.32341872040794</stringProp>
              <stringProp name="497">138.32341872040794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1845513728">
              <stringProp name="497">196.35425518999637</stringProp>
              <stringProp name="498">196.35425518999637</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1946694432">
              <stringProp name="498">38.408401116911485</stringProp>
              <stringProp name="499">38.408401116911485</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2077150784">
              <stringProp name="499">29.06033750151753</stringProp>
              <stringProp name="500">29.06033750151753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1562010784">
              <stringProp name="500">140.5086803447857</stringProp>
              <stringProp name="501">140.5086803447857</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="746571168">
              <stringProp name="501">169.28129173242684</stringProp>
              <stringProp name="502">169.28129173242684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1784902912">
              <stringProp name="502">178.75075877139736</stringProp>
              <stringProp name="503">178.75075877139736</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="332647584">
              <stringProp name="503">197.93249969649145</stringProp>
              <stringProp name="504">197.93249969649145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1542073696">
              <stringProp name="504">117.32062644166562</stringProp>
              <stringProp name="505">117.32062644166562</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-268953984">
              <stringProp name="505">131.1606167293918</stringProp>
              <stringProp name="506">131.1606167293918</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-588954144">
              <stringProp name="506">143.5437659341993</stringProp>
              <stringProp name="507">143.5437659341993</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="15932896">
              <stringProp name="507">107.1227388612359</stringProp>
              <stringProp name="508">107.1227388612359</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1112991360">
              <stringProp name="508">104.33046011897532</stringProp>
              <stringProp name="509">104.33046011897532</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="945758871">
              <stringProp name="509">157.26235279834893</stringProp>
              <stringProp name="510">157.26235279834893</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="730471296">
              <stringProp name="510">73.25118368337986</stringProp>
              <stringProp name="511">73.25118368337986</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1081842176">
              <stringProp name="511">170.25251912103923</stringProp>
              <stringProp name="512">170.25251912103923</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-436256864">
              <stringProp name="512">165.1535753308243</stringProp>
              <stringProp name="513">165.1535753308243</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="458914528">
              <stringProp name="513">34.52349156246206</stringProp>
              <stringProp name="514">34.52349156246206</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1577088">
              <stringProp name="514">10.60701711788272</stringProp>
              <stringProp name="515">10.60701711788272</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-287197408">
              <stringProp name="515">127.15430375136576</stringProp>
              <stringProp name="516">127.15430375136576</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2092002784">
              <stringProp name="516">66.5739953866699</stringProp>
              <stringProp name="517">66.5739953866699</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1402977920">
              <stringProp name="517">26.02525191210391</stringProp>
              <stringProp name="518">26.02525191210391</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1909673856">
              <stringProp name="518">186.27777103314315</stringProp>
              <stringProp name="519">186.27777103314315</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2083401929">
              <stringProp name="519">132.86026465946338</stringProp>
              <stringProp name="520">132.86026465946338</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1537446048">
              <stringProp name="520">158.11217676338472</stringProp>
              <stringProp name="521">158.11217676338472</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="152350752">
              <stringProp name="521">188.5844360810975</stringProp>
              <stringProp name="522">188.5844360810975</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="144331168">
              <stringProp name="522">140.87289061551533</stringProp>
              <stringProp name="523">140.87289061551533</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="395786560">
              <stringProp name="523">177.17251426490228</stringProp>
              <stringProp name="524">177.17251426490228</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1268705472">
              <stringProp name="524">142.57253854558698</stringProp>
              <stringProp name="525">142.57253854558698</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1539761344">
              <stringProp name="525">117.32062644166562</stringProp>
              <stringProp name="526">117.32062644166562</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="374757120">
              <stringProp name="526">151.7991987374044</stringProp>
              <stringProp name="527">151.7991987374044</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-635687552">
              <stringProp name="527">173.40900813402936</stringProp>
              <stringProp name="528">173.40900813402936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1579578848">
              <stringProp name="528">114.77115454655822</stringProp>
              <stringProp name="529">114.77115454655822</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="20667959">
              <stringProp name="529">95.10379992715794</stringProp>
              <stringProp name="530">95.10379992715794</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1340762848">
              <stringProp name="530">47.14944761442271</stringProp>
              <stringProp name="531">47.14944761442271</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1172948864">
              <stringProp name="531">65.96697826878716</stringProp>
              <stringProp name="532">65.96697826878716</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-496064800">
              <stringProp name="532">242.48755614908345</stringProp>
              <stringProp name="533">242.48755614908345</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-510730752">
              <stringProp name="533">139.29464610902025</stringProp>
              <stringProp name="534">139.29464610902025</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="203567360">
              <stringProp name="534">186.7633847274493</stringProp>
              <stringProp name="535">186.7633847274493</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1591520032">
              <stringProp name="535">170.98093966249849</stringProp>
              <stringProp name="536">170.98093966249849</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2075362144">
              <stringProp name="536">193.8047832948889</stringProp>
              <stringProp name="537">193.8047832948889</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-480649408">
              <stringProp name="537">214.32196187932504</stringProp>
              <stringProp name="538">214.32196187932504</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1794151360">
              <stringProp name="538">238.7240500182105</stringProp>
              <stringProp name="539">238.7240500182105</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1130187305">
              <stringProp name="539">223.3058152239893</stringProp>
              <stringProp name="540">223.3058152239893</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-124792672">
              <stringProp name="540">195.26162437780744</stringProp>
              <stringProp name="541">195.26162437780744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1768619360">
              <stringProp name="541">160.66164865849214</stringProp>
              <stringProp name="542">160.66164865849214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2012125152">
              <stringProp name="542">182.3928614786937</stringProp>
              <stringProp name="543">182.3928614786937</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1928714720">
              <stringProp name="543">189.31285662255675</stringProp>
              <stringProp name="544">189.31285662255675</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="897065984">
              <stringProp name="544">233.3822993808425</stringProp>
              <stringProp name="545">233.3822993808425</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-416310240">
              <stringProp name="545">187.37040184533203</stringProp>
              <stringProp name="546">187.37040184533203</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-361099648">
              <stringProp name="546">198.2967099672211</stringProp>
              <stringProp name="547">198.2967099672211</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="628533792">
              <stringProp name="547">216.5072235037028</stringProp>
              <stringProp name="548">216.5072235037028</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="60136320">
              <stringProp name="548">192.4693456355469</stringProp>
              <stringProp name="549">192.4693456355469</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="540400439">
              <stringProp name="549">212.6223139492533</stringProp>
              <stringProp name="550">212.6223139492533</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-502108128">
              <stringProp name="550">232.53247541580677</stringProp>
              <stringProp name="551">232.53247541580677</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1429343136">
              <stringProp name="551">228.6475658613573</stringProp>
              <stringProp name="552">228.6475658613573</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="952667840">
              <stringProp name="552">255.84193274250333</stringProp>
              <stringProp name="553">255.84193274250333</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="432726848">
              <stringProp name="553">222.6987981061066</stringProp>
              <stringProp name="554">222.6987981061066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="371286656">
              <stringProp name="554">196.4756586135729</stringProp>
              <stringProp name="555">196.4756586135729</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1056762880">
              <stringProp name="555">206.06652907611996</stringProp>
              <stringProp name="556">206.06652907611996</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1072619552">
              <stringProp name="556">195.9900449192667</stringProp>
              <stringProp name="557">195.9900449192667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="122323424">
              <stringProp name="557">168.55287119096758</stringProp>
              <stringProp name="558">168.55287119096758</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="679606240">
              <stringProp name="558">182.27145805511717</stringProp>
              <stringProp name="559">182.27145805511717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-642471881">
              <stringProp name="559">235.20335073449075</stringProp>
              <stringProp name="560">235.20335073449075</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1887305984">
              <stringProp name="560">245.522641738497</stringProp>
              <stringProp name="561">245.522641738497</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1006795936">
              <stringProp name="561">261.66929707417745</stringProp>
              <stringProp name="562">261.66929707417745</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1035378976">
              <stringProp name="562">156.53393225688967</stringProp>
              <stringProp name="563">156.53393225688967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="680616128">
              <stringProp name="563">238.4812431710574</stringProp>
              <stringProp name="564">238.4812431710574</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="767036480">
              <stringProp name="564">248.0721136336045</stringProp>
              <stringProp name="565">248.0721136336045</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2029593184">
              <stringProp name="565">224.2770426126017</stringProp>
              <stringProp name="566">224.2770426126017</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1246943424">
              <stringProp name="566">182.9998785965764</stringProp>
              <stringProp name="567">182.9998785965764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1037466720">
              <stringProp name="567">120.59851887823235</stringProp>
              <stringProp name="568">120.59851887823235</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-856023648">
              <stringProp name="568">204.48828456962488</stringProp>
              <stringProp name="569">204.48828456962488</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1058532425">
              <stringProp name="569">215.53599611509048</stringProp>
              <stringProp name="570">215.53599611509048</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1568159392">
              <stringProp name="570">276.72332159766904</stringProp>
              <stringProp name="571">276.72332159766904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="402806496">
              <stringProp name="571">271.01736068957143</stringProp>
              <stringProp name="572">271.01736068957143</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-561540000">
              <stringProp name="572">209.95143863056936</stringProp>
              <stringProp name="573">209.95143863056936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-450859232">
              <stringProp name="573">205.4595119582372</stringProp>
              <stringProp name="574">205.4595119582372</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1989153952">
              <stringProp name="574">250.864392375865</stringProp>
              <stringProp name="575">250.864392375865</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="54466464">
              <stringProp name="575">212.50091052567683</stringProp>
              <stringProp name="576">212.50091052567683</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1712520768">
              <stringProp name="576">210.80126259560515</stringProp>
              <stringProp name="577">210.80126259560515</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1842469184">
              <stringProp name="577">234.83914046376108</stringProp>
              <stringProp name="578">234.83914046376108</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-169163776">
              <stringProp name="578">264.34017239286146</stringProp>
              <stringProp name="579">264.34017239286146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-27454217">
              <stringProp name="579">307.681194609688</stringProp>
              <stringProp name="580">307.681194609688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-789479648">
              <stringProp name="580">300.8826028894015</stringProp>
              <stringProp name="581">300.8826028894015</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1935871328">
              <stringProp name="581">305.8601432560398</stringProp>
              <stringProp name="582">305.8601432560398</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2087764704">
              <stringProp name="582">301.12540973655456</stringProp>
              <stringProp name="583">301.12540973655456</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2008743552">
              <stringProp name="583">306.83137064465217</stringProp>
              <stringProp name="584">306.83137064465217</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1353682816">
              <stringProp name="584">374.088867306058</stringProp>
              <stringProp name="585">374.088867306058</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-802639840">
              <stringProp name="585">311.44470074056085</stringProp>
              <stringProp name="586">311.44470074056085</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1179866144">
              <stringProp name="586">303.0678645137793</stringProp>
              <stringProp name="587">303.0678645137793</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-979707808">
              <stringProp name="587">284.8573509772976</stringProp>
              <stringProp name="588">284.8573509772976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1147437472">
              <stringProp name="588">351.5078305208207</stringProp>
              <stringProp name="589">351.5078305208207</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1589787159">
              <stringProp name="589">252.07842661163045</stringProp>
              <stringProp name="590">252.07842661163045</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1275384960">
              <stringProp name="590">290.077698191089</stringProp>
              <stringProp name="591">290.077698191089</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1627956224">
              <stringProp name="591">385.8649993929829</stringProp>
              <stringProp name="592">385.8649993929829</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-629815968">
              <stringProp name="592">271.6243778074542</stringProp>
              <stringProp name="593">271.6243778074542</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1865036960">
              <stringProp name="593">202.54582979240016</stringProp>
              <stringProp name="594">202.54582979240016</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="701251040">
              <stringProp name="594">314.11557605924486</stringProp>
              <stringProp name="595">314.11557605924486</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1571493216">
              <stringProp name="595">412.2095423090931</stringProp>
              <stringProp name="596">412.2095423090931</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1992453440">
              <stringProp name="596">439.8895228845454</stringProp>
              <stringProp name="597">439.8895228845454</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="444629696">
              <stringProp name="597">319.09311642588324</stringProp>
              <stringProp name="598">319.09311642588324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="283964288">
              <stringProp name="598">247.3436930921452</stringProp>
              <stringProp name="599">247.3436930921452</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1174418368">
              <stringProp name="599">439.4039091902391</stringProp>
              <stringProp name="600">439.4039091902391</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1723222464">
              <stringProp name="600">479.3456355469224</stringProp>
              <stringProp name="601">479.3456355469224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="481733376">
              <stringProp name="601">537.7406822872406</stringProp>
              <stringProp name="602">537.7406822872406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1532278784">
              <stringProp name="602">436.247420177249</stringProp>
              <stringProp name="603">436.247420177249</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1473151168">
              <stringProp name="603">373.7246570353284</stringProp>
              <stringProp name="604">373.7246570353284</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1719099904">
              <stringProp name="604">440.6179434260046</stringProp>
              <stringProp name="605">440.6179434260046</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1684651904">
              <stringProp name="605">512.4887701833192</stringProp>
              <stringProp name="606">512.4887701833192</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="258375232">
              <stringProp name="606">479.8312492412286</stringProp>
              <stringProp name="607">479.8312492412286</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-498457248">
              <stringProp name="607">449.60179677066895</stringProp>
              <stringProp name="608">449.60179677066895</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-88184768">
              <stringProp name="608">398.61235886852006</stringProp>
              <stringProp name="609">398.61235886852006</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="567090359">
              <stringProp name="609">503.9905305329609</stringProp>
              <stringProp name="610">503.9905305329609</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1551944384">
              <stringProp name="610">436.7330338715552</stringProp>
              <stringProp name="611">436.7330338715552</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1869419232">
              <stringProp name="611">443.0460118975355</stringProp>
              <stringProp name="612">443.0460118975355</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1641822016">
              <stringProp name="612">460.1638946218283</stringProp>
              <stringProp name="613">460.1638946218283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="743522400">
              <stringProp name="613">504.5975476508437</stringProp>
              <stringProp name="614">504.5975476508437</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1515534432">
              <stringProp name="614">287.28541944882846</stringProp>
              <stringProp name="615">287.28541944882846</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-803693152">
              <stringProp name="615">266.2826271700862</stringProp>
              <stringProp name="616">266.2826271700862</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1096300928">
              <stringProp name="616">283.8861235886852</stringProp>
              <stringProp name="617">283.8861235886852</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1263939168">
              <stringProp name="617">370.3253611751852</stringProp>
              <stringProp name="618">370.3253611751852</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1722801728">
              <stringProp name="618">351.0222168265145</stringProp>
              <stringProp name="619">351.0222168265145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1148597271">
              <stringProp name="619">266.6468374408158</stringProp>
              <stringProp name="620">266.6468374408158</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2055115328">
              <stringProp name="620">328.4411800412772</stringProp>
              <stringProp name="621">328.4411800412772</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2134019424">
              <stringProp name="621">377.1239528954717</stringProp>
              <stringProp name="622">377.1239528954717</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="502470720">
              <stringProp name="622">320.79276435595483</stringProp>
              <stringProp name="623">320.79276435595483</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1756893664">
              <stringProp name="623">495.3708874590263</stringProp>
              <stringProp name="624">495.3708874590263</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-870879360">
              <stringProp name="624">484.6873861842904</stringProp>
              <stringProp name="625">484.6873861842904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1316900672">
              <stringProp name="625">385.98640281655946</stringProp>
              <stringProp name="626">385.98640281655946</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1006114272">
              <stringProp name="626">414.3948039334709</stringProp>
              <stringProp name="627">414.3948039334709</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-124385216">
              <stringProp name="627">323.46363967463884</stringProp>
              <stringProp name="628">323.46363967463884</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1694384000">
              <stringProp name="628">301.4896200072842</stringProp>
              <stringProp name="629">301.4896200072842</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="385560919">
              <stringProp name="629">316.6650479543523</stringProp>
              <stringProp name="630">316.6650479543523</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="818139488">
              <stringProp name="630">316.4222411071992</stringProp>
              <stringProp name="631">316.4222411071992</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1177288544">
              <stringProp name="631">317.63627534296467</stringProp>
              <stringProp name="632">317.63627534296467</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1977523072">
              <stringProp name="632">356.9709845817652</stringProp>
              <stringProp name="633">356.9709845817652</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1560639968">
              <stringProp name="633">337.1822265387884</stringProp>
              <stringProp name="634">337.1822265387884</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="285982336">
              <stringProp name="634">280.3654243049654</stringProp>
              <stringProp name="635">280.3654243049654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1359058112">
              <stringProp name="635">254.6278985067379</stringProp>
              <stringProp name="636">254.6278985067379</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="565539424">
              <stringProp name="636">335.8467888794464</stringProp>
              <stringProp name="637">335.8467888794464</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1501696672">
              <stringProp name="637">563.7210149326211</stringProp>
              <stringProp name="638">563.7210149326211</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-92821824">
              <stringProp name="638">441.1035571203108</stringProp>
              <stringProp name="639">441.1035571203108</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1323643767">
              <stringProp name="639">348.22993808425394</stringProp>
              <stringProp name="640">348.22993808425394</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="784852480">
              <stringProp name="640">337.6678402330945</stringProp>
              <stringProp name="641">337.6678402330945</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="135009760">
              <stringProp name="641">293.84120432196187</stringProp>
              <stringProp name="642">293.84120432196187</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-584977472">
              <stringProp name="642">274.1738497025616</stringProp>
              <stringProp name="643">274.1738497025616</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="289864224">
              <stringProp name="643">279.5156003399296</stringProp>
              <stringProp name="644">279.5156003399296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-23956960">
              <stringProp name="644">299.0615515357533</stringProp>
              <stringProp name="645">299.0615515357533</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-725549344">
              <stringProp name="645">372.3892193759864</stringProp>
              <stringProp name="646">372.3892193759864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="947705408">
              <stringProp name="646">410.9955080733277</stringProp>
              <stringProp name="647">410.9955080733277</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="739313344">
              <stringProp name="647">296.75488648779896</stringProp>
              <stringProp name="648">296.75488648779896</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="900349440">
              <stringProp name="648">317.272065072235</stringProp>
              <stringProp name="649">317.272065072235</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-14661833">
              <stringProp name="649">253.6566711181255</stringProp>
              <stringProp name="650">253.6566711181255</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-94426432">
              <stringProp name="650">243.0945732669661</stringProp>
              <stringProp name="651">243.0945732669661</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1099028512">
              <stringProp name="651">243.58018696127232</stringProp>
              <stringProp name="652">243.58018696127232</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1535089088">
              <stringProp name="652">276.72332159766904</stringProp>
              <stringProp name="653">276.72332159766904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1733892608">
              <stringProp name="653">288.74226053174704</stringProp>
              <stringProp name="654">288.74226053174704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1106569728">
              <stringProp name="654">223.1844118004128</stringProp>
              <stringProp name="655">223.1844118004128</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="478801088">
              <stringProp name="655">250.25737525798223</stringProp>
              <stringProp name="656">250.25737525798223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="976216416">
              <stringProp name="656">260.455262838412</stringProp>
              <stringProp name="657">260.455262838412</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1665810080">
              <stringProp name="657">235.5675610052204</stringProp>
              <stringProp name="658">235.5675610052204</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-804454528">
              <stringProp name="658">238.84545344178704</stringProp>
              <stringProp name="659">238.84545344178704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-944956137">
              <stringProp name="659">235.93177127595</stringProp>
              <stringProp name="660">235.93177127595</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2073011136">
              <stringProp name="660">215.7788029622436</stringProp>
              <stringProp name="661">215.7788029622436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="934504064">
              <stringProp name="661">233.3822993808425</stringProp>
              <stringProp name="662">233.3822993808425</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="108755616">
              <stringProp name="662">277.57314556270484</stringProp>
              <stringProp name="663">277.57314556270484</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1220663808">
              <stringProp name="663">233.74650965157215</stringProp>
              <stringProp name="664">233.74650965157215</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2071865792">
              <stringProp name="664">215.05038242078427</stringProp>
              <stringProp name="665">215.05038242078427</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="841623040">
              <stringProp name="665">222.57739468253</stringProp>
              <stringProp name="666">222.57739468253</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1885719840">
              <stringProp name="666">204.36688114604837</stringProp>
              <stringProp name="667">204.36688114604837</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-162169696">
              <stringProp name="667">217.47845089231515</stringProp>
              <stringProp name="668">217.47845089231515</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-754508544">
              <stringProp name="668">225.248270001214</stringProp>
              <stringProp name="669">225.248270001214</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2039947639">
              <stringProp name="669">257.17737040184534</stringProp>
              <stringProp name="670">257.17737040184534</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="330488576">
              <stringProp name="670">253.17105742381932</stringProp>
              <stringProp name="671">253.17105742381932</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="672967456">
              <stringProp name="671">213.95775160859537</stringProp>
              <stringProp name="672">213.95775160859537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2089451136">
              <stringProp name="672">174.2588320990652</stringProp>
              <stringProp name="673">174.2588320990652</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-791233280">
              <stringProp name="673">220.75634332888188</stringProp>
              <stringProp name="674">220.75634332888188</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="208281536">
              <stringProp name="674">240.90931164258836</stringProp>
              <stringProp name="675">240.90931164258836</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-464376416">
              <stringProp name="675">232.53247541580677</stringProp>
              <stringProp name="676">232.53247541580677</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1792471360">
              <stringProp name="676">187.97741896321477</stringProp>
              <stringProp name="677">187.97741896321477</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-361861824">
              <stringProp name="677">239.5738739832463</stringProp>
              <stringProp name="678">239.5738739832463</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1010497216">
              <stringProp name="678">258.63421148476385</stringProp>
              <stringProp name="679">258.63421148476385</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-723542505">
              <stringProp name="679">231.1970377564647</stringProp>
              <stringProp name="680">231.1970377564647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-307749376">
              <stringProp name="680">161.02585892922178</stringProp>
              <stringProp name="681">161.02585892922178</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1087716256">
              <stringProp name="681">216.992837198009</stringProp>
              <stringProp name="682">216.992837198009</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2024321792">
              <stringProp name="682">196.83986888430252</stringProp>
              <stringProp name="683">196.83986888430252</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1893438176">
              <stringProp name="683">243.21597669054267</stringProp>
              <stringProp name="684">243.21597669054267</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="870848576">
              <stringProp name="684">233.62510622799564</stringProp>
              <stringProp name="685">233.62510622799564</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-580627520">
              <stringProp name="685">190.04127716401604</stringProp>
              <stringProp name="686">190.04127716401604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="491385440">
              <stringProp name="686">273.80963943183195</stringProp>
              <stringProp name="687">273.80963943183195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1306192352">
              <stringProp name="687">222.09178098822383</stringProp>
              <stringProp name="688">222.09178098822383</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1267349696">
              <stringProp name="688">228.8903727085104</stringProp>
              <stringProp name="689">228.8903727085104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-761620105">
              <stringProp name="689">242.60895957265996</stringProp>
              <stringProp name="690">242.60895957265996</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1846213312">
              <stringProp name="690">221.36336044676457</stringProp>
              <stringProp name="691">221.36336044676457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1585987104">
              <stringProp name="691">236.29598154667963</stringProp>
              <stringProp name="692">236.29598154667963</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-906686464">
              <stringProp name="692">269.3177127594998</stringProp>
              <stringProp name="693">269.3177127594998</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1206413216">
              <stringProp name="693">152.52761927886365</stringProp>
              <stringProp name="694">152.52761927886365</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1173225248">
              <stringProp name="694">203.15284691028285</stringProp>
              <stringProp name="695">203.15284691028285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="836702944">
              <stringProp name="695">224.76265630690784</stringProp>
              <stringProp name="696">224.76265630690784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-721401056">
              <stringProp name="696">231.1970377564647</stringProp>
              <stringProp name="697">231.1970377564647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1476424768">
              <stringProp name="697">196.2328517664198</stringProp>
              <stringProp name="698">196.2328517664198</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1028379168">
              <stringProp name="698">218.32827485735092</stringProp>
              <stringProp name="699">218.32827485735092</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1968145728">
              <stringProp name="699">252.92825057666624</stringProp>
              <stringProp name="700">252.92825057666624</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1835901408">
              <stringProp name="700">220.27072963457567</stringProp>
              <stringProp name="701">220.27072963457567</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1424599200">
              <stringProp name="701">306.95277406822873</stringProp>
              <stringProp name="702">306.95277406822873</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1261020736">
              <stringProp name="702">264.7043826635911</stringProp>
              <stringProp name="703">264.7043826635911</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1557682688">
              <stringProp name="703">216.0216098093966</stringProp>
              <stringProp name="704">216.0216098093966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1151244288">
              <stringProp name="704">241.3949253368945</stringProp>
              <stringProp name="705">241.3949253368945</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1044348896">
              <stringProp name="705">283.15770304722594</stringProp>
              <stringProp name="706">283.15770304722594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2025537504">
              <stringProp name="706">228.04054874347457</stringProp>
              <stringProp name="707">228.04054874347457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-85848448">
              <stringProp name="707">208.3731941240743</stringProp>
              <stringProp name="708">208.3731941240743</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="606096480">
              <stringProp name="708">251.1071992230181</stringProp>
              <stringProp name="709">251.1071992230181</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1638406153">
              <stringProp name="709">249.77176156367608</stringProp>
              <stringProp name="710">249.77176156367608</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1504208640">
              <stringProp name="710">227.06932135486215</stringProp>
              <stringProp name="711">227.06932135486215</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1395473920">
              <stringProp name="711">192.3479422119704</stringProp>
              <stringProp name="712">192.3479422119704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="38075136">
              <stringProp name="712">262.5191210392133</stringProp>
              <stringProp name="713">262.5191210392133</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1218696128">
              <stringProp name="713">245.4012383149205</stringProp>
              <stringProp name="714">245.4012383149205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1002508800">
              <stringProp name="714">178.38654850066771</stringProp>
              <stringProp name="715">178.38654850066771</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-744389664">
              <stringProp name="715">220.14932621099916</stringProp>
              <stringProp name="716">220.14932621099916</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="268754560">
              <stringProp name="716">424.7140949374772</stringProp>
              <stringProp name="717">424.7140949374772</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1206294528">
              <stringProp name="717">275.6306907854801</stringProp>
              <stringProp name="718">275.6306907854801</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-927028416">
              <stringProp name="718">237.02440208813888</stringProp>
              <stringProp name="719">237.02440208813888</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-990115977">
              <stringProp name="719">270.8959572659949</stringProp>
              <stringProp name="720">270.8959572659949</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-608067424">
              <stringProp name="720">239.81668083039943</stringProp>
              <stringProp name="721">239.81668083039943</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="716922976">
              <stringProp name="721">244.187204079155</stringProp>
              <stringProp name="722">244.187204079155</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-125323584">
              <stringProp name="722">225.3696734247906</stringProp>
              <stringProp name="723">225.3696734247906</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="WorldCupTesting" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="WorldCupTesting" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-536675808">
              <stringProp name="723">177.2939176884788</stringProp>
              <stringProp name="724">177.2939176884788</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-830139680">
              <stringProp name="724">198.41811339079763</stringProp>
              <stringProp name="725">198.41811339079763</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1568889376">
              <stringProp name="725">183.121282020153</stringProp>
              <stringProp name="726">183.121282020153</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1920580768">
              <stringProp name="726">166.00339929586016</stringProp>
              <stringProp name="727">166.00339929586016</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1881496096">
              <stringProp name="727">167.70304722593175</stringProp>
              <stringProp name="728">167.70304722593175</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-683682016">
              <stringProp name="728">145.00060701711786</stringProp>
              <stringProp name="729">145.00060701711786</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="239108471">
              <stringProp name="729">173.04479786329975</stringProp>
              <stringProp name="730">173.04479786329975</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="104424224">
              <stringProp name="730">246.2510622799563</stringProp>
              <stringProp name="731">246.2510622799563</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2006304512">
              <stringProp name="731">233.0180891101129</stringProp>
              <stringProp name="732">233.0180891101129</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2032376992">
              <stringProp name="732">224.6412528833313</stringProp>
              <stringProp name="733">224.6412528833313</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="426608416">
              <stringProp name="733">208.98021124195705</stringProp>
              <stringProp name="734">208.98021124195705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="315907328">
              <stringProp name="734">173.6518149811825</stringProp>
              <stringProp name="735">173.6518149811825</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-764825056">
              <stringProp name="735">200.8461818623285</stringProp>
              <stringProp name="736">200.8461818623285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2135479104">
              <stringProp name="736">237.14580551171545</stringProp>
              <stringProp name="737">237.14580551171545</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="576903104">
              <stringProp name="737">215.65739953866697</stringProp>
              <stringProp name="738">215.65739953866697</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1874747872">
              <stringProp name="738">216.1430132329732</stringProp>
              <stringProp name="739">216.1430132329732</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="227490199">
              <stringProp name="739">200.36056816802235</stringProp>
              <stringProp name="740">200.36056816802235</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="185074976">
              <stringProp name="740">263.3689450042491</stringProp>
              <stringProp name="741">263.3689450042491</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="191510464">
              <stringProp name="741">168.55287119096758</stringProp>
              <stringProp name="742">168.55287119096758</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="599495040">
              <stringProp name="742">216.7500303508559</stringProp>
              <stringProp name="743">216.7500303508559</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="206520864">
              <stringProp name="743">229.3759864028165</stringProp>
              <stringProp name="744">229.3759864028165</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1708879040">
              <stringProp name="744">257.2987738254219</stringProp>
              <stringProp name="745">257.2987738254219</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1077472192">
              <stringProp name="745">264.82578608716767</stringProp>
              <stringProp name="746">264.82578608716767</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1548314112">
              <stringProp name="746">256.44894986038605</stringProp>
              <stringProp name="747">256.44894986038605</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-758003328">
              <stringProp name="747">234.23212334587836</stringProp>
              <stringProp name="748">234.23212334587836</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1245473952">
              <stringProp name="748">277.9373558334345</stringProp>
              <stringProp name="749">277.9373558334345</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1015626775">
              <stringProp name="749">276.1163044797863</stringProp>
              <stringProp name="750">276.1163044797863</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="908065664">
              <stringProp name="750">212.86512079640647</stringProp>
              <stringProp name="751">212.86512079640647</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="932783040">
              <stringProp name="751">311.32329731698434</stringProp>
              <stringProp name="752">311.32329731698434</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1803881472">
              <stringProp name="752">382.5871069564161</stringProp>
              <stringProp name="753">382.5871069564161</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-171431456">
              <stringProp name="753">346.65169357775886</stringProp>
              <stringProp name="754">346.65169357775886</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1157974144">
              <stringProp name="754">384.4081583100643</stringProp>
              <stringProp name="755">384.4081583100643</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1706674464">
              <stringProp name="755">285.10015782445066</stringProp>
              <stringProp name="756">285.10015782445066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1887479488">
              <stringProp name="756">343.37380114119213</stringProp>
              <stringProp name="757">343.37380114119213</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1768438816">
              <stringProp name="757">324.4348670632512</stringProp>
              <stringProp name="758">324.4348670632512</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1028752704">
              <stringProp name="758">284.735947553721</stringProp>
              <stringProp name="759">284.735947553721</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1197685239">
              <stringProp name="759">303.18926793735585</stringProp>
              <stringProp name="760">303.18926793735585</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="658290080">
              <stringProp name="760">433.6979482821415</stringProp>
              <stringProp name="761">433.6979482821415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1909810688">
              <stringProp name="761">377.0025494718951</stringProp>
              <stringProp name="762">377.0025494718951</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1749861536">
              <stringProp name="762">357.2137914289182</stringProp>
              <stringProp name="763">357.2137914289182</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1614320160">
              <stringProp name="763">472.4256404030594</stringProp>
              <stringProp name="764">472.4256404030594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1414862688">
              <stringProp name="764">502.77649629719554</stringProp>
              <stringProp name="765">502.77649629719554</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="10622880">
              <stringProp name="765">518.923151632876</stringProp>
              <stringProp name="766">518.923151632876</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="288494752">
              <stringProp name="766">391.2067500303508</stringProp>
              <stringProp name="767">391.2067500303508</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1876225504">
              <stringProp name="767">536.4052446278984</stringProp>
              <stringProp name="768">536.4052446278984</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="48076704">
              <stringProp name="768">530.5778802962244</stringProp>
              <stringProp name="769">530.5778802962244</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="294720343">
              <stringProp name="769">514.674031807697</stringProp>
              <stringProp name="770">514.674031807697</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-143673024">
              <stringProp name="770">586.4234551414349</stringProp>
              <stringProp name="771">586.4234551414349</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-411625696">
              <stringProp name="771">485.17299987859656</stringProp>
              <stringProp name="772">485.17299987859656</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1771447104">
              <stringProp name="772">528.27121524827</stringProp>
              <stringProp name="773">528.27121524827</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2106619776">
              <stringProp name="773">439.7681194609688</stringProp>
              <stringProp name="774">439.7681194609688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="210604960">
              <stringProp name="774">290.4419084618186</stringProp>
              <stringProp name="775">290.4419084618186</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-641601184">
              <stringProp name="775">515.5238557727329</stringProp>
              <stringProp name="776">515.5238557727329</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="737936032">
              <stringProp name="776">381.25166929707416</stringProp>
              <stringProp name="777">381.25166929707416</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="489633248">
              <stringProp name="777">386.35061308728905</stringProp>
              <stringProp name="778">386.35061308728905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-103682528">
              <stringProp name="778">433.0909311642589</stringProp>
              <stringProp name="779">433.0909311642589</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1254077911">
              <stringProp name="779">396.5485006677188</stringProp>
              <stringProp name="780">396.5485006677188</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2044883872">
              <stringProp name="780">522.8080611873254</stringProp>
              <stringProp name="781">522.8080611873254</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1192113952">
              <stringProp name="781">493.064222411072</stringProp>
              <stringProp name="782">493.064222411072</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-5842848">
              <stringProp name="782">375.4243049654</stringProp>
              <stringProp name="783">375.4243049654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1606587104">
              <stringProp name="783">426.7779531382784</stringProp>
              <stringProp name="784">426.7779531382784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="996539136">
              <stringProp name="784">542.4754158067258</stringProp>
              <stringProp name="785">542.4754158067258</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1024419904">
              <stringProp name="785">501.319655214277</stringProp>
              <stringProp name="786">501.319655214277</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1128063296">
              <stringProp name="786">566.8775039456114</stringProp>
              <stringProp name="787">566.8775039456114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1431630784">
              <stringProp name="787">556.6796163651815</stringProp>
              <stringProp name="788">556.6796163651815</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2103204704">
              <stringProp name="788">533.9771761563676</stringProp>
              <stringProp name="789">533.9771761563676</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-368591945">
              <stringProp name="789">478.4958115818866</stringProp>
              <stringProp name="790">478.4958115818866</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1690356288">
              <stringProp name="790">451.30144470074055</stringProp>
              <stringProp name="791">451.30144470074055</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-583444576">
              <stringProp name="791">341.55274978754403</stringProp>
              <stringProp name="792">341.55274978754403</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2104566624">
              <stringProp name="792">523.6578851523612</stringProp>
              <stringProp name="793">523.6578851523612</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1129313888">
              <stringProp name="793">614.3462425640403</stringProp>
              <stringProp name="794">614.3462425640403</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1122243552">
              <stringProp name="794">494.52106349399054</stringProp>
              <stringProp name="795">494.52106349399054</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1148783488">
              <stringProp name="795">566.0276799805755</stringProp>
              <stringProp name="796">566.0276799805755</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1585544064">
              <stringProp name="796">592.4936263202623</stringProp>
              <stringProp name="797">592.4936263202623</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="963607936">
              <stringProp name="797">611.1897535510502</stringProp>
              <stringProp name="798">611.1897535510502</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2009949248">
              <stringProp name="798">586.7876654121646</stringProp>
              <stringProp name="799">586.7876654121646</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1797444576">
              <stringProp name="799">522.0796406458661</stringProp>
              <stringProp name="800">522.0796406458661</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-914186944">
              <stringProp name="800">460.2852980454049</stringProp>
              <stringProp name="801">460.2852980454049</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1930737824">
              <stringProp name="801">546.4817287847517</stringProp>
              <stringProp name="802">546.4817287847517</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1266430912">
              <stringProp name="802">536.8908583222047</stringProp>
              <stringProp name="803">536.8908583222047</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1528518016">
              <stringProp name="803">661.6935777588928</stringProp>
              <stringProp name="804">661.6935777588928</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1394733568">
              <stringProp name="804">595.6501153332523</stringProp>
              <stringProp name="805">595.6501153332523</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-431500544">
              <stringProp name="805">631.5855287119097</stringProp>
              <stringProp name="806">631.5855287119097</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="441377888">
              <stringProp name="806">625.3939541095059</stringProp>
              <stringProp name="807">625.3939541095059</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="463783008">
              <stringProp name="807">596.7427461454413</stringProp>
              <stringProp name="808">596.7427461454413</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1250210912">
              <stringProp name="808">728.9510744202987</stringProp>
              <stringProp name="809">728.9510744202987</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="760456279">
              <stringProp name="809">698.2360082554328</stringProp>
              <stringProp name="810">698.2360082554328</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1433347776">
              <stringProp name="810">584.2381935170571</stringProp>
              <stringProp name="811">584.2381935170571</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1153138144">
              <stringProp name="811">656.3518271215247</stringProp>
              <stringProp name="812">656.3518271215247</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-313821184">
              <stringProp name="812">670.1918174092509</stringProp>
              <stringProp name="813">670.1918174092509</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1236606176">
              <stringProp name="813">748.6184290396989</stringProp>
              <stringProp name="814">748.6184290396989</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1223858496">
              <stringProp name="814">786.1320869248511</stringProp>
              <stringProp name="815">786.1320869248511</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1754106656">
              <stringProp name="815">665.8212941604953</stringProp>
              <stringProp name="816">665.8212941604953</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="766396544">
              <stringProp name="816">844.2843268180162</stringProp>
              <stringProp name="817">844.2843268180162</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1947323392">
              <stringProp name="817">787.8317348549228</stringProp>
              <stringProp name="818">787.8317348549228</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="221323072">
              <stringProp name="818">745.3405366031323</stringProp>
              <stringProp name="819">745.3405366031323</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1216139113">
              <stringProp name="819">775.0843753793857</stringProp>
              <stringProp name="820">775.0843753793857</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-946490912">
              <stringProp name="820">819.275221561248</stringProp>
              <stringProp name="821">819.275221561248</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1385797088">
              <stringProp name="821">927.6884788151024</stringProp>
              <stringProp name="822">927.6884788151024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1031560224">
              <stringProp name="822">741.5770304722594</stringProp>
              <stringProp name="823">741.5770304722594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-646168992">
              <stringProp name="823">604.1483549836104</stringProp>
              <stringProp name="824">604.1483549836104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1354467648">
              <stringProp name="824">828.1376714823358</stringProp>
              <stringProp name="825">828.1376714823358</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-770523328">
              <stringProp name="825">879.3699162316377</stringProp>
              <stringProp name="826">879.3699162316377</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-225553792">
              <stringProp name="826">796.2085710817043</stringProp>
              <stringProp name="827">796.2085710817043</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="496062528">
              <stringProp name="827">787.2247177370401</stringProp>
              <stringProp name="828">787.2247177370401</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1837720032">
              <stringProp name="828">885.5614908340415</stringProp>
              <stringProp name="829">885.5614908340415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-97920233">
              <stringProp name="829">1007.6933349520456</stringProp>
              <stringProp name="830">1007.6933349520456</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1971774880">
              <stringProp name="830">809.441544251548</stringProp>
              <stringProp name="831">809.441544251548</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1429211680">
              <stringProp name="831">827.4092509408766</stringProp>
              <stringProp name="832">827.4092509408766</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1272256480">
              <stringProp name="832">718.1461697219862</stringProp>
              <stringProp name="833">718.1461697219862</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2018149600">
              <stringProp name="833">748.9826393104287</stringProp>
              <stringProp name="834">748.9826393104287</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1004718016">
              <stringProp name="834">764.4008741046497</stringProp>
              <stringProp name="835">764.4008741046497</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1540440160">
              <stringProp name="835">816.7257496661407</stringProp>
              <stringProp name="836">816.7257496661407</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1238690656">
              <stringProp name="836">821.703290032779</stringProp>
              <stringProp name="837">821.703290032779</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1358117696">
              <stringProp name="837">847.3194124074299</stringProp>
              <stringProp name="838">847.3194124074299</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1396895936">
              <stringProp name="838">878.7628991137548</stringProp>
              <stringProp name="839">878.7628991137548</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="771549303">
              <stringProp name="839">761.2443850916595</stringProp>
              <stringProp name="840">761.2443850916595</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2122030400">
              <stringProp name="840">733.5644045162073</stringProp>
              <stringProp name="841">733.5644045162073</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1738200224">
              <stringProp name="841">711.7117882724293</stringProp>
              <stringProp name="842">711.7117882724293</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2138471552">
              <stringProp name="842">917.2477843875198</stringProp>
              <stringProp name="843">917.2477843875198</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-627720416">
              <stringProp name="843">844.7699405123224</stringProp>
              <stringProp name="844">844.7699405123224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1188180768">
              <stringProp name="844">822.4317105742382</stringProp>
              <stringProp name="845">822.4317105742382</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="585108608">
              <stringProp name="845">870.2646594633967</stringProp>
              <stringProp name="846">870.2646594633967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-576127424">
              <stringProp name="846">895.5165715673181</stringProp>
              <stringProp name="847">895.5165715673181</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-635740768">
              <stringProp name="847">990.5754522277527</stringProp>
              <stringProp name="848">990.5754522277527</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="599373728">
              <stringProp name="848">951.6049532596818</stringProp>
              <stringProp name="849">951.6049532596818</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="377153079">
              <stringProp name="849">1010.0</stringProp>
              <stringProp name="850">1010.0</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1513201664">
              <stringProp name="850">830.5657399538666</stringProp>
              <stringProp name="851">830.5657399538666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1719698304">
              <stringProp name="851">856.3032657520941</stringProp>
              <stringProp name="852">856.3032657520941</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2013259584">
              <stringProp name="852">759.4233337380114</stringProp>
              <stringProp name="853">759.4233337380114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2102744960">
              <stringProp name="853">956.7038970498968</stringProp>
              <stringProp name="854">956.7038970498968</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1147758080">
              <stringProp name="854">816.604346242564</stringProp>
              <stringProp name="855">816.604346242564</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1290715744">
              <stringProp name="855">753.8387762534904</stringProp>
              <stringProp name="856">753.8387762534904</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1521811392">
              <stringProp name="856">796.5727813524342</stringProp>
              <stringProp name="857">796.5727813524342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1449947200">
              <stringProp name="857">824.0099550807331</stringProp>
              <stringProp name="858">824.0099550807331</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2106120960">
              <stringProp name="858">961.0744202986524</stringProp>
              <stringProp name="859">961.0744202986524</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1819261079">
              <stringProp name="859">700.542673303387</stringProp>
              <stringProp name="860">700.542673303387</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1886374080">
              <stringProp name="860">766.8289425761807</stringProp>
              <stringProp name="861">766.8289425761807</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1530293024">
              <stringProp name="861">929.3881267451742</stringProp>
              <stringProp name="862">929.3881267451742</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-653846144">
              <stringProp name="862">743.0338715551778</stringProp>
              <stringProp name="863">743.0338715551778</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="406489312">
              <stringProp name="863">768.4071870826756</stringProp>
              <stringProp name="864">768.4071870826756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="658326272">
              <stringProp name="864">889.8106106592205</stringProp>
              <stringProp name="865">889.8106106592205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2068737120">
              <stringProp name="865">901.3439358989924</stringProp>
              <stringProp name="866">901.3439358989924</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-709072704">
              <stringProp name="866">635.5918416899356</stringProp>
              <stringProp name="867">635.5918416899356</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1447484064">
              <stringProp name="867">761.4871919388127</stringProp>
              <stringProp name="868">761.4871919388127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="406672832">
              <stringProp name="868">768.4071870826756</stringProp>
              <stringProp name="869">768.4071870826756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1364439607">
              <stringProp name="869">674.44093723443</stringProp>
              <stringProp name="870">674.44093723443</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-842665184">
              <stringProp name="870">889.2035935413378</stringProp>
              <stringProp name="871">889.2035935413378</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="133979328">
              <stringProp name="871">890.9032414714093</stringProp>
              <stringProp name="872">890.9032414714093</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1270475264">
              <stringProp name="872">832.7510015782444</stringProp>
              <stringProp name="873">832.7510015782444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2077424160">
              <stringProp name="873">869.7790457690905</stringProp>
              <stringProp name="874">869.7790457690905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1019027168">
              <stringProp name="874">575.8613572902756</stringProp>
              <stringProp name="875">575.8613572902756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="103570816">
              <stringProp name="875">582.1743353162558</stringProp>
              <stringProp name="876">582.1743353162558</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="778711424">
              <stringProp name="876">618.8381692363724</stringProp>
              <stringProp name="877">618.8381692363724</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-165822656">
              <stringProp name="877">687.3097001335437</stringProp>
              <stringProp name="878">687.3097001335437</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-655775680">
              <stringProp name="878">601.4774796649265</stringProp>
              <stringProp name="879">601.4774796649265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1778425463">
              <stringProp name="879">699.0858322204685</stringProp>
              <stringProp name="880">699.0858322204685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1183596960">
              <stringProp name="880">581.5673181983732</stringProp>
              <stringProp name="881">581.5673181983732</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-293713088">
              <stringProp name="881">616.8957144591478</stringProp>
              <stringProp name="882">616.8957144591478</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1644376384">
              <stringProp name="882">660.2367366759743</stringProp>
              <stringProp name="883">660.2367366759743</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1584397600">
              <stringProp name="883">644.5756950346</stringProp>
              <stringProp name="884">644.5756950346</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-913503072">
              <stringProp name="884">653.4381449556877</stringProp>
              <stringProp name="885">653.4381449556877</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1007441408">
              <stringProp name="885">598.9280077698191</stringProp>
              <stringProp name="886">598.9280077698191</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="116296608">
              <stringProp name="886">663.1504188418114</stringProp>
              <stringProp name="887">663.1504188418114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1038359968">
              <stringProp name="887">711.9545951195822</stringProp>
              <stringProp name="888">711.9545951195822</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="293302624">
              <stringProp name="888">577.5610052203473</stringProp>
              <stringProp name="889">577.5610052203473</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1679327881">
              <stringProp name="889">602.8129173242685</stringProp>
              <stringProp name="890">602.8129173242685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1255609312">
              <stringProp name="890">593.9504674031808</stringProp>
              <stringProp name="891">593.9504674031808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-812347680">
              <stringProp name="891">626.6079883452713</stringProp>
              <stringProp name="892">626.6079883452713</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="782143936">
              <stringProp name="892">638.2627170086197</stringProp>
              <stringProp name="893">638.2627170086197</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-692689280">
              <stringProp name="893">612.1609809396624</stringProp>
              <stringProp name="894">612.1609809396624</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="306450272">
              <stringProp name="894">538.7119096758528</stringProp>
              <stringProp name="895">538.7119096758528</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1558048096">
              <stringProp name="895">638.991137550079</stringProp>
              <stringProp name="896">638.991137550079</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="69562848">
              <stringProp name="896">577.1967949496175</stringProp>
              <stringProp name="897">577.1967949496175</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="690740480">
              <stringProp name="897">562.9925943911618</stringProp>
              <stringProp name="898">562.9925943911618</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-140668768">
              <stringProp name="898">504.1119339565376</stringProp>
              <stringProp name="899">504.1119339565376</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1382663232">
              <stringProp name="899">675.1693577758892</stringProp>
              <stringProp name="900">675.1693577758892</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-832433152">
              <stringProp name="900">588.2445064950832</stringProp>
              <stringProp name="901">588.2445064950832</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1464224416">
              <stringProp name="901">589.4585407308485</stringProp>
              <stringProp name="902">589.4585407308485</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2110959008">
              <stringProp name="902">462.5919630933592</stringProp>
              <stringProp name="903">462.5919630933592</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Alibaba7Training" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="Alibaba7Training" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="1912405376">
              <stringProp name="1">780.5706593353802</stringProp>
              <stringProp name="2">780.5706593353802</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-271810016">
              <stringProp name="2">715.4526175748094</stringProp>
              <stringProp name="3">715.4526175748094</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-644265792">
              <stringProp name="3">789.0894631811071</stringProp>
              <stringProp name="4">789.0894631811071</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-875572672">
              <stringProp name="4">862.7263087874048</stringProp>
              <stringProp name="5">862.7263087874048</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2133344672">
              <stringProp name="5">936.3631543937024</stringProp>
              <stringProp name="6">936.3631543937024</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1407880128">
              <stringProp name="6">1010.0000000000002</stringProp>
              <stringProp name="7">1010.0000000000002</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="894763680">
              <stringProp name="7">1004.2241378123132</stringProp>
              <stringProp name="8">1004.2241378123132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-433395008">
              <stringProp name="8">998.4482756246264</stringProp>
              <stringProp name="9">998.4482756246264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-465601913">
              <stringProp name="9">992.6724134369392</stringProp>
              <stringProp name="10">992.6724134369392</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2020770240">
              <stringProp name="10">986.8965512492524</stringProp>
              <stringProp name="11">986.8965512492524</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="867411040">
              <stringProp name="11">918.3890952295694</stringProp>
              <stringProp name="12">918.3890952295694</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-287444416">
              <stringProp name="12">849.8816392098862</stringProp>
              <stringProp name="13">849.8816392098862</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="56114080">
              <stringProp name="13">781.3741831902032</stringProp>
              <stringProp name="14">781.3741831902032</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1243036288">
              <stringProp name="14">712.8667271705202</stringProp>
              <stringProp name="15">712.8667271705202</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="558307872">
              <stringProp name="15">691.7524226609688</stringProp>
              <stringProp name="16">691.7524226609688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="632773120">
              <stringProp name="16">670.6381181514172</stringProp>
              <stringProp name="17">670.6381181514172</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1013172544">
              <stringProp name="17">649.5238136418659</stringProp>
              <stringProp name="18">649.5238136418659</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-938705312">
              <stringProp name="18">628.4095091323145</stringProp>
              <stringProp name="19">628.4095091323145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-945351913">
              <stringProp name="19">575.8904707483036</stringProp>
              <stringProp name="20">575.8904707483036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2106893184">
              <stringProp name="20">523.3714323642928</stringProp>
              <stringProp name="21">523.3714323642928</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1333764192">
              <stringProp name="21">470.852393980282</stringProp>
              <stringProp name="22">470.852393980282</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-950533728">
              <stringProp name="22">418.3333555962712</stringProp>
              <stringProp name="23">418.3333555962712</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1181308608">
              <stringProp name="23">458.2219397983702</stringProp>
              <stringProp name="24">458.2219397983702</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-678205504">
              <stringProp name="24">498.1105240004693</stringProp>
              <stringProp name="25">498.1105240004693</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-979510048">
              <stringProp name="25">537.9991082025684</stringProp>
              <stringProp name="26">537.9991082025684</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="931767104">
              <stringProp name="26">577.8876924046674</stringProp>
              <stringProp name="27">577.8876924046674</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="396944768">
              <stringProp name="27">657.3629897926752</stringProp>
              <stringProp name="28">657.3629897926752</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2145380768">
              <stringProp name="28">736.8382871806826</stringProp>
              <stringProp name="29">736.8382871806826</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-179974633">
              <stringProp name="29">816.3135845686902</stringProp>
              <stringProp name="30">816.3135845686902</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="3903168">
              <stringProp name="30">895.7888819566979</stringProp>
              <stringProp name="31">895.7888819566979</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1843840160">
              <stringProp name="31">834.6313560872065</stringProp>
              <stringProp name="32">834.6313560872065</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="902615264">
              <stringProp name="32">773.4738302177153</stringProp>
              <stringProp name="33">773.4738302177153</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1059172960">
              <stringProp name="33">712.3163043482236</stringProp>
              <stringProp name="34">712.3163043482236</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="939294496">
              <stringProp name="34">651.1587784787325</stringProp>
              <stringProp name="35">651.1587784787325</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1386657568">
              <stringProp name="35">699.7553578748648</stringProp>
              <stringProp name="36">699.7553578748648</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1287424288">
              <stringProp name="36">748.3519372709968</stringProp>
              <stringProp name="37">748.3519372709968</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1062507360">
              <stringProp name="37">796.9485166671291</stringProp>
              <stringProp name="38">796.9485166671291</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1579927104">
              <stringProp name="38">845.5450960632613</stringProp>
              <stringProp name="39">845.5450960632613</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="863367255">
              <stringProp name="39">785.1531216183982</stringProp>
              <stringProp name="40">785.1531216183982</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1007412640">
              <stringProp name="40">724.7611471735354</stringProp>
              <stringProp name="41">724.7611471735354</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="640465440">
              <stringProp name="41">664.3691727286724</stringProp>
              <stringProp name="42">664.3691727286724</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1231709920">
              <stringProp name="42">603.9771982838093</stringProp>
              <stringProp name="43">603.9771982838093</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1264867072">
              <stringProp name="43">627.6609398841581</stringProp>
              <stringProp name="44">627.6609398841581</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1809494592">
              <stringProp name="44">651.344681484507</stringProp>
              <stringProp name="45">651.344681484507</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="600848256">
              <stringProp name="45">675.0284230848556</stringProp>
              <stringProp name="46">675.0284230848556</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-577484480">
              <stringProp name="46">698.7121646852041</stringProp>
              <stringProp name="47">698.7121646852041</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-92647264">
              <stringProp name="47">683.6245941713968</stringProp>
              <stringProp name="48">683.6245941713968</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-386175232">
              <stringProp name="48">668.5370236575892</stringProp>
              <stringProp name="49">668.5370236575892</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="119349431">
              <stringProp name="49">653.4494531437817</stringProp>
              <stringProp name="50">653.4494531437817</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="249402656">
              <stringProp name="50">638.3618826299742</stringProp>
              <stringProp name="51">638.3618826299742</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="119595904">
              <stringProp name="51">615.3559615420705</stringProp>
              <stringProp name="52">615.3559615420705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1402696480">
              <stringProp name="52">592.3500404541666</stringProp>
              <stringProp name="53">592.3500404541666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1301825696">
              <stringProp name="53">569.3441193662628</stringProp>
              <stringProp name="54">569.3441193662628</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-903727328">
              <stringProp name="54">546.3381982783591</stringProp>
              <stringProp name="55">546.3381982783591</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-27575808">
              <stringProp name="55">499.1984937019869</stringProp>
              <stringProp name="56">499.1984937019869</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-853158784">
              <stringProp name="56">452.05878912561457</stringProp>
              <stringProp name="57">452.05878912561457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1160798592">
              <stringProp name="57">404.9190845492423</stringProp>
              <stringProp name="58">404.9190845492423</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1768605824">
              <stringProp name="58">357.7793799728701</stringProp>
              <stringProp name="59">357.7793799728701</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-784792457">
              <stringProp name="59">360.9775371657223</stringProp>
              <stringProp name="60">360.9775371657223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1096027488">
              <stringProp name="60">364.17569435857433</stringProp>
              <stringProp name="61">364.17569435857433</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="447059936">
              <stringProp name="61">367.3738515514262</stringProp>
              <stringProp name="62">367.3738515514262</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1994263296">
              <stringProp name="62">370.5720087442784</stringProp>
              <stringProp name="63">370.5720087442784</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1620219808">
              <stringProp name="63">336.7898621882278</stringProp>
              <stringProp name="64">336.7898621882278</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1704061888">
              <stringProp name="64">303.0077156321772</stringProp>
              <stringProp name="65">303.0077156321772</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-602233792">
              <stringProp name="65">269.2255690761267</stringProp>
              <stringProp name="66">269.2255690761267</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="365816576">
              <stringProp name="66">235.4434225200761</stringProp>
              <stringProp name="67">235.4434225200761</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-146634272">
              <stringProp name="67">276.57436230774704</stringProp>
              <stringProp name="68">276.57436230774704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="94280032">
              <stringProp name="68">317.7053020954179</stringProp>
              <stringProp name="69">317.7053020954179</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-474985">
              <stringProp name="69">358.8362418830888</stringProp>
              <stringProp name="70">358.8362418830888</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2052620640">
              <stringProp name="70">399.9671816707597</stringProp>
              <stringProp name="71">399.9671816707597</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2085895520">
              <stringProp name="71">381.6364375081132</stringProp>
              <stringProp name="72">381.6364375081132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-842543808">
              <stringProp name="72">363.3056933454667</stringProp>
              <stringProp name="73">363.3056933454667</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="827605088">
              <stringProp name="73">344.9749491828201</stringProp>
              <stringProp name="74">344.9749491828201</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1779976160">
              <stringProp name="74">326.6442050201737</stringProp>
              <stringProp name="75">326.6442050201737</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1005037408">
              <stringProp name="75">296.96350372366965</stringProp>
              <stringProp name="76">296.96350372366965</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1020885152">
              <stringProp name="76">267.28280242716573</stringProp>
              <stringProp name="77">267.28280242716573</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="26528768">
              <stringProp name="77">237.60210113066185</stringProp>
              <stringProp name="78">237.60210113066185</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="619733984">
              <stringProp name="78">207.9213998341578</stringProp>
              <stringProp name="79">207.9213998341578</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="623688311">
              <stringProp name="79">194.8147258343808</stringProp>
              <stringProp name="80">194.8147258343808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2081340064">
              <stringProp name="80">181.7080518346036</stringProp>
              <stringProp name="81">181.7080518346036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1223745440">
              <stringProp name="81">168.60137783482642</stringProp>
              <stringProp name="82">168.60137783482642</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-496386752">
              <stringProp name="82">155.49470383504925</stringProp>
              <stringProp name="83">155.49470383504925</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="199819680">
              <stringProp name="83">159.5407511520748</stringProp>
              <stringProp name="84">159.5407511520748</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-337063424">
              <stringProp name="84">163.5867984691003</stringProp>
              <stringProp name="85">163.5867984691003</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1113647872">
              <stringProp name="85">167.63284578612593</stringProp>
              <stringProp name="86">167.63284578612593</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1201111904">
              <stringProp name="86">171.67889310315144</stringProp>
              <stringProp name="87">171.67889310315144</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1574233632">
              <stringProp name="87">182.72491611389464</stringProp>
              <stringProp name="88">182.72491611389464</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-462314592">
              <stringProp name="88">193.77093912463795</stringProp>
              <stringProp name="89">193.77093912463795</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-90585481">
              <stringProp name="89">204.8169621353813</stringProp>
              <stringProp name="90">204.8169621353813</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-605080480">
              <stringProp name="90">215.86298514612457</stringProp>
              <stringProp name="91">215.86298514612457</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="670463872">
              <stringProp name="91">189.87616602286127</stringProp>
              <stringProp name="92">189.87616602286127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="518383488">
              <stringProp name="92">163.8893468995981</stringProp>
              <stringProp name="93">163.8893468995981</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1869403072">
              <stringProp name="93">137.90252777633484</stringProp>
              <stringProp name="94">137.90252777633484</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1062016224">
              <stringProp name="94">111.91570865307152</stringProp>
              <stringProp name="95">111.91570865307152</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="548217664">
              <stringProp name="95">120.50866231265094</stringProp>
              <stringProp name="96">120.50866231265094</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="285438144">
              <stringProp name="96">129.1016159722304</stringProp>
              <stringProp name="97">129.1016159722304</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2132787840">
              <stringProp name="97">137.69456963180994</stringProp>
              <stringProp name="98">137.69456963180994</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="607977888">
              <stringProp name="98">146.2875232913894</stringProp>
              <stringProp name="99">146.2875232913894</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1804860624">
              <stringProp name="99">130.4288705896156</stringProp>
              <stringProp name="100">130.4288705896156</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="975611744">
              <stringProp name="100">114.57021788784188</stringProp>
              <stringProp name="101">114.57021788784188</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="601752576">
              <stringProp name="101">98.71156518606809</stringProp>
              <stringProp name="102">98.71156518606809</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="229128000">
              <stringProp name="102">82.85291248429436</stringProp>
              <stringProp name="103">82.85291248429436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1007179648">
              <stringProp name="103">76.2212134842916</stringProp>
              <stringProp name="104">76.2212134842916</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1767877568">
              <stringProp name="104">69.58951448428884</stringProp>
              <stringProp name="105">69.58951448428884</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-634282496">
              <stringProp name="105">62.95781548428612</stringProp>
              <stringProp name="106">62.95781548428612</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2107924928">
              <stringProp name="106">56.32611648428337</stringProp>
              <stringProp name="107">56.32611648428337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1343833792">
              <stringProp name="107">51.88834656002211</stringProp>
              <stringProp name="108">51.88834656002211</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1686685152">
              <stringProp name="108">47.45057663576096</stringProp>
              <stringProp name="109">47.45057663576096</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-312306409">
              <stringProp name="109">43.01280671149976</stringProp>
              <stringProp name="110">43.01280671149976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1935952736">
              <stringProp name="110">38.575036787238496</stringProp>
              <stringProp name="111">38.575036787238496</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="258596928">
              <stringProp name="111">31.431277590428845</stringProp>
              <stringProp name="112">31.431277590428845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1790552672">
              <stringProp name="112">24.287518393619195</stringProp>
              <stringProp name="113">24.287518393619195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1489430656">
              <stringProp name="113">17.143759196809654</stringProp>
              <stringProp name="114">17.143759196809654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-934446688">
              <stringProp name="114">10.0</stringProp>
              <stringProp name="115">10.0</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1005968480">
              <stringProp name="115">16.91956818473022</stringProp>
              <stringProp name="116">16.91956818473022</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-589154816">
              <stringProp name="116">23.839136369460384</stringProp>
              <stringProp name="117">23.839136369460384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-884837920">
              <stringProp name="117">30.7587045541906</stringProp>
              <stringProp name="118">30.7587045541906</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="23641248">
              <stringProp name="118">37.67827273892082</stringProp>
              <stringProp name="119">37.67827273892082</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1500469495">
              <stringProp name="119">35.91512970343363</stringProp>
              <stringProp name="120">35.91512970343363</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1103238944">
              <stringProp name="120">34.15198666794638</stringProp>
              <stringProp name="121">34.15198666794638</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1491780736">
              <stringProp name="121">32.38884363245919</stringProp>
              <stringProp name="122">32.38884363245919</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1592951104">
              <stringProp name="122">30.625700596971942</stringProp>
              <stringProp name="123">30.625700596971942</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-628856128">
              <stringProp name="123">38.801201928463975</stringProp>
              <stringProp name="124">38.801201928463975</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1879638848">
              <stringProp name="124">46.97670325995595</stringProp>
              <stringProp name="125">46.97670325995595</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1252222272">
              <stringProp name="125">55.152204591447976</stringProp>
              <stringProp name="126">55.152204591447976</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="12234048">
              <stringProp name="126">63.32770592294</stringProp>
              <stringProp name="127">63.32770592294</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="858079616">
              <stringProp name="127">61.275374243964166</stringProp>
              <stringProp name="128">61.275374243964166</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-549370432">
              <stringProp name="128">59.22304256498828</stringProp>
              <stringProp name="129">59.22304256498828</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-644942249">
              <stringProp name="129">57.17071088601238</stringProp>
              <stringProp name="130">57.17071088601238</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-47345408">
              <stringProp name="130">55.11837920703654</stringProp>
              <stringProp name="131">55.11837920703654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="862178112">
              <stringProp name="131">49.3951863632932</stringProp>
              <stringProp name="132">49.3951863632932</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-956786880">
              <stringProp name="132">43.67199351954992</stringProp>
              <stringProp name="133">43.67199351954992</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1688388800">
              <stringProp name="133">37.948800675806574</stringProp>
              <stringProp name="134">37.948800675806574</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1143490688">
              <stringProp name="134">32.22560783206329</stringProp>
              <stringProp name="135">32.22560783206329</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2022578272">
              <stringProp name="135">36.19090183748735</stringProp>
              <stringProp name="136">36.19090183748735</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1923166080">
              <stringProp name="136">40.15619584291146</stringProp>
              <stringProp name="137">40.15619584291146</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-539557824">
              <stringProp name="137">44.121489848335465</stringProp>
              <stringProp name="138">44.121489848335465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-574650944">
              <stringProp name="138">48.08678385375958</stringProp>
              <stringProp name="139">48.08678385375958</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1843087543">
              <stringProp name="139">43.02798372218879</stringProp>
              <stringProp name="140">43.02798372218879</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-998298464">
              <stringProp name="140">37.96918359061812</stringProp>
              <stringProp name="141">37.96918359061812</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1875894944">
              <stringProp name="141">32.91038345904734</stringProp>
              <stringProp name="142">32.91038345904734</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="548375872">
              <stringProp name="142">27.851583327476607</stringProp>
              <stringProp name="143">27.851583327476607</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="989943584">
              <stringProp name="143">29.55242484575104</stringProp>
              <stringProp name="144">29.55242484575104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-760762688">
              <stringProp name="144">31.253266364025528</stringProp>
              <stringProp name="145">31.253266364025528</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="470303168">
              <stringProp name="145">32.9541078822999</stringProp>
              <stringProp name="146">32.9541078822999</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1764232992">
              <stringProp name="146">34.65494940057439</stringProp>
              <stringProp name="147">34.65494940057439</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1402029216">
              <stringProp name="147">39.14769759501157</stringProp>
              <stringProp name="148">39.14769759501157</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="928914208">
              <stringProp name="148">43.64044578944864</stringProp>
              <stringProp name="149">43.64044578944864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="226641431">
              <stringProp name="149">48.13319398388576</stringProp>
              <stringProp name="150">48.13319398388576</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-375883360">
              <stringProp name="150">52.625942178322944</stringProp>
              <stringProp name="151">52.625942178322944</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1527482048">
              <stringProp name="151">49.720701179960685</stringProp>
              <stringProp name="152">49.720701179960685</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1388566624">
              <stringProp name="152">46.815460181598425</stringProp>
              <stringProp name="153">46.815460181598425</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1241311456">
              <stringProp name="153">43.91021918323617</stringProp>
              <stringProp name="154">43.91021918323617</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-678510208">
              <stringProp name="154">41.00497818487391</stringProp>
              <stringProp name="155">41.00497818487391</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1868508832">
              <stringProp name="155">48.6033292225127</stringProp>
              <stringProp name="156">48.6033292225127</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-445086400">
              <stringProp name="156">56.20168026015149</stringProp>
              <stringProp name="157">56.20168026015149</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1719445504">
              <stringProp name="157">63.800031297790206</stringProp>
              <stringProp name="158">63.800031297790206</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="437135168">
              <stringProp name="158">71.39838233542899</stringProp>
              <stringProp name="159">71.39838233542899</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-341410665">
              <stringProp name="159">73.86786707256087</stringProp>
              <stringProp name="160">73.86786707256087</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1857993600">
              <stringProp name="160">76.33735180969279</stringProp>
              <stringProp name="161">76.33735180969279</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2035950176">
              <stringProp name="161">78.80683654682473</stringProp>
              <stringProp name="162">78.80683654682473</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1691577792">
              <stringProp name="162">81.27632128395655</stringProp>
              <stringProp name="163">81.27632128395655</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1957955872">
              <stringProp name="163">66.73297016613509</stringProp>
              <stringProp name="164">66.73297016613509</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-562670144">
              <stringProp name="164">52.189619048313645</stringProp>
              <stringProp name="165">52.189619048313645</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-446105472">
              <stringProp name="165">37.64626793049224</stringProp>
              <stringProp name="166">37.64626793049224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-363733408">
              <stringProp name="166">23.10291681267073</stringProp>
              <stringProp name="167">23.10291681267073</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1985612960">
              <stringProp name="167">35.89237306391129</stringProp>
              <stringProp name="168">35.89237306391129</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-169773728">
              <stringProp name="168">48.681829315151965</stringProp>
              <stringProp name="169">48.681829315151965</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1237095913">
              <stringProp name="169">61.47128556639258</stringProp>
              <stringProp name="170">61.47128556639258</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="541130976">
              <stringProp name="170">74.26074181763319</stringProp>
              <stringProp name="171">74.26074181763319</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-682057120">
              <stringProp name="171">76.94730464314534</stringProp>
              <stringProp name="172">76.94730464314534</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="127722592">
              <stringProp name="172">79.63386746865757</stringProp>
              <stringProp name="173">79.63386746865757</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1739828576">
              <stringProp name="173">82.32043029416978</stringProp>
              <stringProp name="174">82.32043029416978</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1626403008">
              <stringProp name="174">85.00699311968201</stringProp>
              <stringProp name="175">85.00699311968201</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1802701280">
              <stringProp name="175">80.16707067165316</stringProp>
              <stringProp name="176">80.16707067165316</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2085223104">
              <stringProp name="176">75.32714822362428</stringProp>
              <stringProp name="177">75.32714822362428</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2086230912">
              <stringProp name="177">70.48722577559539</stringProp>
              <stringProp name="178">70.48722577559539</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1281789344">
              <stringProp name="178">65.64730332756662</stringProp>
              <stringProp name="179">65.64730332756662</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-964697289">
              <stringProp name="179">76.22727099683844</stringProp>
              <stringProp name="180">76.22727099683844</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="212499392">
              <stringProp name="180">86.80723866611038</stringProp>
              <stringProp name="181">86.80723866611038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-814715488">
              <stringProp name="181">97.38720633538227</stringProp>
              <stringProp name="182">97.38720633538227</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1535229600">
              <stringProp name="182">107.9671740046541</stringProp>
              <stringProp name="183">107.9671740046541</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1260306624">
              <stringProp name="183">101.58539013572424</stringProp>
              <stringProp name="184">101.58539013572424</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-815291680">
              <stringProp name="184">95.2036062667943</stringProp>
              <stringProp name="185">95.2036062667943</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1018699488">
              <stringProp name="185">88.82182239786434</stringProp>
              <stringProp name="186">88.82182239786434</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1830611488">
              <stringProp name="186">82.44003852893444</stringProp>
              <stringProp name="187">82.44003852893444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-236786784">
              <stringProp name="187">90.39446429582442</stringProp>
              <stringProp name="188">90.39446429582442</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1213353024">
              <stringProp name="188">98.3488900627144</stringProp>
              <stringProp name="189">98.3488900627144</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1107582729">
              <stringProp name="189">106.3033158296044</stringProp>
              <stringProp name="190">106.3033158296044</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="631512576">
              <stringProp name="190">114.25774159649436</stringProp>
              <stringProp name="191">114.25774159649436</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-326987232">
              <stringProp name="191">111.20049833903288</stringProp>
              <stringProp name="192">111.20049833903288</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1643164608">
              <stringProp name="192">108.14325508157134</stringProp>
              <stringProp name="193">108.14325508157134</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1259676928">
              <stringProp name="193">105.08601182410992</stringProp>
              <stringProp name="194">105.08601182410992</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2028872352">
              <stringProp name="194">102.02876856664842</stringProp>
              <stringProp name="195">102.02876856664842</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="797976128">
              <stringProp name="195">100.0409471225132</stringProp>
              <stringProp name="196">100.0409471225132</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1455240768">
              <stringProp name="196">98.05312567837808</stringProp>
              <stringProp name="197">98.05312567837808</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1890390656">
              <stringProp name="197">96.06530423424296</stringProp>
              <stringProp name="198">96.06530423424296</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-832147136">
              <stringProp name="198">94.07748279010774</stringProp>
              <stringProp name="199">94.07748279010774</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-521236640">
              <stringProp name="199">95.74462515781045</stringProp>
              <stringProp name="200">95.74462515781045</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="28903392">
              <stringProp name="200">97.41176752551328</stringProp>
              <stringProp name="201">97.41176752551328</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1278470496">
              <stringProp name="201">99.07890989321604</stringProp>
              <stringProp name="202">99.07890989321604</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1883692672">
              <stringProp name="202">100.74605226091874</stringProp>
              <stringProp name="203">100.74605226091874</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="407653376">
              <stringProp name="203">117.85666474226451</stringProp>
              <stringProp name="204">117.85666474226451</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="928326848">
              <stringProp name="204">134.9672772236104</stringProp>
              <stringProp name="205">134.9672772236104</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-58183136">
              <stringProp name="205">152.07788970495628</stringProp>
              <stringProp name="206">152.07788970495628</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1501533568">
              <stringProp name="206">169.188502186302</stringProp>
              <stringProp name="207">169.188502186302</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1933975840">
              <stringProp name="207">167.4682758539128</stringProp>
              <stringProp name="208">167.4682758539128</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1733905792">
              <stringProp name="208">165.74804952152357</stringProp>
              <stringProp name="209">165.74804952152357</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1320609993">
              <stringProp name="209">164.02782318913432</stringProp>
              <stringProp name="210">164.02782318913432</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1131846496">
              <stringProp name="210">162.307596856745</stringProp>
              <stringProp name="211">162.307596856745</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2035747936">
              <stringProp name="211">161.62850571702114</stringProp>
              <stringProp name="212">161.62850571702114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-854369568">
              <stringProp name="212">160.94941457729738</stringProp>
              <stringProp name="213">160.94941457729738</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-788760192">
              <stringProp name="213">160.27032343757352</stringProp>
              <stringProp name="214">160.27032343757352</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1949350976">
              <stringProp name="214">159.59123229784967</stringProp>
              <stringProp name="215">159.59123229784967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1171398720">
              <stringProp name="215">160.3867621825672</stringProp>
              <stringProp name="216">160.3867621825672</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2143577024">
              <stringProp name="216">161.18229206728475</stringProp>
              <stringProp name="217">161.18229206728475</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1799844640">
              <stringProp name="217">161.97782195200216</stringProp>
              <stringProp name="218">161.97782195200216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1099938528">
              <stringProp name="218">162.77335183671985</stringProp>
              <stringProp name="219">162.77335183671985</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1169026985">
              <stringProp name="219">167.61565246289967</stringProp>
              <stringProp name="220">167.61565246289967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-835645440">
              <stringProp name="220">172.45795308907975</stringProp>
              <stringProp name="221">172.45795308907975</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="833037760">
              <stringProp name="221">177.30025371525971</stringProp>
              <stringProp name="222">177.30025371525971</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1491280768">
              <stringProp name="222">182.14255434143968</stringProp>
              <stringProp name="223">182.14255434143968</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="282938144">
              <stringProp name="223">205.22785147163023</stringProp>
              <stringProp name="224">205.22785147163023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="855699360">
              <stringProp name="224">228.31314860182084</stringProp>
              <stringProp name="225">228.31314860182084</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-284390048">
              <stringProp name="225">251.39844573201145</stringProp>
              <stringProp name="226">251.39844573201145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="820124640">
              <stringProp name="226">274.483742862202</stringProp>
              <stringProp name="227">274.483742862202</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1944210304">
              <stringProp name="227">263.26977798689046</stringProp>
              <stringProp name="228">263.26977798689046</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="910764384">
              <stringProp name="228">252.05581311157889</stringProp>
              <stringProp name="229">252.05581311157889</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1183273975">
              <stringProp name="229">240.84184823626745</stringProp>
              <stringProp name="230">240.84184823626745</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-430916064">
              <stringProp name="230">229.62788336095585</stringProp>
              <stringProp name="231">229.62788336095585</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1355382656">
              <stringProp name="231">232.31855317222983</stringProp>
              <stringProp name="232">232.31855317222983</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="601445312">
              <stringProp name="232">235.0092229835036</stringProp>
              <stringProp name="233">235.0092229835036</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-998092800">
              <stringProp name="233">237.69989279477744</stringProp>
              <stringProp name="234">237.69989279477744</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1436578656">
              <stringProp name="234">240.39056260605145</stringProp>
              <stringProp name="235">240.39056260605145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1170593888">
              <stringProp name="235">249.6163277298625</stringProp>
              <stringProp name="236">249.6163277298625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1434125216">
              <stringProp name="236">258.84209285367353</stringProp>
              <stringProp name="237">258.84209285367353</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="508216608">
              <stringProp name="237">268.0678579774845</stringProp>
              <stringProp name="238">268.0678579774845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1536892576">
              <stringProp name="238">277.2936231012957</stringProp>
              <stringProp name="239">277.2936231012957</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1168170775">
              <stringProp name="239">279.51238354270293</stringProp>
              <stringProp name="240">279.51238354270293</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-208607712">
              <stringProp name="240">281.73114398411013</stringProp>
              <stringProp name="241">281.73114398411013</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1621265728">
              <stringProp name="241">283.9499044255175</stringProp>
              <stringProp name="242">283.9499044255175</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="93219232">
              <stringProp name="242">286.1686648669247</stringProp>
              <stringProp name="243">286.1686648669247</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1151386784">
              <stringProp name="243">296.71080236932147</stringProp>
              <stringProp name="244">296.71080236932147</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="863061696">
              <stringProp name="244">307.2529398717182</stringProp>
              <stringProp name="245">307.2529398717182</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-700293632">
              <stringProp name="245">317.7950773741149</stringProp>
              <stringProp name="246">317.7950773741149</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-39763072">
              <stringProp name="246">328.33721487651167</stringProp>
              <stringProp name="247">328.33721487651167</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-379452864">
              <stringProp name="247">334.0325214421115</stringProp>
              <stringProp name="248">334.0325214421115</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-825406240">
              <stringProp name="248">339.7278280077114</stringProp>
              <stringProp name="249">339.7278280077114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="45007607">
              <stringProp name="249">345.4231345733111</stringProp>
              <stringProp name="250">345.4231345733111</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1745967424">
              <stringProp name="250">351.118441138911</stringProp>
              <stringProp name="251">351.118441138911</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-557842560">
              <stringProp name="251">350.16951249500806</stringProp>
              <stringProp name="252">350.16951249500806</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1399184832">
              <stringProp name="252">349.2205838511051</stringProp>
              <stringProp name="253">349.2205838511051</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1500484256">
              <stringProp name="253">348.27165520720195</stringProp>
              <stringProp name="254">348.27165520720195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="983434144">
              <stringProp name="254">347.322726563299</stringProp>
              <stringProp name="255">347.322726563299</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="352024704">
              <stringProp name="255">347.32517987985347</stringProp>
              <stringProp name="256">347.32517987985347</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1584855360">
              <stringProp name="256">347.32763319640816</stringProp>
              <stringProp name="257">347.32763319640816</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1665085856">
              <stringProp name="257">347.3300865129626</stringProp>
              <stringProp name="258">347.3300865129626</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1384074912">
              <stringProp name="258">347.3325398295171</stringProp>
              <stringProp name="259">347.3325398295171</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="927850583">
              <stringProp name="259">346.1572919863729</stringProp>
              <stringProp name="260">346.1572919863729</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="194854720">
              <stringProp name="260">344.98204414322873</stringProp>
              <stringProp name="261">344.98204414322873</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-490997440">
              <stringProp name="261">343.80679630008484</stringProp>
              <stringProp name="262">343.80679630008484</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="353644864">
              <stringProp name="262">342.63154845694066</stringProp>
              <stringProp name="263">342.63154845694066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2044752768">
              <stringProp name="263">336.71393287609664</stringProp>
              <stringProp name="264">336.71393287609664</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1407374816">
              <stringProp name="264">330.7963172952525</stringProp>
              <stringProp name="265">330.7963172952525</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1160482848">
              <stringProp name="265">324.87870171440846</stringProp>
              <stringProp name="266">324.87870171440846</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1791423232">
              <stringProp name="266">318.96108613356444</stringProp>
              <stringProp name="267">318.96108613356444</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1618014208">
              <stringProp name="267">357.5105374014572</stringProp>
              <stringProp name="268">357.5105374014572</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1674377536">
              <stringProp name="268">396.05998866935</stringProp>
              <stringProp name="269">396.05998866935</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-100756873">
              <stringProp name="269">434.60943993724254</stringProp>
              <stringProp name="270">434.60943993724254</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="247850944">
              <stringProp name="270">473.1588912051353</stringProp>
              <stringProp name="271">473.1588912051353</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2077563680">
              <stringProp name="271">440.2402986959403</stringProp>
              <stringProp name="272">440.2402986959403</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-187456352">
              <stringProp name="272">407.3217061867453</stringProp>
              <stringProp name="273">407.3217061867453</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1359190624">
              <stringProp name="273">374.4031136775503</stringProp>
              <stringProp name="274">374.4031136775503</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-439252288">
              <stringProp name="274">341.4845211683553</stringProp>
              <stringProp name="275">341.4845211683553</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-777059968">
              <stringProp name="275">359.21875798511115</stringProp>
              <stringProp name="276">359.21875798511115</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2097428672">
              <stringProp name="276">376.9529948018671</stringProp>
              <stringProp name="277">376.9529948018671</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-702574976">
              <stringProp name="277">394.6872316186228</stringProp>
              <stringProp name="278">394.6872316186228</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-852647104">
              <stringProp name="278">412.42146843537887</stringProp>
              <stringProp name="279">412.42146843537887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1273258697">
              <stringProp name="279">410.04703230656514</stringProp>
              <stringProp name="280">410.04703230656514</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="932746624">
              <stringProp name="280">407.67259617775153</stringProp>
              <stringProp name="281">407.67259617775153</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="477165376">
              <stringProp name="281">405.2981600489379</stringProp>
              <stringProp name="282">405.2981600489379</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1487122752">
              <stringProp name="282">402.9237239201242</stringProp>
              <stringProp name="283">402.9237239201242</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1396002464">
              <stringProp name="283">423.4963204211618</stringProp>
              <stringProp name="284">423.4963204211618</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="252852896">
              <stringProp name="284">444.0689169221995</stringProp>
              <stringProp name="285">444.0689169221995</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2027897792">
              <stringProp name="285">464.64151342323726</stringProp>
              <stringProp name="286">464.64151342323726</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1113837600">
              <stringProp name="286">485.2141099242749</stringProp>
              <stringProp name="287">485.2141099242749</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1736468416">
              <stringProp name="287">483.2488959126411</stringProp>
              <stringProp name="288">483.2488959126411</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-473509760">
              <stringProp name="288">481.2836819010074</stringProp>
              <stringProp name="289">481.2836819010074</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1156192919">
              <stringProp name="289">479.3184678893738</stringProp>
              <stringProp name="290">479.3184678893738</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1799958784">
              <stringProp name="290">477.3532538777401</stringProp>
              <stringProp name="291">477.3532538777401</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-805751808">
              <stringProp name="291">466.8746747412842</stringProp>
              <stringProp name="292">466.8746747412842</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1266242528">
              <stringProp name="292">456.3960956048285</stringProp>
              <stringProp name="293">456.3960956048285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="851125632">
              <stringProp name="293">445.91751646837264</stringProp>
              <stringProp name="294">445.91751646837264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-809726912">
              <stringProp name="294">435.4389373319168</stringProp>
              <stringProp name="295">435.4389373319168</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="877139424">
              <stringProp name="295">471.8499834418506</stringProp>
              <stringProp name="296">471.8499834418506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="748075488">
              <stringProp name="296">508.2610295517845</stringProp>
              <stringProp name="297">508.2610295517845</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1840651712">
              <stringProp name="297">544.6720756617183</stringProp>
              <stringProp name="298">544.6720756617183</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="345903712">
              <stringProp name="298">581.0831217716521</stringProp>
              <stringProp name="299">581.0831217716521</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="824634368">
              <stringProp name="299">571.2207027236786</stringProp>
              <stringProp name="300">571.2207027236786</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1053197632">
              <stringProp name="300">561.3582836757049</stringProp>
              <stringProp name="301">561.3582836757049</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-976245056">
              <stringProp name="301">551.4958646277315</stringProp>
              <stringProp name="302">551.4958646277315</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-565808736">
              <stringProp name="302">541.6334455797579</stringProp>
              <stringProp name="303">541.6334455797579</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-701651072">
              <stringProp name="303">555.5152712478348</stringProp>
              <stringProp name="304">555.5152712478348</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-747986272">
              <stringProp name="304">569.3970969159118</stringProp>
              <stringProp name="305">569.3970969159118</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1964317184">
              <stringProp name="305">583.2789225839887</stringProp>
              <stringProp name="306">583.2789225839887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1867989728">
              <stringProp name="306">597.1607482520657</stringProp>
              <stringProp name="307">597.1607482520657</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1353990912">
              <stringProp name="307">577.256407012899</stringProp>
              <stringProp name="308">577.256407012899</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1759080960">
              <stringProp name="308">557.3520657737324</stringProp>
              <stringProp name="309">557.3520657737324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-613281193">
              <stringProp name="309">537.4477245345659</stringProp>
              <stringProp name="310">537.4477245345659</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="999873280">
              <stringProp name="310">517.5433832953992</stringProp>
              <stringProp name="311">517.5433832953992</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1682968192">
              <stringProp name="311">505.4879979258715</stringProp>
              <stringProp name="312">505.4879979258715</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-862775616">
              <stringProp name="312">493.4326125563438</stringProp>
              <stringProp name="313">493.4326125563438</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-676322016">
              <stringProp name="313">481.3772271868163</stringProp>
              <stringProp name="314">481.3772271868163</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1165376672">
              <stringProp name="314">469.3218418172887</stringProp>
              <stringProp name="315">469.3218418172887</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1880323872">
              <stringProp name="315">476.973198401106</stringProp>
              <stringProp name="316">476.973198401106</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2054761664">
              <stringProp name="316">484.6245549849233</stringProp>
              <stringProp name="317">484.6245549849233</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2111810080">
              <stringProp name="317">492.27591156874064</stringProp>
              <stringProp name="318">492.27591156874064</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="105874336">
              <stringProp name="318">499.92726815255793</stringProp>
              <stringProp name="319">499.92726815255793</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1002709591">
              <stringProp name="319">510.3090224830789</stringProp>
              <stringProp name="320">510.3090224830789</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2014190816">
              <stringProp name="320">520.6907768135995</stringProp>
              <stringProp name="321">520.6907768135995</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1130347392">
              <stringProp name="321">531.0725311441205</stringProp>
              <stringProp name="322">531.0725311441205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-629700768">
              <stringProp name="322">541.4542854746412</stringProp>
              <stringProp name="323">541.4542854746412</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-703751072">
              <stringProp name="323">579.3531887576719</stringProp>
              <stringProp name="324">579.3531887576719</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="219444608">
              <stringProp name="324">617.2520920407026</stringProp>
              <stringProp name="325">617.2520920407026</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1329332960">
              <stringProp name="325">655.1509953237331</stringProp>
              <stringProp name="326">655.1509953237331</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="929457152">
              <stringProp name="326">693.0498986067637</stringProp>
              <stringProp name="327">693.0498986067637</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1200918848">
              <stringProp name="327">652.7893184258196</stringProp>
              <stringProp name="328">652.7893184258196</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="846050240">
              <stringProp name="328">612.5287382448753</stringProp>
              <stringProp name="329">612.5287382448753</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-739940585">
              <stringProp name="329">572.268158063931</stringProp>
              <stringProp name="330">572.268158063931</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1555736800">
              <stringProp name="330">532.0075778829868</stringProp>
              <stringProp name="331">532.0075778829868</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-240422432">
              <stringProp name="331">539.8571566601901</stringProp>
              <stringProp name="332">539.8571566601901</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="576566592">
              <stringProp name="332">547.7067354373935</stringProp>
              <stringProp name="333">547.7067354373935</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1909669376">
              <stringProp name="333">555.5563142145969</stringProp>
              <stringProp name="334">555.5563142145969</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1855522496">
              <stringProp name="334">563.4058929918003</stringProp>
              <stringProp name="335">563.4058929918003</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-712521824">
              <stringProp name="335">564.6608282610734</stringProp>
              <stringProp name="336">564.6608282610734</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1108210752">
              <stringProp name="336">565.9157635303466</stringProp>
              <stringProp name="337">565.9157635303466</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="457001536">
              <stringProp name="337">567.1706987996197</stringProp>
              <stringProp name="338">567.1706987996197</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1987744480">
              <stringProp name="338">568.4256340688929</stringProp>
              <stringProp name="339">568.4256340688929</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-149963433">
              <stringProp name="339">575.2456445588218</stringProp>
              <stringProp name="340">575.2456445588218</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="630472320">
              <stringProp name="340">582.0656550487507</stringProp>
              <stringProp name="341">582.0656550487507</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1459120032">
              <stringProp name="341">588.8856655386796</stringProp>
              <stringProp name="342">588.8856655386796</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-257736512">
              <stringProp name="342">595.7056760286085</stringProp>
              <stringProp name="343">595.7056760286085</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1824754176">
              <stringProp name="343">602.1682249369617</stringProp>
              <stringProp name="344">602.1682249369617</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="896994528">
              <stringProp name="344">608.6307738453149</stringProp>
              <stringProp name="345">608.6307738453149</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1564682368">
              <stringProp name="345">615.0933227536682</stringProp>
              <stringProp name="346">615.0933227536682</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1477345568">
              <stringProp name="346">621.5558716620213</stringProp>
              <stringProp name="347">621.5558716620213</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1860732352">
              <stringProp name="347">619.8253779561126</stringProp>
              <stringProp name="348">619.8253779561126</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-288086752">
              <stringProp name="348">618.0948842502038</stringProp>
              <stringProp name="349">618.0948842502038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1460063959">
              <stringProp name="349">616.3643905442948</stringProp>
              <stringProp name="350">616.3643905442948</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1266829216">
              <stringProp name="350">614.6338968383861</stringProp>
              <stringProp name="351">614.6338968383861</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-238068000">
              <stringProp name="351">618.5478846293278</stringProp>
              <stringProp name="352">618.5478846293278</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-102695520">
              <stringProp name="352">622.4618724202694</stringProp>
              <stringProp name="353">622.4618724202694</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1491939584">
              <stringProp name="353">626.375860211211</stringProp>
              <stringProp name="354">626.375860211211</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1587544096">
              <stringProp name="354">630.2898480021527</stringProp>
              <stringProp name="355">630.2898480021527</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="4030528">
              <stringProp name="355">603.2402762658484</stringProp>
              <stringProp name="356">603.2402762658484</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-891242240">
              <stringProp name="356">576.190704529544</stringProp>
              <stringProp name="357">576.190704529544</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="310985216">
              <stringProp name="357">549.1411327932396</stringProp>
              <stringProp name="358">549.1411327932396</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1005581184">
              <stringProp name="358">522.0915610569353</stringProp>
              <stringProp name="359">522.0915610569353</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1971123529">
              <stringProp name="359">530.4406939662351</stringProp>
              <stringProp name="360">530.4406939662351</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1494887168">
              <stringProp name="360">538.789826875535</stringProp>
              <stringProp name="361">538.789826875535</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-259861792">
              <stringProp name="361">547.1389597848348</stringProp>
              <stringProp name="362">547.1389597848348</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-499981344">
              <stringProp name="362">555.4880926941347</stringProp>
              <stringProp name="363">555.4880926941347</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-689733088">
              <stringProp name="363">568.895441593293</stringProp>
              <stringProp name="364">568.895441593293</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-568588096">
              <stringProp name="364">582.3027904924512</stringProp>
              <stringProp name="365">582.3027904924512</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="399119968">
              <stringProp name="365">595.7101393916097</stringProp>
              <stringProp name="366">595.7101393916097</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-748024160">
              <stringProp name="366">609.1174882907679</stringProp>
              <stringProp name="367">609.1174882907679</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-865669216">
              <stringProp name="367">616.5786164307076</stringProp>
              <stringProp name="368">616.5786164307076</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1677809952">
              <stringProp name="368">624.0397445706474</stringProp>
              <stringProp name="369">624.0397445706474</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1656445129">
              <stringProp name="369">631.5008727105871</stringProp>
              <stringProp name="370">631.5008727105871</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1935663680">
              <stringProp name="370">638.9620008505268</stringProp>
              <stringProp name="371">638.9620008505268</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-104455776">
              <stringProp name="371">611.6154643745317</stringProp>
              <stringProp name="372">611.6154643745317</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="488076192">
              <stringProp name="372">584.2689278985367</stringProp>
              <stringProp name="373">584.2689278985367</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1022783328">
              <stringProp name="373">556.9223914225414</stringProp>
              <stringProp name="374">556.9223914225414</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="506362944">
              <stringProp name="374">529.5758549465462</stringProp>
              <stringProp name="375">529.5758549465462</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-968334880">
              <stringProp name="375">536.2127683796094</stringProp>
              <stringProp name="376">536.2127683796094</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="563712192">
              <stringProp name="376">542.8496818126727</stringProp>
              <stringProp name="377">542.8496818126727</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1831077280">
              <stringProp name="377">549.4865952457359</stringProp>
              <stringProp name="378">549.4865952457359</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="189068640">
              <stringProp name="378">556.123508678799</stringProp>
              <stringProp name="379">556.123508678799</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="34198711">
              <stringProp name="379">554.4614220132432</stringProp>
              <stringProp name="380">554.4614220132432</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1504814080">
              <stringProp name="380">552.7993353476874</stringProp>
              <stringProp name="381">552.7993353476874</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="314311616">
              <stringProp name="381">551.1372486821315</stringProp>
              <stringProp name="382">551.1372486821315</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1988785920">
              <stringProp name="382">549.4751620165756</stringProp>
              <stringProp name="383">549.4751620165756</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1948606336">
              <stringProp name="383">552.9503069945046</stringProp>
              <stringProp name="384">552.9503069945046</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1740023968">
              <stringProp name="384">556.4254519724333</stringProp>
              <stringProp name="385">556.4254519724333</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2096560928">
              <stringProp name="385">559.9005969503622</stringProp>
              <stringProp name="386">559.9005969503622</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1032712896">
              <stringProp name="386">563.3757419282911</stringProp>
              <stringProp name="387">563.3757419282911</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2129421440">
              <stringProp name="387">574.1216533982804</stringProp>
              <stringProp name="388">574.1216533982804</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-896382528">
              <stringProp name="388">584.8675648682697</stringProp>
              <stringProp name="389">584.8675648682697</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1038282007">
              <stringProp name="389">595.613476338259</stringProp>
              <stringProp name="390">595.613476338259</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-823226848">
              <stringProp name="390">606.3593878082482</stringProp>
              <stringProp name="391">606.3593878082482</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="750691328">
              <stringProp name="391">589.2511607823552</stringProp>
              <stringProp name="392">589.2511607823552</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1967909728">
              <stringProp name="392">572.1429337564621</stringProp>
              <stringProp name="393">572.1429337564621</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="482789376">
              <stringProp name="393">555.0347067305689</stringProp>
              <stringProp name="394">555.0347067305689</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2123630464">
              <stringProp name="394">537.926479704676</stringProp>
              <stringProp name="395">537.926479704676</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1926591840">
              <stringProp name="395">547.7382847186321</stringProp>
              <stringProp name="396">547.7382847186321</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2082367616">
              <stringProp name="396">557.5500897325885</stringProp>
              <stringProp name="397">557.5500897325885</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="445712288">
              <stringProp name="397">567.3618947465449</stringProp>
              <stringProp name="398">567.3618947465449</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-663852608">
              <stringProp name="398">577.1736997605011</stringProp>
              <stringProp name="399">577.1736997605011</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1232650720">
              <stringProp name="399">603.5579647982095</stringProp>
              <stringProp name="400">603.5579647982095</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-398787072">
              <stringProp name="400">629.9422298359176</stringProp>
              <stringProp name="401">629.9422298359176</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1303639904">
              <stringProp name="401">656.3264948736258</stringProp>
              <stringProp name="402">656.3264948736258</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="483567808">
              <stringProp name="402">682.710759911334</stringProp>
              <stringProp name="403">682.710759911334</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1190127360">
              <stringProp name="403">666.0416316259688</stringProp>
              <stringProp name="404">666.0416316259688</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1195259200">
              <stringProp name="404">649.3725033406037</stringProp>
              <stringProp name="405">649.3725033406037</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1334238976">
              <stringProp name="405">632.7033750552384</stringProp>
              <stringProp name="406">632.7033750552384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1790383552">
              <stringProp name="406">616.0342467698732</stringProp>
              <stringProp name="407">616.0342467698732</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1114470944">
              <stringProp name="407">610.3493421279076</stringProp>
              <stringProp name="408">610.3493421279076</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1834169664">
              <stringProp name="408">604.6644374859419</stringProp>
              <stringProp name="409">604.6644374859419</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1208623561">
              <stringProp name="409">598.9795328439764</stringProp>
              <stringProp name="410">598.9795328439764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1871865664">
              <stringProp name="410">593.2946282020106</stringProp>
              <stringProp name="411">593.2946282020106</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="248204800">
              <stringProp name="411">623.2986691493406</stringProp>
              <stringProp name="412">623.2986691493406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="145381952">
              <stringProp name="412">653.3027100966704</stringProp>
              <stringProp name="413">653.3027100966704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1180999936">
              <stringProp name="413">683.3067510440003</stringProp>
              <stringProp name="414">683.3067510440003</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1028173984">
              <stringProp name="414">713.3107919913305</stringProp>
              <stringProp name="415">713.3107919913305</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="662568768">
              <stringProp name="415">685.8480528327282</stringProp>
              <stringProp name="416">685.8480528327282</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1169835232">
              <stringProp name="416">658.385313674126</stringProp>
              <stringProp name="417">658.385313674126</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1016494336">
              <stringProp name="417">630.9225745155239</stringProp>
              <stringProp name="418">630.9225745155239</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2019770944">
              <stringProp name="418">603.4598353569218</stringProp>
              <stringProp name="419">603.4598353569218</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1375495895">
              <stringProp name="419">607.8869176374268</stringProp>
              <stringProp name="420">607.8869176374268</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-897483168">
              <stringProp name="420">612.3139999179318</stringProp>
              <stringProp name="421">612.3139999179318</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1939079776">
              <stringProp name="421">616.7410821984371</stringProp>
              <stringProp name="422">616.7410821984371</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-493651328">
              <stringProp name="422">621.1681644789421</stringProp>
              <stringProp name="423">621.1681644789421</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-322565056">
              <stringProp name="423">640.6170555101653</stringProp>
              <stringProp name="424">640.6170555101653</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1738553024">
              <stringProp name="424">660.0659465413889</stringProp>
              <stringProp name="425">660.0659465413889</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-669634176">
              <stringProp name="425">679.5148375726124</stringProp>
              <stringProp name="426">679.5148375726124</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="715220064">
              <stringProp name="426">698.9637286038358</stringProp>
              <stringProp name="427">698.9637286038358</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-715294400">
              <stringProp name="427">700.067068939222</stringProp>
              <stringProp name="428">700.067068939222</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-632097184">
              <stringProp name="428">701.1704092746085</stringProp>
              <stringProp name="429">701.1704092746085</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-480881833">
              <stringProp name="429">702.2737496099949</stringProp>
              <stringProp name="430">702.2737496099949</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1991866944">
              <stringProp name="430">703.3770899453813</stringProp>
              <stringProp name="431">703.3770899453813</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-723733696">
              <stringProp name="431">681.5171612368584</stringProp>
              <stringProp name="432">681.5171612368584</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-372182720">
              <stringProp name="432">659.6572325283361</stringProp>
              <stringProp name="433">659.6572325283361</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-122844928">
              <stringProp name="433">637.7973038198135</stringProp>
              <stringProp name="434">637.7973038198135</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="743237120">
              <stringProp name="434">615.9373751112909</stringProp>
              <stringProp name="435">615.9373751112909</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1651104352">
              <stringProp name="435">642.895219987065</stringProp>
              <stringProp name="436">642.895219987065</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="971258016">
              <stringProp name="436">669.8530648628391</stringProp>
              <stringProp name="437">669.8530648628391</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="624825632">
              <stringProp name="437">696.8109097386133</stringProp>
              <stringProp name="438">696.8109097386133</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-924287584">
              <stringProp name="438">723.7687546143874</stringProp>
              <stringProp name="439">723.7687546143874</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-308734121">
              <stringProp name="439">678.502739582789</stringProp>
              <stringProp name="440">678.502739582789</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-135472192">
              <stringProp name="440">633.2367245511907</stringProp>
              <stringProp name="441">633.2367245511907</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1739376576">
              <stringProp name="441">587.9707095195924</stringProp>
              <stringProp name="442">587.9707095195924</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1767700256">
              <stringProp name="442">542.7046944879941</stringProp>
              <stringProp name="443">542.7046944879941</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-843923712">
              <stringProp name="443">600.6647496770665</stringProp>
              <stringProp name="444">600.6647496770665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2077365696">
              <stringProp name="444">658.6248048661387</stringProp>
              <stringProp name="445">658.6248048661387</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1562654848">
              <stringProp name="445">716.5848600552109</stringProp>
              <stringProp name="446">716.5848600552109</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-178947680">
              <stringProp name="446">774.5449152442834</stringProp>
              <stringProp name="447">774.5449152442834</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1919950624">
              <stringProp name="447">750.7720834768918</stringProp>
              <stringProp name="448">750.7720834768918</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="156306496">
              <stringProp name="448">726.9992517095005</stringProp>
              <stringProp name="449">726.9992517095005</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1339690423">
              <stringProp name="449">703.2264199421095</stringProp>
              <stringProp name="450">703.2264199421095</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-957121856">
              <stringProp name="450">679.4535881747179</stringProp>
              <stringProp name="451">679.4535881747179</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1352386592">
              <stringProp name="451">686.140394064523</stringProp>
              <stringProp name="452">686.140394064523</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="677569472">
              <stringProp name="452">692.8271999543283</stringProp>
              <stringProp name="453">692.8271999543283</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-200843712">
              <stringProp name="453">699.5140058441334</stringProp>
              <stringProp name="454">699.5140058441334</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1582516128">
              <stringProp name="454">706.2008117339384</stringProp>
              <stringProp name="455">706.2008117339384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-910473568">
              <stringProp name="455">678.7728134699769</stringProp>
              <stringProp name="456">678.7728134699769</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2077954464">
              <stringProp name="456">651.3448152060157</stringProp>
              <stringProp name="457">651.3448152060157</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1861751808">
              <stringProp name="457">623.9168169420542</stringProp>
              <stringProp name="458">623.9168169420542</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-646995936">
              <stringProp name="458">596.4888186780927</stringProp>
              <stringProp name="459">596.4888186780927</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1544659511">
              <stringProp name="459">649.4744440440494</stringProp>
              <stringProp name="460">649.4744440440494</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="452313856">
              <stringProp name="460">702.4600694100061</stringProp>
              <stringProp name="461">702.4600694100061</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1464222688">
              <stringProp name="461">755.4456947759629</stringProp>
              <stringProp name="462">755.4456947759629</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1814318496">
              <stringProp name="462">808.4313201419195</stringProp>
              <stringProp name="463">808.4313201419195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="521818528">
              <stringProp name="463">773.6533052658765</stringProp>
              <stringProp name="464">773.6533052658765</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1696375104">
              <stringProp name="464">738.8752903898337</stringProp>
              <stringProp name="465">738.8752903898337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="168640832">
              <stringProp name="465">704.0972755137905</stringProp>
              <stringProp name="466">704.0972755137905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-354883552">
              <stringProp name="466">669.3192606377473</stringProp>
              <stringProp name="467">669.3192606377473</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-186251104">
              <stringProp name="467">653.3393730488899</stringProp>
              <stringProp name="468">653.3393730488899</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-773264416">
              <stringProp name="468">637.3594854600324</stringProp>
              <stringProp name="469">637.3594854600324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="752916823">
              <stringProp name="469">621.3795978711748</stringProp>
              <stringProp name="470">621.3795978711748</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1917792224">
              <stringProp name="470">605.3997102823173</stringProp>
              <stringProp name="471">605.3997102823173</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1074650272">
              <stringProp name="471">585.6232089291249</stringProp>
              <stringProp name="472">585.6232089291249</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-372104512">
              <stringProp name="472">565.8467075759324</stringProp>
              <stringProp name="473">565.8467075759324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1981830368">
              <stringProp name="473">546.07020622274</stringProp>
              <stringProp name="474">546.07020622274</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="562043136">
              <stringProp name="474">526.2937048695476</stringProp>
              <stringProp name="475">526.2937048695476</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1140239712">
              <stringProp name="475">607.0891360192946</stringProp>
              <stringProp name="476">607.0891360192946</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1690056128">
              <stringProp name="476">687.8845671690415</stringProp>
              <stringProp name="477">687.8845671690415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="289917312">
              <stringProp name="477">768.6799983187884</stringProp>
              <stringProp name="478">768.6799983187884</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="479825408">
              <stringProp name="478">849.4754294685354</stringProp>
              <stringProp name="479">849.4754294685354</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1514024265">
              <stringProp name="479">823.4138073393722</stringProp>
              <stringProp name="480">823.4138073393722</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1302556832">
              <stringProp name="480">797.3521852102092</stringProp>
              <stringProp name="481">797.3521852102092</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-317671360">
              <stringProp name="481">771.290563081046</stringProp>
              <stringProp name="482">771.290563081046</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1180323968">
              <stringProp name="482">745.2289409518828</stringProp>
              <stringProp name="483">745.2289409518828</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="127350784">
              <stringProp name="483">722.9006257273676</stringProp>
              <stringProp name="484">722.9006257273676</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-453456672">
              <stringProp name="484">700.5723105028522</stringProp>
              <stringProp name="485">700.5723105028522</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1152434112">
              <stringProp name="485">678.243995278337</stringProp>
              <stringProp name="486">678.243995278337</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1762717088">
              <stringProp name="486">655.9156800538217</stringProp>
              <stringProp name="487">655.9156800538217</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="486236576">
              <stringProp name="487">672.1152438150773</stringProp>
              <stringProp name="488">672.1152438150773</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1983367616">
              <stringProp name="488">688.314807576333</stringProp>
              <stringProp name="489">688.314807576333</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1638541655">
              <stringProp name="489">704.5143713375885</stringProp>
              <stringProp name="490">704.5143713375885</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-513485440">
              <stringProp name="490">720.7139350988443</stringProp>
              <stringProp name="491">720.7139350988443</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-742821184">
              <stringProp name="491">730.8631232751206</stringProp>
              <stringProp name="492">730.8631232751206</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1463985792">
              <stringProp name="492">741.012311451397</stringProp>
              <stringProp name="493">741.012311451397</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1035123328">
              <stringProp name="493">751.1614996276729</stringProp>
              <stringProp name="494">751.1614996276729</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-818509184">
              <stringProp name="494">761.3106878039495</stringProp>
              <stringProp name="495">761.3106878039495</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-111318528">
              <stringProp name="495">782.3999860049349</stringProp>
              <stringProp name="496">782.3999860049349</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1424880384">
              <stringProp name="496">803.4892842059201</stringProp>
              <stringProp name="497">803.4892842059201</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="439897824">
              <stringProp name="497">824.5785824069052</stringProp>
              <stringProp name="498">824.5785824069052</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-564456512">
              <stringProp name="498">845.6678806078905</stringProp>
              <stringProp name="499">845.6678806078905</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-363519040">
              <stringProp name="499">820.7061982278663</stringProp>
              <stringProp name="500">820.7061982278663</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-268633632">
              <stringProp name="500">795.7445158478422</stringProp>
              <stringProp name="501">795.7445158478422</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1061685024">
              <stringProp name="501">770.7828334678179</stringProp>
              <stringProp name="502">770.7828334678179</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1590405856">
              <stringProp name="502">745.8211510877936</stringProp>
              <stringProp name="503">745.8211510877936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="660923264">
              <stringProp name="503">761.5933948502613</stringProp>
              <stringProp name="504">761.5933948502613</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1555775936">
              <stringProp name="504">777.365638612729</stringProp>
              <stringProp name="505">777.365638612729</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1541090816">
              <stringProp name="505">793.1378823751967</stringProp>
              <stringProp name="506">793.1378823751967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1585481664">
              <stringProp name="506">808.9101261376643</stringProp>
              <stringProp name="507">808.9101261376643</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-576045440">
              <stringProp name="507">787.3833373132088</stringProp>
              <stringProp name="508">787.3833373132088</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1787560768">
              <stringProp name="508">765.8565484887534</stringProp>
              <stringProp name="509">765.8565484887534</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1505371657">
              <stringProp name="509">744.3297596642982</stringProp>
              <stringProp name="510">744.3297596642982</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1583534208">
              <stringProp name="510">722.8029708398429</stringProp>
              <stringProp name="511">722.8029708398429</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="722832736">
              <stringProp name="511">712.0199144278623</stringProp>
              <stringProp name="512">712.0199144278623</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-921236288">
              <stringProp name="512">701.2368580158817</stringProp>
              <stringProp name="513">701.2368580158817</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1874468576">
              <stringProp name="513">690.4538016039011</stringProp>
              <stringProp name="514">690.4538016039011</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="309961344">
              <stringProp name="514">679.6707451919203</stringProp>
              <stringProp name="515">679.6707451919203</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-213967328">
              <stringProp name="515">655.8766456312824</stringProp>
              <stringProp name="516">655.8766456312824</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1841013184">
              <stringProp name="516">632.0825460706441</stringProp>
              <stringProp name="517">632.0825460706441</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1431604448">
              <stringProp name="517">608.2884465100059</stringProp>
              <stringProp name="518">608.2884465100059</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="779319520">
              <stringProp name="518">584.4943469493678</stringProp>
              <stringProp name="519">584.4943469493678</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-822435689">
              <stringProp name="519">595.1249606529022</stringProp>
              <stringProp name="520">595.1249606529022</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2042754592">
              <stringProp name="520">605.7555743564365</stringProp>
              <stringProp name="521">605.7555743564365</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="932914432">
              <stringProp name="521">616.3861880599707</stringProp>
              <stringProp name="522">616.3861880599707</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1899434336">
              <stringProp name="522">627.0168017635051</stringProp>
              <stringProp name="523">627.0168017635051</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-59122048">
              <stringProp name="523">637.4938210546488</stringProp>
              <stringProp name="524">637.4938210546488</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-753906848">
              <stringProp name="524">647.9708403457927</stringProp>
              <stringProp name="525">647.9708403457927</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="567837824">
              <stringProp name="525">658.4478596369363</stringProp>
              <stringProp name="526">658.4478596369363</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="492989536">
              <stringProp name="526">668.9248789280799</stringProp>
              <stringProp name="527">668.9248789280799</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1714622336">
              <stringProp name="527">666.5879161337004</stringProp>
              <stringProp name="528">666.5879161337004</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="430287584">
              <stringProp name="528">664.2509533393211</stringProp>
              <stringProp name="529">664.2509533393211</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-538473865">
              <stringProp name="529">661.9139905449416</stringProp>
              <stringProp name="530">661.9139905449416</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1456807456">
              <stringProp name="530">659.5770277505619</stringProp>
              <stringProp name="531">659.5770277505619</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1045225568">
              <stringProp name="531">660.8160502044516</stringProp>
              <stringProp name="532">660.8160502044516</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="215489888">
              <stringProp name="532">662.0550726583411</stringProp>
              <stringProp name="533">662.0550726583411</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1794559456">
              <stringProp name="533">663.294095112231</stringProp>
              <stringProp name="534">663.294095112231</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1322444928">
              <stringProp name="534">664.5331175661206</stringProp>
              <stringProp name="535">664.5331175661206</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="606220224">
              <stringProp name="535">639.2018314358503</stringProp>
              <stringProp name="536">639.2018314358503</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-317951136">
              <stringProp name="536">613.8705453055799</stringProp>
              <stringProp name="537">613.8705453055799</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1062712224">
              <stringProp name="537">588.5392591753093</stringProp>
              <stringProp name="538">588.5392591753093</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-639935904">
              <stringProp name="538">563.2079730450389</stringProp>
              <stringProp name="539">563.2079730450389</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="717820983">
              <stringProp name="539">574.6608321392888</stringProp>
              <stringProp name="540">574.6608321392888</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2038540448">
              <stringProp name="540">586.1136912335386</stringProp>
              <stringProp name="541">586.1136912335386</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1742935296">
              <stringProp name="541">597.5665503277885</stringProp>
              <stringProp name="542">597.5665503277885</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-690740608">
              <stringProp name="542">609.0194094220384</stringProp>
              <stringProp name="543">609.0194094220384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-532117120">
              <stringProp name="543">625.9096891214682</stringProp>
              <stringProp name="544">625.9096891214682</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1068245696">
              <stringProp name="544">642.799968820898</stringProp>
              <stringProp name="545">642.799968820898</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2041287072">
              <stringProp name="545">659.6902485203279</stringProp>
              <stringProp name="546">659.6902485203279</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="640678368">
              <stringProp name="546">676.5805282197576</stringProp>
              <stringProp name="547">676.5805282197576</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1538740672">
              <stringProp name="547">629.1871624103886</stringProp>
              <stringProp name="548">629.1871624103886</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1395894368">
              <stringProp name="548">581.7937966010196</stringProp>
              <stringProp name="549">581.7937966010196</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-531572713">
              <stringProp name="549">534.4004307916507</stringProp>
              <stringProp name="550">534.4004307916507</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-231594304">
              <stringProp name="550">487.0070649822816</stringProp>
              <stringProp name="551">487.0070649822816</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1208376320">
              <stringProp name="551">573.2341248995403</stringProp>
              <stringProp name="552">573.2341248995403</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1811668512">
              <stringProp name="552">659.4611848167995</stringProp>
              <stringProp name="553">659.4611848167995</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1463587264">
              <stringProp name="553">745.6882447340582</stringProp>
              <stringProp name="554">745.6882447340582</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="179366560">
              <stringProp name="554">831.915304651317</stringProp>
              <stringProp name="555">831.915304651317</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="924675040">
              <stringProp name="555">749.9953467996605</stringProp>
              <stringProp name="556">749.9953467996605</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1772644928">
              <stringProp name="556">668.075388948004</stringProp>
              <stringProp name="557">668.075388948004</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1946375744">
              <stringProp name="557">586.1554310963476</stringProp>
              <stringProp name="558">586.1554310963476</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-989772384">
              <stringProp name="558">504.235473244691</stringProp>
              <stringProp name="559">504.235473244691</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-602507561">
              <stringProp name="559">486.7079716444927</stringProp>
              <stringProp name="560">486.7079716444927</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="632845696">
              <stringProp name="560">469.1804700442943</stringProp>
              <stringProp name="561">469.1804700442943</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1674849184">
              <stringProp name="561">451.652968444096</stringProp>
              <stringProp name="562">451.652968444096</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1736229664">
              <stringProp name="562">434.12546684389775</stringProp>
              <stringProp name="563">434.12546684389775</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-931470240">
              <stringProp name="563">474.0187915419034</stringProp>
              <stringProp name="564">474.0187915419034</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-691167264">
              <stringProp name="564">513.9121162399091</stringProp>
              <stringProp name="565">513.9121162399091</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1206337344">
              <stringProp name="565">553.8054409379145</stringProp>
              <stringProp name="566">553.8054409379145</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-52062560">
              <stringProp name="566">593.6987656359203</stringProp>
              <stringProp name="567">593.6987656359203</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1598652704">
              <stringProp name="567">568.5884755807966</stringProp>
              <stringProp name="568">568.5884755807966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1131573056">
              <stringProp name="568">543.4781855256732</stringProp>
              <stringProp name="569">543.4781855256732</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-827131273">
              <stringProp name="569">518.3678954705496</stringProp>
              <stringProp name="570">518.3678954705496</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="902395968">
              <stringProp name="570">493.2576054154261</stringProp>
              <stringProp name="571">493.2576054154261</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1127186912">
              <stringProp name="571">502.7816896639527</stringProp>
              <stringProp name="572">502.7816896639527</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1102350400">
              <stringProp name="572">512.3057739124793</stringProp>
              <stringProp name="573">512.3057739124793</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1797749952">
              <stringProp name="573">521.8298581610056</stringProp>
              <stringProp name="574">521.8298581610056</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-413725824">
              <stringProp name="574">531.3539424095324</stringProp>
              <stringProp name="575">531.3539424095324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-408617216">
              <stringProp name="575">535.454861893633</stringProp>
              <stringProp name="576">535.454861893633</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="598624480">
              <stringProp name="576">539.5557813777339</stringProp>
              <stringProp name="577">539.5557813777339</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1971886688">
              <stringProp name="577">543.6567008618346</stringProp>
              <stringProp name="578">543.6567008618346</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1676625632">
              <stringProp name="578">547.7576203459353</stringProp>
              <stringProp name="579">547.7576203459353</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="652751831">
              <stringProp name="579">522.4938262172442</stringProp>
              <stringProp name="580">522.4938262172442</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-141689888">
              <stringProp name="580">497.2300320885531</stringProp>
              <stringProp name="581">497.2300320885531</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1627401760">
              <stringProp name="581">471.9662379598621</stringProp>
              <stringProp name="582">471.9662379598621</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1153483872">
              <stringProp name="582">446.70244383117097</stringProp>
              <stringProp name="583">446.70244383117097</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1376135264">
              <stringProp name="583">464.95529051322495</stringProp>
              <stringProp name="584">464.95529051322495</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1858684800">
              <stringProp name="584">483.2081371952789</stringProp>
              <stringProp name="585">483.2081371952789</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1624557504">
              <stringProp name="585">501.46098387733286</stringProp>
              <stringProp name="586">501.46098387733286</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-836720640">
              <stringProp name="586">519.7138305593868</stringProp>
              <stringProp name="587">519.7138305593868</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1008381280">
              <stringProp name="587">482.3838778937673</stringProp>
              <stringProp name="588">482.3838778937673</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="187205248">
              <stringProp name="588">445.0539252281478</stringProp>
              <stringProp name="589">445.0539252281478</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2034758889">
              <stringProp name="589">407.7239725625285</stringProp>
              <stringProp name="590">407.7239725625285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1826445632">
              <stringProp name="590">370.3940198969088</stringProp>
              <stringProp name="591">370.3940198969088</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1630247904">
              <stringProp name="591">391.94608047975686</stringProp>
              <stringProp name="592">391.94608047975686</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1380954496">
              <stringProp name="592">413.4981410626049</stringProp>
              <stringProp name="593">413.4981410626049</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="576069984">
              <stringProp name="593">435.0502016454526</stringProp>
              <stringProp name="594">435.0502016454526</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-636346656">
              <stringProp name="594">456.60226222830056</stringProp>
              <stringProp name="595">456.60226222830056</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="289528320">
              <stringProp name="595">473.4125238928575</stringProp>
              <stringProp name="596">473.4125238928575</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="562297120">
              <stringProp name="596">490.2227855574144</stringProp>
              <stringProp name="597">490.2227855574144</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1047402176">
              <stringProp name="597">507.0330472219714</stringProp>
              <stringProp name="598">507.0330472219714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="654196640">
              <stringProp name="598">523.8433088865282</stringProp>
              <stringProp name="599">523.8433088865282</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2126944544">
              <stringProp name="599">505.888249111621</stringProp>
              <stringProp name="600">505.888249111621</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-376465312">
              <stringProp name="600">487.9331893367138</stringProp>
              <stringProp name="601">487.9331893367138</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1135233664">
              <stringProp name="601">469.9781295618066</stringProp>
              <stringProp name="602">469.9781295618066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="412225792">
              <stringProp name="602">452.0230697868994</stringProp>
              <stringProp name="603">452.0230697868994</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1926122144">
              <stringProp name="603">421.2185233584864</stringProp>
              <stringProp name="604">421.2185233584864</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1733532960">
              <stringProp name="604">390.4139769300735</stringProp>
              <stringProp name="605">390.4139769300735</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2024162528">
              <stringProp name="605">359.6094305016605</stringProp>
              <stringProp name="606">359.6094305016605</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1021946656">
              <stringProp name="606">328.8048840732475</stringProp>
              <stringProp name="607">328.8048840732475</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1545519168">
              <stringProp name="607">347.20618080520694</stringProp>
              <stringProp name="608">347.20618080520694</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-586850720">
              <stringProp name="608">365.6074775371664</stringProp>
              <stringProp name="609">365.6074775371664</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-266740393">
              <stringProp name="609">384.0087742691257</stringProp>
              <stringProp name="610">384.0087742691257</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1152045120">
              <stringProp name="610">402.4100710010852</stringProp>
              <stringProp name="611">402.4100710010852</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1192413984">
              <stringProp name="611">390.4263126846252</stringProp>
              <stringProp name="612">390.4263126846252</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1992174464">
              <stringProp name="612">378.4425543681652</stringProp>
              <stringProp name="613">378.4425543681652</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="250713600">
              <stringProp name="613">366.4587960517052</stringProp>
              <stringProp name="614">366.4587960517052</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-636524672">
              <stringProp name="614">354.4750377352451</stringProp>
              <stringProp name="615">354.4750377352451</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="207129536">
              <stringProp name="615">360.7006465164581</stringProp>
              <stringProp name="616">360.7006465164581</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2067254432">
              <stringProp name="616">366.926255297671</stringProp>
              <stringProp name="617">366.926255297671</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1945968480">
              <stringProp name="617">373.151864078884</stringProp>
              <stringProp name="618">373.151864078884</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1525179168">
              <stringProp name="618">379.3774728600968</stringProp>
              <stringProp name="619">379.3774728600968</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1605582455">
              <stringProp name="619">387.4305664029639</stringProp>
              <stringProp name="620">387.4305664029639</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="134338816">
              <stringProp name="620">395.483659945831</stringProp>
              <stringProp name="621">395.483659945831</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="694739584">
              <stringProp name="621">403.536753488698</stringProp>
              <stringProp name="622">403.536753488698</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="427401984">
              <stringProp name="622">411.5898470315651</stringProp>
              <stringProp name="623">411.5898470315651</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1230918272">
              <stringProp name="623">409.2071938487397</stringProp>
              <stringProp name="624">409.2071938487397</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1396769600">
              <stringProp name="624">406.82454066591424</stringProp>
              <stringProp name="625">406.82454066591424</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2128334656">
              <stringProp name="625">404.44188748308886</stringProp>
              <stringProp name="626">404.44188748308886</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1366070848">
              <stringProp name="626">402.0592343002635</stringProp>
              <stringProp name="627">402.0592343002635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1891464128">
              <stringProp name="627">390.01534082308285</stringProp>
              <stringProp name="628">390.01534082308285</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1595242720">
              <stringProp name="628">377.9714473459023</stringProp>
              <stringProp name="629">377.9714473459023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1529867017">
              <stringProp name="629">365.9275538687217</stringProp>
              <stringProp name="630">365.9275538687217</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1789740384">
              <stringProp name="630">353.88366039154107</stringProp>
              <stringProp name="631">353.88366039154107</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-824253536">
              <stringProp name="631">364.1921107806814</stringProp>
              <stringProp name="632">364.1921107806814</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="137308640">
              <stringProp name="632">374.5005611698216</stringProp>
              <stringProp name="633">374.5005611698216</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1680660256">
              <stringProp name="633">384.809011558962</stringProp>
              <stringProp name="634">384.809011558962</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-909403328">
              <stringProp name="634">395.1174619481022</stringProp>
              <stringProp name="635">395.1174619481022</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-694234144">
              <stringProp name="635">381.6789768395522</stringProp>
              <stringProp name="636">381.6789768395522</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1733367040">
              <stringProp name="636">368.2404917310021</stringProp>
              <stringProp name="637">368.2404917310021</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-695114208">
              <stringProp name="637">354.8020066224522</stringProp>
              <stringProp name="638">354.8020066224522</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1794569312">
              <stringProp name="638">341.36352151390224</stringProp>
              <stringProp name="639">341.36352151390224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1306859657">
              <stringProp name="639">333.9508688188434</stringProp>
              <stringProp name="640">333.9508688188434</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1874509152">
              <stringProp name="640">326.5382161237848</stringProp>
              <stringProp name="641">326.5382161237848</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="90660896">
              <stringProp name="641">319.125563428726</stringProp>
              <stringProp name="642">319.125563428726</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-897270208">
              <stringProp name="642">311.71291073366723</stringProp>
              <stringProp name="643">311.71291073366723</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-121580224">
              <stringProp name="643">304.3383110681198</stringProp>
              <stringProp name="644">304.3383110681198</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1075708672">
              <stringProp name="644">296.96371140257224</stringProp>
              <stringProp name="645">296.96371140257224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="676071072">
              <stringProp name="645">289.5891117370247</stringProp>
              <stringProp name="646">289.5891117370247</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-595410272">
              <stringProp name="646">282.2145120714772</stringProp>
              <stringProp name="647">282.2145120714772</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1579957408">
              <stringProp name="647">283.9916777024704</stringProp>
              <stringProp name="648">283.9916777024704</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1893736192">
              <stringProp name="648">285.7688433334633</stringProp>
              <stringProp name="649">285.7688433334633</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1248529335">
              <stringProp name="649">287.54600896445635</stringProp>
              <stringProp name="650">287.54600896445635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="679214208">
              <stringProp name="650">289.3231745954496</stringProp>
              <stringProp name="651">289.3231745954496</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1560182880">
              <stringProp name="651">304.373431658802</stringProp>
              <stringProp name="652">304.373431658802</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="569325856">
              <stringProp name="652">319.4236887221547</stringProp>
              <stringProp name="653">319.4236887221547</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-775712544">
              <stringProp name="653">334.4739457855073</stringProp>
              <stringProp name="654">334.4739457855073</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="773950560">
              <stringProp name="654">349.5242028488599</stringProp>
              <stringProp name="655">349.5242028488599</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1412654944">
              <stringProp name="655">322.23075994515006</stringProp>
              <stringProp name="656">322.23075994515006</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="382398880">
              <stringProp name="656">294.9373170414402</stringProp>
              <stringProp name="657">294.9373170414402</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="180608032">
              <stringProp name="657">267.6438741377303</stringProp>
              <stringProp name="658">267.6438741377303</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1384693088">
              <stringProp name="658">240.35043123402056</stringProp>
              <stringProp name="659">240.35043123402056</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="392118999">
              <stringProp name="659">268.23181913459325</stringProp>
              <stringProp name="660">268.23181913459325</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1375768704">
              <stringProp name="660">296.11320703516594</stringProp>
              <stringProp name="661">296.11320703516594</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-351776864">
              <stringProp name="661">323.9945949357387</stringProp>
              <stringProp name="662">323.9945949357387</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-346601728">
              <stringProp name="662">351.8759828363114</stringProp>
              <stringProp name="663">351.8759828363114</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1235535648">
              <stringProp name="663">324.6528437447876</stringProp>
              <stringProp name="664">324.6528437447876</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-571314688">
              <stringProp name="664">297.4297046532637</stringProp>
              <stringProp name="665">297.4297046532637</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="462348160">
              <stringProp name="665">270.2065655617399</stringProp>
              <stringProp name="666">270.2065655617399</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1423642656">
              <stringProp name="666">242.9834264702161</stringProp>
              <stringProp name="667">242.9834264702161</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1805335136">
              <stringProp name="667">257.5454991669475</stringProp>
              <stringProp name="668">257.5454991669475</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-464277440">
              <stringProp name="668">272.10757186367886</stringProp>
              <stringProp name="669">272.10757186367886</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-814197577">
              <stringProp name="669">286.66964456041023</stringProp>
              <stringProp name="670">286.66964456041023</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="903042656">
              <stringProp name="670">301.2317172571415</stringProp>
              <stringProp name="671">301.2317172571415</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1014887328">
              <stringProp name="671">301.2286175895716</stringProp>
              <stringProp name="672">301.2286175895716</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="12990368">
              <stringProp name="672">301.2255179220018</stringProp>
              <stringProp name="673">301.2255179220018</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1022852896">
              <stringProp name="673">301.22241825443183</stringProp>
              <stringProp name="674">301.22241825443183</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1426811648">
              <stringProp name="674">301.219318586862</stringProp>
              <stringProp name="675">301.219318586862</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2072714016">
              <stringProp name="675">309.1219037042969</stringProp>
              <stringProp name="676">309.1219037042969</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1539149024">
              <stringProp name="676">317.0244888217317</stringProp>
              <stringProp name="677">317.0244888217317</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1391620672">
              <stringProp name="677">324.92707393916663</stringProp>
              <stringProp name="678">324.92707393916663</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1737484192">
              <stringProp name="678">332.82965905660154</stringProp>
              <stringProp name="679">332.82965905660154</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="221806519">
              <stringProp name="679">333.70542492043273</stringProp>
              <stringProp name="680">333.70542492043273</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1821213536">
              <stringProp name="680">334.581190784264</stringProp>
              <stringProp name="681">334.581190784264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1396393440">
              <stringProp name="681">335.45695664809506</stringProp>
              <stringProp name="682">335.45695664809506</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-926426528">
              <stringProp name="682">336.3327225119264</stringProp>
              <stringProp name="683">336.3327225119264</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-269838080">
              <stringProp name="683">327.1951462599499</stringProp>
              <stringProp name="684">327.1951462599499</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-513086912">
              <stringProp name="684">318.0575700079734</stringProp>
              <stringProp name="685">318.0575700079734</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1373090304">
              <stringProp name="685">308.91999375599687</stringProp>
              <stringProp name="686">308.91999375599687</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1871629728">
              <stringProp name="686">299.7824175040205</stringProp>
              <stringProp name="687">299.7824175040205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1877770240">
              <stringProp name="687">302.89111326280795</stringProp>
              <stringProp name="688">302.89111326280795</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1248408032">
              <stringProp name="688">305.9998090215955</stringProp>
              <stringProp name="689">305.9998090215955</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1790197801">
              <stringProp name="689">309.108504780383</stringProp>
              <stringProp name="690">309.108504780383</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-55006816">
              <stringProp name="690">312.21720053917056</stringProp>
              <stringProp name="691">312.21720053917056</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1205406720">
              <stringProp name="691">303.9139776092038</stringProp>
              <stringProp name="692">303.9139776092038</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-3225184">
              <stringProp name="692">295.61075467923695</stringProp>
              <stringProp name="693">295.61075467923695</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="912033600">
              <stringProp name="693">287.30753174927014</stringProp>
              <stringProp name="694">287.30753174927014</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="932346880">
              <stringProp name="694">279.0043088193034</stringProp>
              <stringProp name="695">279.0043088193034</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-40632128">
              <stringProp name="695">272.71321037889163</stringProp>
              <stringProp name="696">272.71321037889163</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="782776640">
              <stringProp name="696">266.42211193848</stringProp>
              <stringProp name="697">266.42211193848</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-348344320">
              <stringProp name="697">260.1310134980682</stringProp>
              <stringProp name="698">260.1310134980682</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1243545824">
              <stringProp name="698">253.83991505765655</stringProp>
              <stringProp name="699">253.83991505765655</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-913995232">
              <stringProp name="699">277.97376717884504</stringProp>
              <stringProp name="700">277.97376717884504</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1657277600">
              <stringProp name="700">302.1076193000336</stringProp>
              <stringProp name="701">302.1076193000336</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="930016160">
              <stringProp name="701">326.2414714212222</stringProp>
              <stringProp name="702">326.2414714212222</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="97472576">
              <stringProp name="702">350.3753235424106</stringProp>
              <stringProp name="703">350.3753235424106</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="612461248">
              <stringProp name="703">348.76069511177366</stringProp>
              <stringProp name="704">348.76069511177366</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1157707232">
              <stringProp name="704">347.14606668113646</stringProp>
              <stringProp name="705">347.14606668113646</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1426013952">
              <stringProp name="705">345.5314382504995</stringProp>
              <stringProp name="706">345.5314382504995</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-719043616">
              <stringProp name="706">343.9168098198625</stringProp>
              <stringProp name="707">343.9168098198625</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="658875584">
              <stringProp name="707">339.00369244209907</stringProp>
              <stringProp name="708">339.00369244209907</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1936545216">
              <stringProp name="708">334.0905750643356</stringProp>
              <stringProp name="709">334.0905750643356</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2061746921">
              <stringProp name="709">329.17745768657227</stringProp>
              <stringProp name="710">329.17745768657227</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-390475488">
              <stringProp name="710">324.2643403088088</stringProp>
              <stringProp name="711">324.2643403088088</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-969301600">
              <stringProp name="711">322.3099791275171</stringProp>
              <stringProp name="712">322.3099791275171</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1539698848">
              <stringProp name="712">320.3556179462255</stringProp>
              <stringProp name="713">320.3556179462255</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="866912864">
              <stringProp name="713">318.4012567649338</stringProp>
              <stringProp name="714">318.4012567649338</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="752757472">
              <stringProp name="714">316.4468955836421</stringProp>
              <stringProp name="715">316.4468955836421</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1094219328">
              <stringProp name="715">346.9814722305159</stringProp>
              <stringProp name="716">346.9814722305159</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1196792480">
              <stringProp name="716">377.51604887738966</stringProp>
              <stringProp name="717">377.51604887738966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1272405856">
              <stringProp name="717">408.0506255242634</stringProp>
              <stringProp name="718">408.0506255242634</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1177183904">
              <stringProp name="718">438.5852021711372</stringProp>
              <stringProp name="719">438.5852021711372</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1800452393">
              <stringProp name="719">385.640841190965</stringProp>
              <stringProp name="720">385.640841190965</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1848293184">
              <stringProp name="720">332.6964802107927</stringProp>
              <stringProp name="721">332.6964802107927</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1139404384">
              <stringProp name="721">279.7521192306205</stringProp>
              <stringProp name="722">279.7521192306205</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1178367680">
              <stringProp name="722">226.8077582504483</stringProp>
              <stringProp name="723">226.8077582504483</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Alibaba7Testing" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREADS, 10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP, 60)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="Alibaba7Testing" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-1905720736">
              <stringProp name="723">236.80147576755195</stringProp>
              <stringProp name="724">236.80147576755195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1841061088">
              <stringProp name="724">246.7951932846556</stringProp>
              <stringProp name="725">246.7951932846556</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-567883296">
              <stringProp name="725">256.78891080175936</stringProp>
              <stringProp name="726">256.78891080175936</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1684147360">
              <stringProp name="726">266.78262831886315</stringProp>
              <stringProp name="727">266.78262831886315</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-937943616">
              <stringProp name="727">276.6862680175389</stringProp>
              <stringProp name="728">276.6862680175389</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1246278304">
              <stringProp name="728">286.5899077162147</stringProp>
              <stringProp name="729">286.5899077162147</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1229240695">
              <stringProp name="729">296.49354741489066</stringProp>
              <stringProp name="730">296.49354741489066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-398102048">
              <stringProp name="730">306.3971871135665</stringProp>
              <stringProp name="731">306.3971871135665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1749049408">
              <stringProp name="731">314.3253537820504</stringProp>
              <stringProp name="732">314.3253537820504</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="917766848">
              <stringProp name="732">322.2535204505343</stringProp>
              <stringProp name="733">322.2535204505343</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="989881952">
              <stringProp name="733">330.1816871190183</stringProp>
              <stringProp name="734">330.1816871190183</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-837179200">
              <stringProp name="734">338.10985378750223</stringProp>
              <stringProp name="735">338.10985378750223</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="269509920">
              <stringProp name="735">346.54031507384764</stringProp>
              <stringProp name="736">346.54031507384764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2009089440">
              <stringProp name="736">354.97077636019327</stringProp>
              <stringProp name="737">354.97077636019327</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1609386432">
              <stringProp name="737">363.40123764653873</stringProp>
              <stringProp name="738">363.40123764653873</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1290013920">
              <stringProp name="738">371.83169893288425</stringProp>
              <stringProp name="739">371.83169893288425</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1582535113">
              <stringProp name="739">358.9816415158701</stringProp>
              <stringProp name="740">358.9816415158701</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-145154080">
              <stringProp name="740">346.1315840988558</stringProp>
              <stringProp name="741">346.1315840988558</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1391384640">
              <stringProp name="741">333.28152668184174</stringProp>
              <stringProp name="742">333.28152668184174</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1780963264">
              <stringProp name="742">320.4314692648276</stringProp>
              <stringProp name="743">320.4314692648276</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-240604832">
              <stringProp name="743">327.41671698870266</stringProp>
              <stringProp name="744">327.41671698870266</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-601265920">
              <stringProp name="744">334.40196471257764</stringProp>
              <stringProp name="745">334.40196471257764</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1844312224">
              <stringProp name="745">341.38721243645284</stringProp>
              <stringProp name="746">341.38721243645284</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1962260992">
              <stringProp name="746">348.372460160328</stringProp>
              <stringProp name="747">348.372460160328</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1373492000">
              <stringProp name="747">366.23641688560735</stringProp>
              <stringProp name="748">366.23641688560735</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1715828128">
              <stringProp name="748">384.10037361088666</stringProp>
              <stringProp name="749">384.10037361088666</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1008683721">
              <stringProp name="749">401.964330336166</stringProp>
              <stringProp name="750">401.964330336166</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-704677280">
              <stringProp name="750">419.8282870614454</stringProp>
              <stringProp name="751">419.8282870614454</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1878248800">
              <stringProp name="751">419.2081095647862</stringProp>
              <stringProp name="752">419.2081095647862</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-811444736">
              <stringProp name="752">418.58793206812703</stringProp>
              <stringProp name="753">418.58793206812703</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1542393312">
              <stringProp name="753">417.9677545714681</stringProp>
              <stringProp name="754">417.9677545714681</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2055617984">
              <stringProp name="754">417.3475770748088</stringProp>
              <stringProp name="755">417.3475770748088</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-6728640">
              <stringProp name="755">431.78610762414746</stringProp>
              <stringProp name="756">431.78610762414746</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1825089184">
              <stringProp name="756">446.2246381734863</stringProp>
              <stringProp name="757">446.2246381734863</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2900960">
              <stringProp name="757">460.6631687228249</stringProp>
              <stringProp name="758">460.6631687228249</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1633491840">
              <stringProp name="758">475.1016992721635</stringProp>
              <stringProp name="759">475.1016992721635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="821746583">
              <stringProp name="759">449.4549127765736</stringProp>
              <stringProp name="760">449.4549127765736</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-986553312">
              <stringProp name="760">423.8081262809834</stringProp>
              <stringProp name="761">423.8081262809834</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1765007072">
              <stringProp name="761">398.1613397853931</stringProp>
              <stringProp name="762">398.1613397853931</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="213864576">
              <stringProp name="762">372.5145532898032</stringProp>
              <stringProp name="763">372.5145532898032</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-924258752">
              <stringProp name="763">366.2597915209424</stringProp>
              <stringProp name="764">366.2597915209424</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1583322720">
              <stringProp name="764">360.0050297520814</stringProp>
              <stringProp name="765">360.0050297520814</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1564064000">
              <stringProp name="765">353.7502679832206</stringProp>
              <stringProp name="766">353.7502679832206</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1904242272">
              <stringProp name="766">347.4955062143597</stringProp>
              <stringProp name="767">347.4955062143597</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1728922656">
              <stringProp name="767">355.8889053273797</stringProp>
              <stringProp name="768">355.8889053273797</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1577408288">
              <stringProp name="768">364.2823044403999</stringProp>
              <stringProp name="769">364.2823044403999</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-540718409">
              <stringProp name="769">372.67570355342</stringProp>
              <stringProp name="770">372.67570355342</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="182094272">
              <stringProp name="770">381.06910266644</stringProp>
              <stringProp name="771">381.06910266644</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-3713952">
              <stringProp name="771">397.2127823595432</stringProp>
              <stringProp name="772">397.2127823595432</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="473763904">
              <stringProp name="772">413.3564620526465</stringProp>
              <stringProp name="773">413.3564620526465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2086298944">
              <stringProp name="773">429.5001417457499</stringProp>
              <stringProp name="774">429.5001417457499</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2014990720">
              <stringProp name="774">445.6438214388532</stringProp>
              <stringProp name="775">445.6438214388532</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1459136000">
              <stringProp name="775">448.1553860940015</stringProp>
              <stringProp name="776">448.1553860940015</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-314020384">
              <stringProp name="776">450.66695074914975</stringProp>
              <stringProp name="777">450.66695074914975</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1449532736">
              <stringProp name="777">453.1785154042981</stringProp>
              <stringProp name="778">453.1785154042981</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="246975360">
              <stringProp name="778">455.6900800594465</stringProp>
              <stringProp name="779">455.6900800594465</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="272453751">
              <stringProp name="779">434.8185215875683</stringProp>
              <stringProp name="780">434.8185215875683</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1994417152">
              <stringProp name="780">413.9469631156902</stringProp>
              <stringProp name="781">413.9469631156902</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="291784288">
              <stringProp name="781">393.075404643812</stringProp>
              <stringProp name="782">393.075404643812</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="763920128">
              <stringProp name="782">372.2038461719338</stringProp>
              <stringProp name="783">372.2038461719338</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="290957408">
              <stringProp name="783">395.1300443375136</stringProp>
              <stringProp name="784">395.1300443375136</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="234810848">
              <stringProp name="784">418.056242503093</stringProp>
              <stringProp name="785">418.056242503093</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1844734304">
              <stringProp name="785">440.9824406686727</stringProp>
              <stringProp name="786">440.9824406686727</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1507685312">
              <stringProp name="786">463.9086388342524</stringProp>
              <stringProp name="787">463.9086388342524</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1806356000">
              <stringProp name="787">455.09005846195714</stringProp>
              <stringProp name="788">455.09005846195714</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="319409184">
              <stringProp name="788">446.27147808966174</stringProp>
              <stringProp name="789">446.27147808966174</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1458690857">
              <stringProp name="789">437.4528977173665</stringProp>
              <stringProp name="790">437.4528977173665</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1541384032">
              <stringProp name="790">428.6343173450713</stringProp>
              <stringProp name="791">428.6343173450713</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-328292640">
              <stringProp name="791">434.1556476036196</stringProp>
              <stringProp name="792">434.1556476036196</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-544358048">
              <stringProp name="792">439.676977862168</stringProp>
              <stringProp name="793">439.676977862168</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-118311680">
              <stringProp name="793">445.19830812071626</stringProp>
              <stringProp name="794">445.19830812071626</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1458387904">
              <stringProp name="794">450.71963837926455</stringProp>
              <stringProp name="795">450.71963837926455</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-827319392">
              <stringProp name="795">453.75144037789386</stringProp>
              <stringProp name="796">453.75144037789386</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1081012992">
              <stringProp name="796">456.7832423765231</stringProp>
              <stringProp name="797">456.7832423765231</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-418185312">
              <stringProp name="797">459.8150443751523</stringProp>
              <stringProp name="798">459.8150443751523</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1755743840">
              <stringProp name="798">462.8468463737816</stringProp>
              <stringProp name="799">462.8468463737816</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="172712160">
              <stringProp name="799">439.7888279590705</stringProp>
              <stringProp name="800">439.7888279590705</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-326200032">
              <stringProp name="800">416.7308095443595</stringProp>
              <stringProp name="801">416.7308095443595</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1030154304">
              <stringProp name="801">393.6727911296484</stringProp>
              <stringProp name="802">393.6727911296484</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1021277056">
              <stringProp name="802">370.6147727149372</stringProp>
              <stringProp name="803">370.6147727149372</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-772898880">
              <stringProp name="803">395.8535500994181</stringProp>
              <stringProp name="804">395.8535500994181</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1861609472">
              <stringProp name="804">421.0923274838988</stringProp>
              <stringProp name="805">421.0923274838988</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1228655616">
              <stringProp name="805">446.3311048683798</stringProp>
              <stringProp name="806">446.3311048683798</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-647418976">
              <stringProp name="806">471.56988225286057</stringProp>
              <stringProp name="807">471.56988225286057</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-912687936">
              <stringProp name="807">479.65748266577646</stringProp>
              <stringProp name="808">479.65748266577646</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1305115040">
              <stringProp name="808">487.7450830786921</stringProp>
              <stringProp name="809">487.7450830786921</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-566796841">
              <stringProp name="809">495.8326834916078</stringProp>
              <stringProp name="810">495.8326834916078</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1701243296">
              <stringProp name="810">503.9202839045237</stringProp>
              <stringProp name="811">503.9202839045237</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1001624640">
              <stringProp name="811">505.9047967045706</stringProp>
              <stringProp name="812">505.9047967045706</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="341109600">
              <stringProp name="812">507.8893095046172</stringProp>
              <stringProp name="813">507.8893095046172</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1237564448">
              <stringProp name="813">509.873822304664</stringProp>
              <stringProp name="814">509.873822304664</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="525370560">
              <stringProp name="814">511.8583351047109</stringProp>
              <stringProp name="815">511.8583351047109</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2026716032">
              <stringProp name="815">499.7101828784488</stringProp>
              <stringProp name="816">499.7101828784488</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1412384896">
              <stringProp name="816">487.5620306521868</stringProp>
              <stringProp name="817">487.5620306521868</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="192861472">
              <stringProp name="817">475.4138784259246</stringProp>
              <stringProp name="818">475.4138784259246</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1162700288">
              <stringProp name="818">463.26572619966265</stringProp>
              <stringProp name="819">463.26572619966265</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1257426967">
              <stringProp name="819">452.0141838773003</stringProp>
              <stringProp name="820">452.0141838773003</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-287787328">
              <stringProp name="820">440.76264155493806</stringProp>
              <stringProp name="821">440.76264155493806</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1774237408">
              <stringProp name="821">429.5110992325758</stringProp>
              <stringProp name="822">429.5110992325758</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-344617344">
              <stringProp name="822">418.2595569102135</stringProp>
              <stringProp name="823">418.2595569102135</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1628233408">
              <stringProp name="823">458.898132446276</stringProp>
              <stringProp name="824">458.898132446276</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1011049440">
              <stringProp name="824">499.5367079823384</stringProp>
              <stringProp name="825">499.5367079823384</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1583799008">
              <stringProp name="825">540.175283518401</stringProp>
              <stringProp name="826">540.175283518401</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1014818112">
              <stringProp name="826">580.8138590544635</stringProp>
              <stringProp name="827">580.8138590544635</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1878114304">
              <stringProp name="827">550.5481707718942</stringProp>
              <stringProp name="828">550.5481707718942</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-578888640">
              <stringProp name="828">520.2824824893247</stringProp>
              <stringProp name="829">520.2824824893247</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2087885225">
              <stringProp name="829">490.0167942067554</stringProp>
              <stringProp name="830">490.0167942067554</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1196217184">
              <stringProp name="830">459.7511059241861</stringProp>
              <stringProp name="831">459.7511059241861</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2080407776">
              <stringProp name="831">481.98448612092005</stringProp>
              <stringProp name="832">481.98448612092005</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1978939648">
              <stringProp name="832">504.21786631765406</stringProp>
              <stringProp name="833">504.21786631765406</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1007807680">
              <stringProp name="833">526.451246514388</stringProp>
              <stringProp name="834">526.451246514388</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1944170656">
              <stringProp name="834">548.6846267111221</stringProp>
              <stringProp name="835">548.6846267111221</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1782527424">
              <stringProp name="835">532.5893730005846</stringProp>
              <stringProp name="836">532.5893730005846</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="61834304">
              <stringProp name="836">516.4941192900471</stringProp>
              <stringProp name="837">516.4941192900471</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-522305888">
              <stringProp name="837">500.3988655795096</stringProp>
              <stringProp name="838">500.3988655795096</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1103986496">
              <stringProp name="838">484.3036118689723</stringProp>
              <stringProp name="839">484.3036118689723</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="364089847">
              <stringProp name="839">477.7645343375677</stringProp>
              <stringProp name="840">477.7645343375677</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-771012288">
              <stringProp name="840">471.2254568061634</stringProp>
              <stringProp name="841">471.2254568061634</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="674415360">
              <stringProp name="841">464.6863792747589</stringProp>
              <stringProp name="842">464.6863792747589</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="973404256">
              <stringProp name="842">458.1473017433544</stringProp>
              <stringProp name="843">458.1473017433544</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-47248704">
              <stringProp name="843">470.9800299947245</stringProp>
              <stringProp name="844">470.9800299947245</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1855789888">
              <stringProp name="844">483.8127582460947</stringProp>
              <stringProp name="845">483.8127582460947</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-248397152">
              <stringProp name="845">496.6454864974648</stringProp>
              <stringProp name="846">496.6454864974648</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1322363040">
              <stringProp name="846">509.4782147488349</stringProp>
              <stringProp name="847">509.4782147488349</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="149180096">
              <stringProp name="847">496.42649102478975</stringProp>
              <stringProp name="848">496.42649102478975</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-264295616">
              <stringProp name="848">483.37476730074445</stringProp>
              <stringProp name="849">483.37476730074445</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1208757353">
              <stringProp name="849">470.3230435766993</stringProp>
              <stringProp name="850">470.3230435766993</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-702835328">
              <stringProp name="850">457.271319852654</stringProp>
              <stringProp name="851">457.271319852654</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1456114720">
              <stringProp name="851">484.4001376878252</stringProp>
              <stringProp name="852">484.4001376878252</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2048211360">
              <stringProp name="852">511.5289555229964</stringProp>
              <stringProp name="853">511.5289555229964</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1705701600">
              <stringProp name="853">538.6577733581676</stringProp>
              <stringProp name="854">538.6577733581676</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="792081664">
              <stringProp name="854">565.7865911933386</stringProp>
              <stringProp name="855">565.7865911933386</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1792020544">
              <stringProp name="855">563.5206586469418</stringProp>
              <stringProp name="856">563.5206586469418</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-561226464">
              <stringProp name="856">561.2547261005448</stringProp>
              <stringProp name="857">561.2547261005448</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="258972928">
              <stringProp name="857">558.9887935541476</stringProp>
              <stringProp name="858">558.9887935541476</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="767730752">
              <stringProp name="858">556.7228610077508</stringProp>
              <stringProp name="859">556.7228610077508</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-748218665">
              <stringProp name="859">537.2582724843462</stringProp>
              <stringProp name="860">537.2582724843462</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1384440096">
              <stringProp name="860">517.7936839609417</stringProp>
              <stringProp name="861">517.7936839609417</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1588622176">
              <stringProp name="861">498.329095437537</stringProp>
              <stringProp name="862">498.329095437537</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-38701696">
              <stringProp name="862">478.8645069141324</stringProp>
              <stringProp name="863">478.8645069141324</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1673860512">
              <stringProp name="863">499.5674081662645</stringProp>
              <stringProp name="864">499.5674081662645</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1999201760">
              <stringProp name="864">520.2703094183966</stringProp>
              <stringProp name="865">520.2703094183966</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="959108544">
              <stringProp name="865">540.9732106705286</stringProp>
              <stringProp name="866">540.9732106705286</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="84142688">
              <stringProp name="866">561.6761119226608</stringProp>
              <stringProp name="867">561.6761119226608</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-313353120">
              <stringProp name="867">534.0187392146254</stringProp>
              <stringProp name="868">534.0187392146254</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1857935616">
              <stringProp name="868">506.3613665065901</stringProp>
              <stringProp name="869">506.3613665065901</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1683501687">
              <stringProp name="869">478.7039937985548</stringProp>
              <stringProp name="870">478.7039937985548</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="455201760">
              <stringProp name="870">451.0466210905195</stringProp>
              <stringProp name="871">451.0466210905195</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1191165696">
              <stringProp name="871">472.3635777674242</stringProp>
              <stringProp name="872">472.3635777674242</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-183526912">
              <stringProp name="872">493.6805344443291</stringProp>
              <stringProp name="873">493.6805344443291</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2079600704">
              <stringProp name="873">514.9974911212339</stringProp>
              <stringProp name="874">514.9974911212339</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1931931968">
              <stringProp name="874">536.3144477981386</stringProp>
              <stringProp name="875">536.3144477981386</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="386818528">
              <stringProp name="875">527.1666205467282</stringProp>
              <stringProp name="876">527.1666205467282</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1491311648">
              <stringProp name="876">518.0187932953177</stringProp>
              <stringProp name="877">518.0187932953177</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1139701248">
              <stringProp name="877">508.870966043907</stringProp>
              <stringProp name="878">508.870966043907</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1481575648">
              <stringProp name="878">499.7231387924965</stringProp>
              <stringProp name="879">499.7231387924965</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-728693737">
              <stringProp name="879">503.68476712877407</stringProp>
              <stringProp name="880">503.68476712877407</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="107553216">
              <stringProp name="880">507.6463954650516</stringProp>
              <stringProp name="881">507.6463954650516</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-456583904">
              <stringProp name="881">511.60802380132907</stringProp>
              <stringProp name="882">511.60802380132907</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1024447712">
              <stringProp name="882">515.5696521376066</stringProp>
              <stringProp name="883">515.5696521376066</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1002760032">
              <stringProp name="883">516.6465650755032</stringProp>
              <stringProp name="884">516.6465650755032</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1883665216">
              <stringProp name="884">517.7234780133999</stringProp>
              <stringProp name="885">517.7234780133999</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1927550464">
              <stringProp name="885">518.8003909512967</stringProp>
              <stringProp name="886">518.8003909512967</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-2118268352">
              <stringProp name="886">519.8773038891933</stringProp>
              <stringProp name="887">519.8773038891933</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="502293472">
              <stringProp name="887">538.5396469617554</stringProp>
              <stringProp name="888">538.5396469617554</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="2037601312">
              <stringProp name="888">557.2019900343175</stringProp>
              <stringProp name="889">557.2019900343175</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1108764361">
              <stringProp name="889">575.8643331068797</stringProp>
              <stringProp name="890">575.8643331068797</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="672856288">
              <stringProp name="890">594.5266761794418</stringProp>
              <stringProp name="891">594.5266761794418</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1182728896">
              <stringProp name="891">563.4107287228597</stringProp>
              <stringProp name="892">563.4107287228597</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1971092416">
              <stringProp name="892">532.2947812662778</stringProp>
              <stringProp name="893">532.2947812662778</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-68768256">
              <stringProp name="893">501.1788338096957</stringProp>
              <stringProp name="894">501.1788338096957</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1406231296">
              <stringProp name="894">470.06288635311375</stringProp>
              <stringProp name="895">470.06288635311375</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="1390722720">
              <stringProp name="895">462.449618368491</stringProp>
              <stringProp name="896">462.449618368491</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="389037536">
              <stringProp name="896">454.836350383868</stringProp>
              <stringProp name="897">454.836350383868</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="541012672">
              <stringProp name="897">447.223082399245</stringProp>
              <stringProp name="898">447.223082399245</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1070118464">
              <stringProp name="898">439.60981441462224</stringProp>
              <stringProp name="899">439.60981441462224</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="-1820054016">
              <stringProp name="899">503.7298784781064</stringProp>
              <stringProp name="900">503.7298784781064</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="915931488">
              <stringProp name="900">567.8499425415906</stringProp>
              <stringProp name="901">567.8499425415906</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="930942176">
              <stringProp name="901">631.9700066050749</stringProp>
              <stringProp name="902">631.9700066050749</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
            <collectionProp name="527355648">
              <stringProp name="902">696.0900706685591</stringProp>
              <stringProp name="903">696.0900706685591</stringProp>
              <stringProp name="1800">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSF" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">50</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WelcomePing JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login JSF" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${jsfViewState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  </elementProp>
                  <elementProp name="login:password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:password</stringProp>
                  </elementProp>
                  <elementProp name="login:submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">Log in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:submit</stringProp>
                  </elementProp>
                  <elementProp name="login:uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login:uid</stringProp>
                  </elementProp>
                  <elementProp name="login_SUBMIT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login_SUBMIT</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/welcome.faces</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1024322212">Ready to Trade</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotesPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS1 open close" enabled="true">
                    <boolProp name="createNewConnection">true</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">open and close</stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuotePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:submit2" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:submit2</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:1:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:1:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:2:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:2:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:3:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:3:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:4:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">100</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:4:quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="789765197">DayTrader Quotes</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Stock" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">tobuy</stringProp>
                      <stringProp name="RegexExtractor.regex">s:([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="quotes:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:symbols</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:quantity</stringProp>
                        </elementProp>
                        <elementProp name="quotes:quotes:0:buy" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes:quotes:0:buy</stringProp>
                        </elementProp>
                        <elementProp name="quotes_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quotes_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/quote.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="837442055">been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PortfolioPing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Holdings" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">numHoldings</stringProp>
                      <stringProp name="RegexExtractor.regex">of Holdings: &lt;/b&gt;([1-9][0-9]*)&lt;/td&gt;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${__jexl(&quot;${numHoldings}&quot; != &quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell JSF" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${jsfViewState}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:_idcl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">portfolio:holdings:0:sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:_idcl</stringProp>
                          </elementProp>
                          <elementProp name="portfolio_SUBMIT" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">1</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio_SUBMIT</stringProp>
                          </elementProp>
                          <elementProp name="portfolio:symbols" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">portfolio:symbols</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/portfolio.faces</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="837442055">been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:uid</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:fullname</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:password</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:address</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:ccn</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:email</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Update Profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:submit</stringProp>
                        </elementProp>
                        <elementProp name="updateProfile:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">updateProfile:symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/account.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register_JSF" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RegisterPing" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="register:fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:fullname</stringProp>
                        </elementProp>
                        <elementProp name="register:address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:address</stringProp>
                        </elementProp>
                        <elementProp name="register:email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:email</stringProp>
                        </elementProp>
                        <elementProp name="register:uid" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:uid</stringProp>
                        </elementProp>
                        <elementProp name="register:password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:password</stringProp>
                        </elementProp>
                        <elementProp name="register:cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:cpassword</stringProp>
                        </elementProp>
                        <elementProp name="register:money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:money</stringProp>
                        </elementProp>
                        <elementProp name="register:ccn" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:ccn</stringProp>
                        </elementProp>
                        <elementProp name="register_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register_SUBMIT</stringProp>
                        </elementProp>
                        <elementProp name="register:submit" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">Register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">register:submit</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="874613025">Registration operation succeeded</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout_JSF" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomePing JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout JSF" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${jsfViewState}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:_idcl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">tradeHome:logoff</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:_idcl</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome:symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">s:0,s:1,s:2,s:3,s:4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome:symbols</stringProp>
                        </elementProp>
                        <elementProp name="tradeHome_SUBMIT" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">tradeHome_SUBMIT</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/tradehome.faces</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetViewState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">jsfViewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;javax\.faces\.ViewState&quot; id=&quot;j_id__v_0:javax\.faces\.ViewState:1&quot; value=&quot;([^&quot;]+)&quot;.*/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JSP" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>70.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">xxx</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">action</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=true" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="3327652">loop</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1902774694">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-487279901">Welcome to DayTrader</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${loop}</stringProp>
            </WhileController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Quotes" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(QUOTES,45.0)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1494573439">DayTrader: Quotes and Trading</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Home" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>16.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">home</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Portfolio" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>15.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Account" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="MarketSummary JSP" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>8.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WS2 existing" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server">${hostname}</stringProp>
                    <stringProp name="port">${port}</stringProp>
                    <stringProp name="path">/daytrader/marketsummary</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">{&quot;action&quot;:&quot;update&quot;}</stringProp>
                    <stringProp name="readTimeout">60000</stringProp>
                    <stringProp name="TestPlan.comments">use existing open connection </stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Buy" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(BUYS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">quotes</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbols" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${__Random(0,${maximumsid},tobuy)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbols</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Buy" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">buy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="symbol" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">s:${tobuy}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">symbol</stringProp>
                        </elementProp>
                        <elementProp name="quantity" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">${__Random(1,200)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">quantity</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="763316301">has been submitted</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Sell" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <stringProp name="ThroughputController.percentThroughput">${__P(SELLS,4)}</stringProp>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Portfolio" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">portfolio</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingID</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">NotFound</stringProp>
                      <stringProp name="RegexExtractor.match_number">0</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_holdingID_BOOL" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">firstHoldingIDBool</stringProp>
                      <stringProp name="RegexExtractor.regex">holdingID=([0-9]+)</stringProp>
                      <stringProp name="RegexExtractor.template">true</stringProp>
                      <stringProp name="RegexExtractor.default">false</stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">all</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="doSell" enabled="true">
                    <stringProp name="IfController.condition">${firstHoldingIDBool}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sell" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="action" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">sell</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">action</stringProp>
                          </elementProp>
                          <elementProp name="holdingID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.value">${firstHoldingID}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">holdingID</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="763316301">has been submitted</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                        <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Update" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>2.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">account</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">update_profile</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="userID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid:${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">userID</stringProp>
                        </elementProp>
                        <elementProp name="fullname" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rnd${__threadNum}${logincounter}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">fullname</stringProp>
                        </elementProp>
                        <elementProp name="password" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">password</stringProp>
                        </elementProp>
                        <elementProp name="address" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndAddress</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">address</stringProp>
                        </elementProp>
                        <elementProp name="cpassword" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">xxx</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">cpassword</stringProp>
                        </elementProp>
                        <elementProp name="creditcard" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndCC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">creditcard</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">rndEmail@email.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Register" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>1.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Page" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/register.jsp</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">register</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                        <elementProp name="Full Name" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Full Name</stringProp>
                        </elementProp>
                        <elementProp name="snail mail" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">first:${__Random(0,999,)} last:${__Random(0,4999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">snail mail</stringProp>
                        </elementProp>
                        <elementProp name="email" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">uid${logincounter}@${__Random(0,100,)}.com</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">email</stringProp>
                        </elementProp>
                        <elementProp name="user id" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">ru:${logincounter}${__threadNum}:${__time(HMS)}${__Random(0,999,)}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">user id</stringProp>
                        </elementProp>
                        <elementProp name="passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">passwd</stringProp>
                        </elementProp>
                        <elementProp name="confirm passwd" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">yyy</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">confirm passwd</stringProp>
                        </elementProp>
                        <elementProp name="money" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">1000000</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">money</stringProp>
                        </elementProp>
                        <elementProp name="Credit Card Number" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">123-fake-ccnum-456</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">Credit Card Number</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Logout" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">1</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>4.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="action" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.value">logout</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">action</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/daytrader/app</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1129050579">DayTrader Login</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="loop=false" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="3327652">loop</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="-544885953">
                        <stringProp name="97196323">false</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller JAX-RS" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">true</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>20.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quotes - JAX-RS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="symbols" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">s:${__Random(0,${maximumsid},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">symbols</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${hostname}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">daytrader/rest/quotes</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxthinkingtime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WS2 Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">${hostname}</stringProp>
            <stringProp name="port">${port}</stringProp>
            <stringProp name="path">/daytrader/marketsummary</stringProp>
            <stringProp name="readTimeout">60000</stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="PL" enabled="true">
        <collectionProp name="prometheus.collector_definitions">
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">rt as histogram</stringProp>
            <stringProp name="collector.metric_name">jmeter_rt_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,300,500,1000</stringProp>
            <stringProp name="listener.collector.listen_to">samples</stringProp>
            <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">rt as summary</stringProp>
            <stringProp name="collector.metric_name">jmeter_rt_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.5,0.5|0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">rsize as hist</stringProp>
            <stringProp name="collector.metric_name">jmeter_rsize_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,300,500,1000</stringProp>
            <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">rsize as sum</stringProp>
            <stringProp name="collector.metric_name">jmeter_rsize_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.5,0.5|0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">latency as hist</stringProp>
            <stringProp name="collector.metric_name">jmeter_latency_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,300,500,1000</stringProp>
            <stringProp name="listener.collector.measuring">Latency</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">latency as sum</stringProp>
            <stringProp name="collector.metric_name">jmeter_latency_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.5,0.5|0.75,0.5|0.95,0.1|0.99,0.01|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">Latency</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">idle time as hist</stringProp>
            <stringProp name="collector.metric_name">jmeter_idle_time_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,300,500,1000</stringProp>
            <stringProp name="listener.collector.measuring">IdleTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">idle time as sum</stringProp>
            <stringProp name="collector.metric_name">jmeter_idle_time_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.5,0.5|0.75,0.5|0.95,0.1|0.99,0.01|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">IdleTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">connect time as hist</stringProp>
            <stringProp name="collector.metric_name">jmeter_connect_time_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,300,500,1000</stringProp>
            <stringProp name="listener.collector.measuring">ConnectTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">connect time as sum</stringProp>
            <stringProp name="collector.metric_name">jmeter_connect_time_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.5,0.5|0.75,0.5|0.95,0.1|0.99,0.01|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">ConnectTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">count_total counter</stringProp>
            <stringProp name="collector.metric_name">jmeter_count_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.listen_to">samples</stringProp>
            <stringProp name="listener.collector.measuring">CountTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">failure_total counter</stringProp>
            <stringProp name="collector.metric_name">jmeter_failure_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">FailureTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">success_total counter</stringProp>
            <stringProp name="collector.metric_name">jmeter_success_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">jmeter_success_ratio</stringProp>
            <stringProp name="collector.metric_name">jmeter_success_ratio</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
          </elementProp>
        </collectionProp>
      </com.github.johrstrom.listener.PrometheusListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
